{
  "swagger": "2.0",
  "info": {
    "description": "The PARIS API is based on a REST achitecture, and is using JSON as data format.<br/>PARIS API is Stateless, the server does not store any state about the client session on the server side. Statelessness ensures that each service consumer request can be treated independently by the service.<br/>Authentication against the API is done using a combination of Basic Authentication and Token based authentication or API-Keys.<br/><br/>Â©2021 NORIA AS. All Rights Reserved. PARIS is a trademark of <a href=\"http://noria.no/\" target=\"_blank\">NORIA AS</a>.",
    "version": "4.7-202112021325",
    "title": "PARIS API"
  },
  "basePath": "/noria-dev/rest",
  "tags": [
    { "name": "System codes - Accounting codes" },
    { "name": "Accounting" },
    { "name": "System codes - Activity codes" },
    { "name": "Activities" },
    { "name": "System codes - Agreement codes" },
    { "name": "Agreements" },
    { "name": "Attachments" },
    { "name": "System codes - Authority Reports Codes" },
    { "name": "Authorization" },
    { "name": "Authorization Rules" },
    { "name": "System codes - Business breakdown" },
    { "name": "System codes - Claim codes" },
    { "name": "Claim Events" },
    { "name": "Claims" },
    { "name": "Claim Transactions" },
    { "name": "Constants" },
    { "name": "Coverage Declaration" },
    { "name": "Coverages" },
    { "name": "System codes - Currencies" },
    { "name": "System codes - Document Archive" },
    { "name": "Document Archive" },
    { "name": "Document Engine" },
    { "name": "System config - Document Notification Groups" },
    { "name": "Document Templates" },
    { "name": "Electronic Remittance" },
    { "name": "Email" },
    { "name": "Fleet Marine" },
    { "name": "Forms" },
    { "name": "System codes - Geographic codes" },
    { "name": "Global Search" },
    { "name": "System codes - Insurance codes" },
    { "name": "System codes - Object codes" },
    { "name": "Objects" },
    { "name": "Messages" },
    { "name": "Notes" },
    { "name": "Notifications" },
    { "name": "Offer Marine - Agreements" },
    { "name": "Offer Marine - Objects" },
    { "name": "Offer Marine - Sections" },
    { "name": "Offer Marine - Statistics" },
    { "name": "Offer Marine - Submissions" },
    { "name": "System codes - Person codes" },
    { "name": "Persons" },
    { "name": "Policy Covers" },
    { "name": "Premium Calculations - Private" },
    { "name": "Premium Calculations" },
    { "name": "Premiums" },
    { "name": "Read Access Log" },
    { "name": "Responsibles" },
    { "name": "Role types" },
    { "name": "Signatures" },
    { "name": "System codes - Languages" },
    { "name": "System" },
    { "name": "System Settings" },
    { "name": "Tags" },
    { "name": "Timeline" },
    { "name": "System config - Translation " },
    { "name": "Used hours" },
    { "name": "User Notifications" },
    { "name": "System config - User Notification Types" },
    { "name": "Users" },
    { "name": "View Resolver" },
    { "name": "Work Places" }
  ],
  "security": [{ "Authorization": ["*"] }, { "paris-api-key": ["*"] }],
  "paths": {
    "/systemcodes/accountingcodes/bankaccounts": {
      "get": {
        "tags": ["System codes - Accounting codes"],
        "operationId": "getBankAccounts_2",
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "busnBranch",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BankAccount" }
            }
          }
        }
      }
    },
    "/systemcodes/accountingcodes/generalledgeraccounts": {
      "get": {
        "tags": ["System codes - Accounting codes"],
        "operationId": "getGeneralLedgerAccounts_1",
        "parameters": [
          {
            "name": "claimUsage",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/GeneralLedgerAccount" }
            }
          }
        }
      }
    },
    "/accounting/personalledger": {
      "get": {
        "tags": ["Accounting"],
        "operationId": "personalLedgerSearch_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountingGroup",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AS_SPEC_IO_0",
              "DIRECT_1",
              "RECEIVED_2",
              "CEDED_3",
              "CLAIM_PAYMENTS_4",
              "AGENT_7",
              "TREATIES_8",
              "INTERIMS_9"
            ]
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["OPEN_O", "SETTLED_S"]
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "billingNo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "claimId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "premiumId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transactionTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "BALANCE_0",
                "CASH_CL_BALANCE_1",
                "BALANCE_CORRECT_10",
                "PREMIUM_DEPOT_11",
                "CLAIM_DEPOT_12",
                "XL_PREMIUM_13",
                "XL_CLAIM_14",
                "PROFIT_COMM_15",
                "INTEREST_16",
                "REMIT_17",
                "RELPREM_DEPOT_18",
                "REL_CLM_DEPOT_19",
                "PREMIUM_2",
                "INTRPREMDEPOT_20",
                "INTRCLMDEPOT_21",
                "COLLECT_FEE_22",
                "ADM_FEE_23",
                "COMMISSION_24",
                "TAX_25",
                "NATPREM_26",
                "DUTY_PAYMENT_27",
                "INST_ADDENDUM_28",
                "ACCREBATE_29",
                "RETURN_PREMIUM_3",
                "NSCOMM_30",
                "LAST_INSTALMENT_31",
                "RELEASE_CALL_32",
                "OTHER_EXPENSES_33",
                "CLAIM_4",
                "CASH_CLAIM_5",
                "REFUND_6",
                "REMITTANCE_7",
                "BET_KORR_77",
                "VARIOUS_8",
                "AS_LOST_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "originalInsuredIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "integer", "format": "int64" },
            "collectionFormat": "multi"
          },
          {
            "name": "fromYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeInterests",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeInterests",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "bordereauReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "total",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ACCOUNTING_GROUP",
              "CURRENCY",
              "DUE_DATE",
              "DOCUMENT_DATE",
              "CALLED_TIMES",
              "REFERENCE_NAME",
              "INTEREST_REFERENCE",
              "DOCUMENT_NUMBER",
              "REFERENCE_NUMBER",
              "BORDEREAU_REFERENCE",
              "CALL_DATE",
              "VALID_DATE",
              "SETTLED_DATE",
              "TRANSACTION_TYPE",
              "CREATED_BY",
              "FROM_DATE",
              "TO_DATE",
              "COMMENT",
              "AMOUNT"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonalLedgerViewSearchResult" }
          }
        }
      }
    },
    "/systemcodes/activitygroups": {
      "get": {
        "tags": ["System codes - Activity codes"],
        "operationId": "getActivityGroups_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ActivityGroup" }
            }
          }
        }
      }
    },
    "/systemcodes/activitycategories": {
      "get": {
        "tags": ["System codes - Activity codes"],
        "operationId": "getActivityCategories_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ActivityCategory" }
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "get": {
        "tags": ["Activities"],
        "operationId": "get_22",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Activity" }
          }
        }
      }
    },
    "/activities": {
      "get": {
        "tags": ["Activities"],
        "operationId": "search_19",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "reminderActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "reminderFromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "reminderToDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACTIVE_A", "CANCELLED_C", "HISTORY_H", "TREATED_T"]
          },
          {
            "name": "includeRead",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromSignature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toSignature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "STATUS",
              "DUE_DATE",
              "SUBJECT",
              "FROM_SIGNATURE",
              "HANDLER",
              "CODE_VALUE",
              "CREATED",
              "UPDATED"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultActivity" }
          }
        }
      },
      "post": {
        "tags": ["Activities"],
        "operationId": "create_17",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Activity" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Activity" }
          }
        }
      },
      "put": {
        "tags": ["Activities"],
        "operationId": "update_19",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Activity" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Activity" }
          }
        }
      }
    },
    "/activities/init": {
      "post": {
        "tags": ["Activities"],
        "operationId": "init_10",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ActivityInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Activity" }
          }
        }
      }
    },
    "/activities/count": {
      "get": {
        "tags": ["Activities"],
        "operationId": "getCount_5",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "reminderActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "reminderFromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "reminderToDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACTIVE_A", "CANCELLED_C", "HISTORY_H", "TREATED_T"]
          },
          {
            "name": "includeRead",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromSignature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toSignature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "STATUS",
              "DUE_DATE",
              "SUBJECT",
              "FROM_SIGNATURE",
              "HANDLER",
              "CODE_VALUE",
              "CREATED",
              "UPDATED"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/activities/{id}/comments": {
      "post": {
        "tags": ["Activities"],
        "operationId": "createComment_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        }
      },
      "put": {
        "tags": ["Activities"],
        "operationId": "updateComment_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        }
      }
    },
    "/activities/{id}/markasread": {
      "put": {
        "tags": ["Activities"],
        "operationId": "markAsRead_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/activities/unreadcount": {
      "get": {
        "tags": ["Activities"],
        "operationId": "getUnreadCount_3",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/activities/markallasread": {
      "put": {
        "tags": ["Activities"],
        "operationId": "markAllAsRead_2",
        "parameters": [],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/activities/{id}/dismissreminder": {
      "put": {
        "tags": ["Activities"],
        "operationId": "dismissReminder_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/activities/{id}/history": {
      "get": {
        "tags": ["Activities"],
        "operationId": "getActivityHistory_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Activity" }
            }
          }
        }
      }
    },
    "/activities/comments": {
      "get": {
        "tags": ["Activities"],
        "operationId": "searchComments_2",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "PRIORITY", "CREATED", "UPDATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultActivityComment" }
          }
        }
      }
    },
    "/activities/comments/{commentId}": {
      "delete": {
        "tags": ["Activities"],
        "operationId": "deleteComment_2",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/activities/comments/count": {
      "get": {
        "tags": ["Activities"],
        "operationId": "getCommentCount_2",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "PRIORITY", "CREATED", "UPDATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/systemcodes/agreementcodes/ordercodes": {
      "get": {
        "tags": ["System codes - Agreement codes"],
        "operationId": "getOrderCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OrderCode" }
            }
          }
        }
      }
    },
    "/systemcodes/agreementcodes/lostcodes": {
      "get": {
        "tags": ["System codes - Agreement codes"],
        "operationId": "getLostCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LostCode" }
            }
          }
        }
      }
    },
    "/systemcodes/agreementcodes/agreementtypes": {
      "get": {
        "tags": ["System codes - Agreement codes"],
        "operationId": "getAgreementTypes_1",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["All", "Broker"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MARINE_1",
                  "AQUACULTURE_10",
                  "PI_11",
                  "ENERGY_2",
                  "OIL_COMPANY_21",
                  "CARGO_3",
                  "PROPERTY_4",
                  "AVIATION_5",
                  "PRIVATE_50",
                  "WAR_6",
                  "NON_MARINE_7",
                  "COASTAL_MARINE_8",
                  "BUILDERS_RISK_9"
                ]
              }
            }
          }
        }
      }
    },
    "/agreements/{id}": {
      "get": {
        "tags": ["Agreements"],
        "operationId": "get",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Agreement" }
          }
        }
      }
    },
    "/agreements/update": {
      "put": {
        "tags": ["Agreements"],
        "operationId": "update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Agreement" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Agreement" }
          }
        }
      }
    },
    "/agreements/init": {
      "post": {
        "tags": ["Agreements"],
        "operationId": "init",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/AgreementInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Agreement" }
          }
        }
      }
    },
    "/agreements/create": {
      "post": {
        "tags": ["Agreements"],
        "operationId": "create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Agreement" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Agreement" }
          }
        }
      }
    },
    "/agreements": {
      "get": {
        "tags": ["Agreements"],
        "operationId": "searchAgreements_2",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status1",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CANCEL_C",
              "ESTABLISHED_E",
              "OFFER_O",
              "QUOTE_Q",
              "WORK_W"
            ]
          },
          {
            "name": "status2",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACCEPTED_A", "OPEN_O", "REFUSED_R", "WORK_W"]
          },
          {
            "name": "agreementTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARINE_1",
                "AQUACULTURE_10",
                "PI_11",
                "ENERGY_2",
                "OIL_COMPANY_21",
                "CARGO_3",
                "PROPERTY_4",
                "AVIATION_5",
                "PRIVATE_50",
                "WAR_6",
                "NON_MARINE_7",
                "COASTAL_MARINE_8",
                "BUILDERS_RISK_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_ID",
              "YEAR",
              "NUMBER",
              "NAME",
              "SOURCE",
              "ORIGINAL_INSURED",
              "START_DATE",
              "END_DATE",
              "STATUS1",
              "STATUS2",
              "UNDERWRITER"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "busnSection",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultAgreement" }
          }
        }
      }
    },
    "/agreements/{id}/renewtoofferparams/init": {
      "post": {
        "tags": ["Agreements"],
        "operationId": "initRenewToOffer_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/AgreementRenewToOfferParams" }
          }
        }
      }
    },
    "/agreements/{id}/roles": {
      "get": {
        "tags": ["Agreements"],
        "operationId": "getAgreementRoles_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AgreementRole" }
            }
          }
        }
      },
      "post": {
        "tags": ["Agreements"],
        "operationId": "changeRoles_5",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AgreementRole" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AgreementRole" }
            }
          }
        }
      }
    },
    "/agreements/{id}/renewtooffer": {
      "post": {
        "tags": ["Agreements"],
        "operationId": "renewToOffer_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/AgreementRenewToOfferParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      }
    },
    "/agreements/{id}/summary": {
      "get": {
        "tags": ["Agreements"],
        "operationId": "getSummary_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/AgreementSummary" }
          }
        }
      }
    },
    "/agreements/{id}/roles/init": {
      "post": {
        "tags": ["Agreements"],
        "operationId": "initRole_5",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/AgreementRole" }
          }
        }
      }
    },
    "/agreements/{id}/generatechangeoffer": {
      "post": {
        "tags": ["Agreements"],
        "operationId": "generateChangeOffer_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AgreementGenerateChangeOfferParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      }
    },
    "/agreements/{id}/renewtoofferparams/inittomarked": {
      "post": {
        "tags": ["Agreements"],
        "operationId": "initRenewToOfferToMarked_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/AgreementRenewToOfferParams" }
          }
        }
      }
    },
    "/attachments/{id}": {
      "get": {
        "tags": ["Attachments"],
        "operationId": "get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Attachment" }
          }
        }
      },
      "delete": {
        "tags": ["Attachments"],
        "operationId": "delete_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/attachments": {
      "get": {
        "tags": ["Attachments"],
        "operationId": "search",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachmentType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM",
              "OBJECT",
              "AGREEMENT",
              "CLAIM_INGOING_INVOICE",
              "FORM_SUBMISSION",
              "NOTE_ACTIVITY",
              "PERSON",
              "PERSON_RESPONSIBLE",
              "MESSAGE"
            ]
          },
          {
            "name": "attachmentKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeCancelled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "DESCRIPTION",
              "REFERENCE",
              "CATEGORY",
              "CREATED",
              "VALID_PER_DATE"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultAttachment" }
          }
        }
      },
      "post": {
        "tags": ["Attachments"],
        "operationId": "create_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "fileName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachmentType",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachmentKey",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "folderId",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "data",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Attachment" }
          }
        }
      }
    },
    "/attachments/count": {
      "get": {
        "tags": ["Attachments"],
        "operationId": "getCount",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachmentType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM",
              "OBJECT",
              "AGREEMENT",
              "CLAIM_INGOING_INVOICE",
              "FORM_SUBMISSION",
              "NOTE_ACTIVITY",
              "PERSON",
              "PERSON_RESPONSIBLE",
              "MESSAGE"
            ]
          },
          {
            "name": "attachmentKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeCancelled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "DESCRIPTION",
              "REFERENCE",
              "CATEGORY",
              "CREATED",
              "VALID_PER_DATE"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/attachments/global/valid": {
      "get": {
        "tags": ["Attachments"],
        "operationId": "getValidGlobalAttachment_1",
        "parameters": [
          {
            "name": "globalAttachmentType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["GLOBAL_CONDITIONS_SET"]
          },
          {
            "name": "reference",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "validPerDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Attachment" }
          }
        }
      }
    },
    "/attachments/global": {
      "get": {
        "tags": ["Attachments"],
        "operationId": "getGlobalAttachments_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "globalAttachmentType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["GLOBAL_CONDITIONS_SET"]
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "validDateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "validDateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "DESCRIPTION",
              "REFERENCE",
              "CATEGORY",
              "CREATED",
              "VALID_PER_DATE"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultAttachment" }
          }
        }
      },
      "post": {
        "tags": ["Attachments"],
        "operationId": "createGlobalAttachment_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "globalAttachmentType",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "validPerDate",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "data",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Attachment" }
          }
        }
      }
    },
    "/systemcodes/authorityreportscodes/fortsector": {
      "get": {
        "tags": ["System codes - Authority Reports Codes"],
        "operationId": "getFortSectorCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FortSectorCode" }
            }
          }
        }
      }
    },
    "/systemcodes/authorityreportscodes/forttrade": {
      "get": {
        "tags": ["System codes - Authority Reports Codes"],
        "operationId": "getFortTradeCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FortTradeCode" }
            }
          }
        }
      }
    },
    "/auth/external/tokens": {
      "post": {
        "tags": ["Authorization"],
        "operationId": "createTokens_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Credentials" }
          },
          {
            "name": "reauthorize",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Token" }
            }
          }
        }
      }
    },
    "/auth/{signatureId}/token": {
      "get": {
        "tags": ["Authorization"],
        "operationId": "createToken_1",
        "parameters": [
          {
            "name": "signatureId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/authorizationrules/simple/default": {
      "get": {
        "tags": ["Authorization Rules"],
        "operationId": "getDefaultSimpleAuthorizationRule_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "ACCOUNTING_ACC",
              "ACCOUNT_G_ACG",
              "CLAIM_CLM",
              "CLM_PRPAY_CLP",
              "DOCUMENT_DOC",
              "PLEDGER_FIB",
              "PREMIUM_INS"
            ]
          },
          {
            "name": "claimId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/AuthorizationRule" }
          }
        }
      }
    },
    "/authorizationrules/simple": {
      "get": {
        "tags": ["Authorization Rules"],
        "operationId": "getSimpleAuthorizationRules_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "ACCOUNTING_ACC",
              "ACCOUNT_G_ACG",
              "CLAIM_CLM",
              "CLM_PRPAY_CLP",
              "DOCUMENT_DOC",
              "PLEDGER_FIB",
              "PREMIUM_INS"
            ]
          },
          {
            "name": "claimId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AuthorizationRule" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/claimdepartments": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getClaimDepartmentCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimDepartmentCode" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/busnclasses": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getBusnClasses_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BusnClass" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/busnregions": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getBusnRegions_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BusnRegion" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/busndivisions": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getBusnDivisions_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BusnDivision" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/interests": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getInterests_1",
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Interest" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/conditions": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getConditions_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Condition" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/offices": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getOffices_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Office" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/busnsections": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getBusnSections_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BusnSection" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/busnbranches": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getBusnBranches_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BusnBranch" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/teams": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getTeams_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Team" }
            }
          }
        }
      }
    },
    "/systemcodes/businessbreakdown/busnsubclasses": {
      "get": {
        "tags": ["System codes - Business breakdown"],
        "operationId": "getBusnSubClasses_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BusnSubClass" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/energylossdamagecodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getEnergyLossDamageCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EnergyLossDamageCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/energycausecodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getEnergyCauseCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EnergyCauseCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/nonmarineclaimcauses": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getNonmarineClaimCauses_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nonmarineClaimEffect",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NonmarineClaimCause" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/energylosslocationcodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getEnergyLossLocationCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EnergyLossLocationCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/detailcasualties": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getDetailCasualties_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DetailCasualty" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/nonmarineclaimeffects": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getNonmarineClaimEffects_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainEvent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "generalClaimCause",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NonmarineClaimEffect" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/energylossfunctioncodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getEnergyLossFunctionCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EnergyLossFunctionCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/generalclaimcauses": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getGeneralClaimCauses_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detailCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nonmarineClaimEffect",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nonmarineClaimCause",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/GeneralClaimCause" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/claimcategories": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getClaimCategories_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimCategory" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/liabilitycodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getLiabilityCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LiabilityCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/recoverycodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getRecoveryCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RecoveryCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/claimplaces": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getClaimPlaces_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimPlace" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/mainevents": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getMainEvents_1",
        "parameters": [
          {
            "name": "superEvent",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COLLISION_1",
              "HEAVY_WEATHER_2",
              "FIREEXPLOSION_3",
              "XL_4",
              "OTHER_INCIDENT_9",
              "CARGO_A",
              "COLLISION_B",
              "CONTACT_C",
              "MACHEQUIPMENT_D",
              "DEFENCE_E",
              "FIREEXPLOSION_F",
              "GROUNDING_G",
              "HULLSTRUCTFAILU_H",
              "POLLUTION_J",
              "LOSS_OF_STABILI_L",
              "WLL_INCIDENT_M",
              "NOT_RELEVANT_N",
              "PERSON_P",
              "SURVEXAMQUERY_S",
              "WEATHERNATDIS_W",
              "NOT_IN_19_X",
              "OTHER_Z"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MainEvent" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/claimcodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getClaimCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/maincasualties": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getMainCasualties_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "superEvent",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COLLISION_1",
              "HEAVY_WEATHER_2",
              "FIREEXPLOSION_3",
              "XL_4",
              "OTHER_INCIDENT_9",
              "CARGO_A",
              "COLLISION_B",
              "CONTACT_C",
              "MACHEQUIPMENT_D",
              "DEFENCE_E",
              "FIREEXPLOSION_F",
              "GROUNDING_G",
              "HULLSTRUCTFAILU_H",
              "POLLUTION_J",
              "LOSS_OF_STABILI_L",
              "WLL_INCIDENT_M",
              "NOT_RELEVANT_N",
              "PERSON_P",
              "SURVEXAMQUERY_S",
              "WEATHERNATDIS_W",
              "NOT_IN_19_X",
              "OTHER_Z"
            ]
          },
          {
            "name": "mainEvent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MainCasualty" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/taucodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getTauCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TauCode" }
            }
          }
        }
      }
    },
    "/systemcodes/claimcodes/paymentcodes": {
      "get": {
        "tags": ["System codes - Claim codes"],
        "operationId": "getPaymentCodes_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subClaimType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PaymentCode" }
            }
          }
        }
      }
    },
    "/claimevents/{id}": {
      "get": {
        "tags": ["Claim Events"],
        "operationId": "get_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimEvent" }
          }
        }
      }
    },
    "/claimevents": {
      "get": {
        "tags": ["Claim Events"],
        "operationId": "search_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "superEvent",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COLLISION_1",
              "HEAVY_WEATHER_2",
              "FIREEXPLOSION_3",
              "XL_4",
              "OTHER_INCIDENT_9",
              "CARGO_A",
              "COLLISION_B",
              "CONTACT_C",
              "MACHEQUIPMENT_D",
              "DEFENCE_E",
              "FIREEXPLOSION_F",
              "GROUNDING_G",
              "HULLSTRUCTFAILU_H",
              "POLLUTION_J",
              "LOSS_OF_STABILI_L",
              "WLL_INCIDENT_M",
              "NOT_RELEVANT_N",
              "PERSON_P",
              "SURVEXAMQUERY_S",
              "WEATHERNATDIS_W",
              "NOT_IN_19_X",
              "OTHER_Z"
            ]
          },
          {
            "name": "mainEvent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areaCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "agreementType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MARINE_1",
              "AQUACULTURE_10",
              "PI_11",
              "ENERGY_2",
              "OIL_COMPANY_21",
              "CARGO_3",
              "PROPERTY_4",
              "AVIATION_5",
              "PRIVATE_50",
              "WAR_6",
              "NON_MARINE_7",
              "COASTAL_MARINE_8",
              "BUILDERS_RISK_9"
            ]
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EVENT_ID",
              "EVENT_DATE",
              "EVENT_NUMBER",
              "SUPER_EVENT",
              "MAIN_EVENT",
              "AREA_CODE",
              "AGREEMENT_TYPE",
              "DESCRIPTION"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultClaimEvent" }
          }
        }
      },
      "post": {
        "tags": ["Claim Events"],
        "operationId": "create_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimEvent" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimEvent" }
          }
        }
      },
      "put": {
        "tags": ["Claim Events"],
        "operationId": "update_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimEvent" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimEvent" }
          }
        }
      }
    },
    "/claimevents/init": {
      "post": {
        "tags": ["Claim Events"],
        "operationId": "init_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimEventInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimEvent" }
          }
        }
      }
    },
    "/claimevents/{id}/moveclaims": {
      "post": {
        "tags": ["Claim Events"],
        "operationId": "moveClaimsToEvent_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "toClaimEventId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/claims/{id}": {
      "get": {
        "tags": ["Claims"],
        "operationId": "get_3",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "storeInHistory",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      }
    },
    "/claims": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getClaims_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimant",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "claimLeader",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "claimHandler",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimAdjuster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE_1",
                "CLM_CLOSED_2",
                "CLM_REOPEN_3",
                "CLM_RCLOSED_4",
                "DELETED_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "office",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "division",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "section",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "businessClass",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "interest",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimEvent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRoleType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRolePerson",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "claimRoleReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRoleNote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agreementTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARINE_1",
                "AQUACULTURE_10",
                "PI_11",
                "ENERGY_2",
                "OIL_COMPANY_21",
                "CARGO_3",
                "PROPERTY_4",
                "AVIATION_5",
                "PRIVATE_50",
                "WAR_6",
                "NON_MARINE_7",
                "COASTAL_MARINE_8",
                "BUILDERS_RISK_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "agreementRateModel",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["STANDARD_0", "BROKER_1"]
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM_ID",
              "COVERAGE_ID",
              "CLAIMANT",
              "ORIGINAL_INSURED",
              "SOURCE",
              "CLAIM_HANDLER",
              "INTEREST",
              "CLAIM_DATE",
              "LAST_TREATMENT_DATE",
              "STATUS",
              "CLAIM_LEADER",
              "TEXT",
              "AGREEMENT_NAME"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "claimObjectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "placeOfDamage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meansOfTransport",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transportDocument",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultClaim" }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "create_3",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Claim" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      },
      "put": {
        "tags": ["Claims"],
        "operationId": "update_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Claim" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      }
    },
    "/claims/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "init_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      }
    },
    "/claims/{id}/delete": {
      "post": {
        "tags": ["Claims"],
        "operationId": "delete",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      }
    },
    "/claims/{id}/close": {
      "post": {
        "tags": ["Claims"],
        "operationId": "close_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimCloseParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      }
    },
    "/claims/{id}/open": {
      "post": {
        "tags": ["Claims"],
        "operationId": "open_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      }
    },
    "/claims/search": {
      "get": {
        "tags": ["Claims"],
        "operationId": "search_2",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimant",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "claimLeader",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "claimHandler",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimAdjuster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE_1",
                "CLM_CLOSED_2",
                "CLM_REOPEN_3",
                "CLM_RCLOSED_4",
                "DELETED_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "office",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "division",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "section",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "businessClass",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "interest",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimEvent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRoleType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRolePerson",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "claimRoleReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRoleNote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agreementTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARINE_1",
                "AQUACULTURE_10",
                "PI_11",
                "ENERGY_2",
                "OIL_COMPANY_21",
                "CARGO_3",
                "PROPERTY_4",
                "AVIATION_5",
                "PRIVATE_50",
                "WAR_6",
                "NON_MARINE_7",
                "COASTAL_MARINE_8",
                "BUILDERS_RISK_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "agreementRateModel",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["STANDARD_0", "BROKER_1"]
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM_ID",
              "COVERAGE_ID",
              "CLAIMANT",
              "ORIGINAL_INSURED",
              "SOURCE",
              "CLAIM_HANDLER",
              "INTEREST",
              "CLAIM_DATE",
              "LAST_TREATMENT_DATE",
              "STATUS",
              "CLAIM_LEADER",
              "TEXT",
              "AGREEMENT_NAME"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "claimObjectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "placeOfDamage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meansOfTransport",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transportDocument",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultClaimView" }
          }
        }
      }
    },
    "/claims/{id}/ingoinginvoices": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getIngoingInvoices_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ORDINARY_O", "PAY_IN_ADVANCE_P", "REPLACED_R", "WORK_W"]
          },
          {
            "name": "toSourceOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "interestToDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimIngoingInvoice" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "createIngoingInvoice_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimIngoingInvoice" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimIngoingInvoice" }
          }
        }
      }
    },
    "/claims/{id}/payments/electronicremittance/notremitted": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getPaymentsNotRemitted_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimPaymentsNotRemitted" }
            }
          }
        }
      }
    },
    "/claims/{id}/payments/ingoinginvoices": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getIngoingInvoicesPayments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimPayment" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "createIngoingInvoicesPayments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateIngoingInvoicesPaymentsParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimPayment" }
            }
          }
        }
      }
    },
    "/claims/{id}/accountingpercategory": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getClaimAccountingPrCat_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeClaimCategories",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/ClaimAccountingPerCategoryResult"
            }
          }
        }
      }
    },
    "/claims/payments/insurercollection/insurer": {
      "post": {
        "tags": ["Claims"],
        "operationId": "collectPaymentFromInsurer_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ClaimPaymentInsurerCollectionParams"
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/claims/{id}/payments/electronicremittance/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initElectronicRemittanceOnPayments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ElectronicRemittanceOnPaymentsInitParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/claims/payments/insurercollection/beneficiary": {
      "post": {
        "tags": ["Claims"],
        "operationId": "settlePaymentsToBeneficiary_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ClaimPaymentInsurerCollectionParams"
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/claims/payments/{id}/insurercollection": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getInsurerCollectionStatus_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/ClaimPaymentInsurerCollectionStatus"
            }
          }
        }
      }
    },
    "/claims/{id}/internalroles": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getClaimInternalRoles_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimInternalRole" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "changeInternalRoles_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimInternalRole" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimInternalRole" }
            }
          }
        }
      }
    },
    "/claims/payments/{id}/authorizationrule": {
      "put": {
        "tags": ["Claims"],
        "operationId": "changeAuthorizationRule_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/AuthorizationRule" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        }
      }
    },
    "/claims/{id}/accountingperdocno": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getClaimAccountingPrDocno_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimAccountingPerDocNoResult" }
          }
        }
      }
    },
    "/claims/useddeductibles/delete/{id}": {
      "delete": {
        "tags": ["Claims"],
        "operationId": "deleteUsedDeductible_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/claims/{id}/receivedbordereau": {
      "post": {
        "tags": ["Claims"],
        "operationId": "createReceivedBordereau_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimReceivedBordereau" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimReceivedBordereau" }
          }
        }
      }
    },
    "/claims/{id}/payments/coshares/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initCoSharePayments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "groupedPayments",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimCoShare" }
          }
        }
      }
    },
    "/claims/calculatesickleavedays": {
      "get": {
        "tags": ["Claims"],
        "operationId": "calculateSickLeaveDays_1",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "deductibleDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/claims/ingoinginvoices": {
      "put": {
        "tags": ["Claims"],
        "operationId": "updateIngoingInvoice_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimIngoingInvoice" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimIngoingInvoice" }
          }
        }
      }
    },
    "/claims/{id}/internalexpenses": {
      "put": {
        "tags": ["Claims"],
        "operationId": "updateClaimInternalExpenses_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimInternalExpenses" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSummary" }
          }
        }
      }
    },
    "/claims/{id}/receivedbordereau/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initReceivedBordereau_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimReceivedBordereau" }
          }
        }
      }
    },
    "/claims/{id}/payments/einvoice": {
      "post": {
        "tags": ["Claims"],
        "operationId": "createPaymentWithEInvoice_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "claimPayment",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerIdentificationNumber",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "markup",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "producedDocument",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachments",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": { "type": "file" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        }
      }
    },
    "/claims/{id}/payments/coshares": {
      "post": {
        "tags": ["Claims"],
        "operationId": "saveCoSharePayments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimCoShare" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/claims/useddeductibles": {
      "put": {
        "tags": ["Claims"],
        "operationId": "updateUsedDeductible_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimUsedDeductible" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimUsedDeductible" }
          }
        }
      }
    },
    "/claims/{id}/casualtysalary": {
      "put": {
        "tags": ["Claims"],
        "operationId": "updateClaimCasualtySalary_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimCasualtySalary" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSummary" }
          }
        }
      }
    },
    "/claims/{id}/settlebalance": {
      "post": {
        "tags": ["Claims"],
        "operationId": "createSettleBalance_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimSettleBalance" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSettleBalance" }
          }
        }
      }
    },
    "/claims/guarantees/{id}/coshares/calculateparts": {
      "post": {
        "tags": ["Claims"],
        "operationId": "calculateCoShareParts_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CoShare" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CoShare" }
            }
          }
        }
      }
    },
    "/claims/{id}/useddeductibles": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getUsedDeductibles_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimUsedDeductible" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "createUsedDeductible_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimUsedDeductible" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimUsedDeductible" }
          }
        }
      }
    },
    "/claims/payments/coshares/calculatepayments": {
      "post": {
        "tags": ["Claims"],
        "operationId": "calculateCoSharePayments_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimCoShare" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimCoShare" }
          }
        }
      }
    },
    "/claims/{id}/operations": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getOperations_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimOperations" }
          }
        }
      }
    },
    "/claims/guarantees/{id}/coshares": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getCoShares_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CoShare" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "saveCoShares_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CoShare" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimGuarantee" }
            }
          }
        }
      }
    },
    "/claims/payments/{id}/reset": {
      "post": {
        "tags": ["Claims"],
        "operationId": "resetPayment_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "exchangeDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/claims/useddeductibles/{id}": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getUsedDeductible_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimUsedDeductible" }
          }
        }
      }
    },
    "/claims/{id}/settlebalance/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initSettleBalance_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSettleBalance" }
          }
        }
      }
    },
    "/claims/guarantees": {
      "put": {
        "tags": ["Claims"],
        "operationId": "updateGuarantee_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimGuarantee" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimGuarantee" }
          }
        }
      }
    },
    "/claims/{id}/statushistory": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getStatusHistory_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimStatusHistory" }
            }
          }
        }
      }
    },
    "/claims/ingoinginvoices/{id}": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getIngoingInvoice_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimIngoingInvoice" }
          }
        }
      }
    },
    "/claims/{id}/reserves/history": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getReservesHistory_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimReserveHistory" }
            }
          }
        }
      }
    },
    "/claims/{id}/ingoinginvoices/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initIngoingInvoice_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimIngoingInvoice" }
          }
        }
      }
    },
    "/claims/{id}/placement": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getPlacement_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimPlacement" }
            }
          }
        }
      }
    },
    "/claims/{id}/settlesofar": {
      "post": {
        "tags": ["Claims"],
        "operationId": "settleSoFar_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSummary" }
          }
        }
      }
    },
    "/claims/{id}/guarantees/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initGuarantee_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimGuarantee" }
          }
        }
      }
    },
    "/claims/guarantees/{id}/ourshare": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getOurShare_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "number", "format": "double" }
          }
        }
      }
    },
    "/claims/placement": {
      "put": {
        "tags": ["Claims"],
        "operationId": "updatePlacement_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimPlacement" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPlacement" }
          }
        }
      }
    },
    "/claims/{id}/settlefinal": {
      "post": {
        "tags": ["Claims"],
        "operationId": "settleFinal_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSummary" }
          }
        }
      }
    },
    "/claims/{id}/guarantees": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getGuarantees_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimGuarantee" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "createGuarantee_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimGuarantee" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimGuarantee" }
          }
        }
      }
    },
    "/claims/{id}/useddeductibles/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initUsedDeductible_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimUsedDeductible" }
          }
        }
      }
    },
    "/claims/guarantees/{id}": {
      "delete": {
        "tags": ["Claims"],
        "operationId": "deleteGuarantee_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/claims/{id}/summary": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getSummary",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSummary" }
          }
        }
      }
    },
    "/claims/history": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getHistory_3",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimView" }
            }
          }
        }
      }
    },
    "/claims/count": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getClaimsCount_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimant",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "claimLeader",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "claimHandler",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimAdjuster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE_1",
                "CLM_CLOSED_2",
                "CLM_REOPEN_3",
                "CLM_RCLOSED_4",
                "DELETED_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "office",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "division",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "section",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "businessClass",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "interest",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimEvent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRoleType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRolePerson",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "claimRoleReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "claimRoleNote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agreementTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARINE_1",
                "AQUACULTURE_10",
                "PI_11",
                "ENERGY_2",
                "OIL_COMPANY_21",
                "CARGO_3",
                "PROPERTY_4",
                "AVIATION_5",
                "PRIVATE_50",
                "WAR_6",
                "NON_MARINE_7",
                "COASTAL_MARINE_8",
                "BUILDERS_RISK_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "agreementRateModel",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["STANDARD_0", "BROKER_1"]
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM_ID",
              "COVERAGE_ID",
              "CLAIMANT",
              "ORIGINAL_INSURED",
              "SOURCE",
              "CLAIM_HANDLER",
              "INTEREST",
              "CLAIM_DATE",
              "LAST_TREATMENT_DATE",
              "STATUS",
              "CLAIM_LEADER",
              "TEXT",
              "AGREEMENT_NAME"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "claimObjectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "placeOfDamage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meansOfTransport",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transportDocument",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mainCasualty",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/claims/{id}/roles": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getClaimRoles_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimRole" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "changeRoles",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimRole" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimRole" }
            }
          }
        }
      }
    },
    "/claims/{id}/internalroles/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initInternalRole_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimInternalRole" }
          }
        }
      }
    },
    "/claims/{id}/payments": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getPayments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeSettlements",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DOCUMENT_NUMBER",
              "DUE_DATE",
              "DOCUMENT_DATE",
              "FUNCTION",
              "CURRENCY",
              "BALANCE",
              "PERSONAL_LEDGER_AMOUNT",
              "GENERAL_CURRENCY",
              "GENERAL_AMOUNT",
              "PAYMENT_RECEIVER",
              "LEGAL_RECEIVER",
              "PAYMENT_CODE",
              "PERSONAL_LEDGER_TEXT",
              "STATUS"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPaymentSearchResult" }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "createPayment_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        }
      }
    },
    "/claims/payments": {
      "put": {
        "tags": ["Claims"],
        "operationId": "updatePayment_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        }
      }
    },
    "/claims/payments/{id}/release": {
      "post": {
        "tags": ["Claims"],
        "operationId": "releasePayment_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/AuthorizationRule" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        }
      }
    },
    "/claims/{id}/totals": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getTotals_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimTotals" }
          }
        }
      }
    },
    "/claims/{id}/reserves": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getClaimReserves_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimReserve" }
            }
          }
        }
      },
      "post": {
        "tags": ["Claims"],
        "operationId": "changeReserves_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ChangeReservesParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimReserve" }
            }
          }
        }
      }
    },
    "/claims/{id}/payments/duplicates": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getDuplicates_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "balance",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "paymentReceiverId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "generalCurrency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "generalAmount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "lastNoDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimPayment" }
            }
          }
        }
      }
    },
    "/claims/{id}/roles/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initRole",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimRole" }
          }
        }
      }
    },
    "/claims/{id}/reserves/confirm": {
      "post": {
        "tags": ["Claims"],
        "operationId": "confirmReserves_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ConfirmReservesParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimReserve" }
            }
          }
        }
      }
    },
    "/claims/{id}/payments/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initPayment_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PaymentInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        }
      }
    },
    "/claims/payments/{id}": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getPayment_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimPayment" }
          }
        }
      }
    },
    "/claims/{id}/reserves/init": {
      "post": {
        "tags": ["Claims"],
        "operationId": "initReserve_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimReserve" }
          }
        }
      }
    },
    "/claims/{id}/undodelete": {
      "post": {
        "tags": ["Claims"],
        "operationId": "undoDelete_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Claim" }
          }
        }
      }
    },
    "/claims/{id}/payments/electronicremittance": {
      "post": {
        "tags": ["Claims"],
        "operationId": "createElectronicRemittanceOnPayments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ElectronicRemittanceOnPaymentsCreateParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/claims/{id}/payments/notconnectedtoingoinginvoice": {
      "get": {
        "tags": ["Claims"],
        "operationId": "getPaymentsNotConnectedToIngoingInvoice_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClaimPayment" }
            }
          }
        }
      }
    },
    "/claimtransactions/{id}": {
      "get": {
        "tags": ["Claim Transactions"],
        "operationId": "get_4",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimTransaction" }
          }
        }
      }
    },
    "/claimtransactions/cosignatures": {
      "get": {
        "tags": ["Claim Transactions"],
        "operationId": "getCoSignatures_3",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Signature" }
            }
          }
        }
      }
    },
    "/claimtransactions/{id}/countersign": {
      "post": {
        "tags": ["Claim Transactions"],
        "operationId": "counterSign_3",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimTransaction" }
          }
        }
      }
    },
    "/claimtransactions/{id}/reject": {
      "post": {
        "tags": ["Claim Transactions"],
        "operationId": "reject_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimTransaction" }
          }
        }
      }
    },
    "/claimtransactions": {
      "get": {
        "tags": ["Claim Transactions"],
        "operationId": "getClaimTransactions_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "signature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "claimTransactionStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TAKEN_10",
                "NOT_USED_11",
                "DRAFT_12",
                "HOLD_13",
                "RELEASE_14",
                "WAIT_FOR_SIGN_15",
                "DISM_SIGNATURE_16",
                "CTRL_17",
                "WAITUNTIL_19",
                "ORDERED_SPREAD_20",
                "SPREAD_PROCESS_21",
                "SPREAD_UNCOMP_29",
                "PERSLEDGER_REA_30",
                "PL_PROCECESS_31",
                "PL_UNCOMPLETE_39",
                "BORDREADY_40",
                "BORD_PROCESS_41",
                "BORD_UNCOMPLETE_49",
                "GL_PRODREADY_50",
                "GL_PROCESS_51",
                "GL_RUN_1_52",
                "GL_DIFFLIST_53",
                "GL_UNCOMPLETE_54",
                "READY_FOR_EXPOR_55",
                "EXPORT_IN_PROGR_56",
                "EXP_NO_ACCLINE_58",
                "EXP_UNCOMPLETE_59",
                "ALL_DONE_60",
                "ALL_DONE_MANUAL_61",
                "ONHOLD_9"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultClaimTransaction" }
          }
        }
      }
    },
    "/claimtransactions/countersign": {
      "get": {
        "tags": ["Claim Transactions"],
        "operationId": "getCounterSignClaimTransactions_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "signature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "claimTransactionStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TAKEN_10",
                "NOT_USED_11",
                "DRAFT_12",
                "HOLD_13",
                "RELEASE_14",
                "WAIT_FOR_SIGN_15",
                "DISM_SIGNATURE_16",
                "CTRL_17",
                "WAITUNTIL_19",
                "ORDERED_SPREAD_20",
                "SPREAD_PROCESS_21",
                "SPREAD_UNCOMP_29",
                "PERSLEDGER_REA_30",
                "PL_PROCECESS_31",
                "PL_UNCOMPLETE_39",
                "BORDREADY_40",
                "BORD_PROCESS_41",
                "BORD_UNCOMPLETE_49",
                "GL_PRODREADY_50",
                "GL_PROCESS_51",
                "GL_RUN_1_52",
                "GL_DIFFLIST_53",
                "GL_UNCOMPLETE_54",
                "READY_FOR_EXPOR_55",
                "EXPORT_IN_PROGR_56",
                "EXP_NO_ACCLINE_58",
                "EXP_UNCOMPLETE_59",
                "ALL_DONE_60",
                "ALL_DONE_MANUAL_61",
                "ONHOLD_9"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultClaimTransaction" }
          }
        }
      }
    },
    "/constants/{constantType}": {
      "get": {
        "tags": ["Constants"],
        "operationId": "getConstants_2",
        "parameters": [
          {
            "name": "constantType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "CLAIM_STATUS",
              "CLAIM_EVENT_SUPER_EVENT",
              "CLAIM_REGRESS",
              "CLAIM_ACCOUNTING_LINES_ACCOUNTING_GROUP",
              "CLAIM_ACCOUNTING_LINES_IN_OUT",
              "CLAIM_ACCOUNTING_LINES_TAX_MODEL",
              "CLAIM_TRANSACTION_FUNCTION",
              "CLAIM_TRANSACTION_SEQUENCE",
              "CLAIM_CATEGORY_GOVERNMENTAL",
              "CLAIM_CATEGORY_DEDUCTIBLE_RULE",
              "CLAIM_POTENTIAL_RECOVERY",
              "CLAIM_ON_OR_OFFSHORE",
              "CLAIM_CATEGORY_TYPE",
              "CLAIM_TOTAL_LOSS_TYPE",
              "CLAIM_PILOT_ONBOARD",
              "CLAIM_GUARANTEE_TYPE",
              "CLAIM_GUARANTEE_FORM_OF_GUARANTEE",
              "CLAIM_GUARANTEE_STATUS",
              "CLAIM_COSHARE_PAYMENT_ACCOUNTING_GROUP",
              "DEDUCTIBLE_AMOUNT_CODE",
              "PERSON_TYPE",
              "PERSON_SPECIFICATION",
              "PERSON_GIRO_TYPE",
              "PERSON_NOTE_BREAK_UP",
              "PERSON_INSTALMENT_METHOD",
              "PERSON_NOTE_TYPE",
              "PERSON_NOTE_SORT",
              "PERSON_STOP_DUNNING",
              "PERSON_EINVOICE_B2C_STATUS",
              "PERSON_DIRECT_DEBIT_STATUS",
              "PERSON_ADDRESS_FUNCTION",
              "PERSON_EINVOICE_B2B_STATUS",
              "PERSON_VAT_INDICATOR",
              "PERSON_VERSION_VERSION_STATUS",
              "PERSON_VERSION_ACCOUNT_GROUP",
              "PERSON_VERSION_STATUS",
              "PERSON_VERSION_SANCTION_TYPE",
              "PERSON_VERSION_KYC_MEASURE",
              "PERSON_VERSION_KYC_PEP",
              "PERSON_CONTACT_BUSINESS_FUNCTIONS",
              "USED_HOURS_BUSINESS_FUNCTIONS",
              "ACTIVITY_MESSAGE_TYPE",
              "ACTIVITY_STATUS",
              "ELECTRONIC_REMITTANCE_STATUS",
              "ELECTRONIC_REMITTANCE_CHEQUE_CODE",
              "ELECTRONIC_REMITTANCE_REMITTANCE_CODE",
              "ELECTRONIC_REMITTANCE_DETAILS_ACCOUNTING_GROUP",
              "ELECTRONIC_REMITTANCE_DETAILS_DOCUMENT_TYPE",
              "OBJECT_STATUS",
              "OBJECT_UNIT",
              "OBJECT_TYPE",
              "OBJECT_DETAILS_STATUS",
              "FLEET_MARINE_STATUS",
              "MORTGAGEE_STATUS",
              "AGREEMENT_TYPE",
              "AGREEMENT_RATE_MODEL",
              "AGREEMENT_STATUS_1",
              "AGREEMENT_STATUS_2",
              "AGREEMENT_TREAT_AS",
              "AGREEMENT_AUTOCONNECT_POLICY",
              "OFFER_MARINE_AGREEMENT_STATUS",
              "OFFER_MARINE_AGREEMENT_SUBMISSION_TYPE",
              "OFFER_MARINE_AGREEMENT_CLAIM_LEVEL",
              "OFFER_MARINE_AGREEMENT_PREMIUM_LEVEL",
              "OFFER_MARINE_AGREEMENT_STATISTICS_LEVEL",
              "OFFER_MARINE_AGREEMENT_INSURER_LEVEL",
              "OFFER_MARINE_OBJECT_KEY_TYPE",
              "OFFER_MARINE_SECTION_SUBMISSION_ACCEPTED_COMMISION_CODE",
              "OFFER_MARINE_SECTION_SUBMISSION_PRIMARY_OR_FOLLOWER",
              "OFFER_MARINE_SECTION_SUBMISSION_RATE_TYPE",
              "OFFER_MARINE_CONDITION_SET_FFO_TYPE",
              "OFFER_MARINE_CONDITION_SET_RDC_TYPE",
              "OFFER_MARINE_CONDITION_SET_VALUES_TYPE",
              "OFFER_MARINE_SECTION_INSTALLMENT_CALCULATION_TYPE",
              "OFFER_MARINE_SECTION_INSTALLMENT_PERIOD_TYPE",
              "DOCUMENT_ORDER_STATUS",
              "OFFER_MARINE_SECTION_BUSINESS_TYPE",
              "INSURANCE_STATUS",
              "INSURANCE_FFO_TYPE",
              "INSURANCE_RDC_TYPE",
              "INSURANCE_TYPE",
              "INSURANCE_BUSINESS_TYPE",
              "PREMIUM_ADD_STATUS",
              "PREMIUM_TYPE",
              "DOCUMENT_ARCHIVE_STATUS",
              "DOCUMENT_ARCHIVE_APPROVAL_STATUS",
              "DOCUMENT_ARCHIVE_FORM_TYPE",
              "INGOING_INVOICE_STATUS",
              "FORM_TYPE",
              "FORM_SUBMISSION_STATUS",
              "SYSTEM_CLIENT_NUMBER",
              "SYSTEM_SUB_CLIENT_NUMBER",
              "USER_NOTIFICATION_TYPE",
              "SEND_TYPE",
              "COVERAGE_CORRECTION_TYPE",
              "COVERAGE_STATUS",
              "TAG_TYPE",
              "PERSONAL_LEDGER_STATUS",
              "PERSONAL_LEDGER_ACCOUNTING_GROUP",
              "PERSONAL_LEDGER_TRANSACTION_TYPE",
              "ASYNC_TASK_STATUS",
              "AGREEMENT_RENEWAL_CODE",
              "FREIGHT_ORDER_LOAD_SIZE",
              "AUTHORIZATION_RULE_BUSINESS_FUNCTION",
              "OUTGOING_BUSINESS_TYPE",
              "COMMISION_CODE",
              "COVERAGE_DECLARATION_INVOICE_CODE",
              "COVERAGE_DECLARATION_STATUS",
              "COVERAGE_DECLARATION_CLAUSE_CONDITION_SET_TYPE",
              "COVERAGE_COSHARE_ADVICE",
              "DOCUMENT_SIGNATURE_STATUS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Constant" }
            }
          }
        }
      }
    },
    "/constants": {
      "get": {
        "tags": ["Constants"],
        "operationId": "getConstants",
        "parameters": [
          {
            "name": "constantTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CLAIM_STATUS",
                "CLAIM_EVENT_SUPER_EVENT",
                "CLAIM_REGRESS",
                "CLAIM_ACCOUNTING_LINES_ACCOUNTING_GROUP",
                "CLAIM_ACCOUNTING_LINES_IN_OUT",
                "CLAIM_ACCOUNTING_LINES_TAX_MODEL",
                "CLAIM_TRANSACTION_FUNCTION",
                "CLAIM_TRANSACTION_SEQUENCE",
                "CLAIM_CATEGORY_GOVERNMENTAL",
                "CLAIM_CATEGORY_DEDUCTIBLE_RULE",
                "CLAIM_POTENTIAL_RECOVERY",
                "CLAIM_ON_OR_OFFSHORE",
                "CLAIM_CATEGORY_TYPE",
                "CLAIM_TOTAL_LOSS_TYPE",
                "CLAIM_PILOT_ONBOARD",
                "CLAIM_GUARANTEE_TYPE",
                "CLAIM_GUARANTEE_FORM_OF_GUARANTEE",
                "CLAIM_GUARANTEE_STATUS",
                "CLAIM_COSHARE_PAYMENT_ACCOUNTING_GROUP",
                "DEDUCTIBLE_AMOUNT_CODE",
                "PERSON_TYPE",
                "PERSON_SPECIFICATION",
                "PERSON_GIRO_TYPE",
                "PERSON_NOTE_BREAK_UP",
                "PERSON_INSTALMENT_METHOD",
                "PERSON_NOTE_TYPE",
                "PERSON_NOTE_SORT",
                "PERSON_STOP_DUNNING",
                "PERSON_EINVOICE_B2C_STATUS",
                "PERSON_DIRECT_DEBIT_STATUS",
                "PERSON_ADDRESS_FUNCTION",
                "PERSON_EINVOICE_B2B_STATUS",
                "PERSON_VAT_INDICATOR",
                "PERSON_VERSION_VERSION_STATUS",
                "PERSON_VERSION_ACCOUNT_GROUP",
                "PERSON_VERSION_STATUS",
                "PERSON_VERSION_SANCTION_TYPE",
                "PERSON_VERSION_KYC_MEASURE",
                "PERSON_VERSION_KYC_PEP",
                "PERSON_CONTACT_BUSINESS_FUNCTIONS",
                "USED_HOURS_BUSINESS_FUNCTIONS",
                "ACTIVITY_MESSAGE_TYPE",
                "ACTIVITY_STATUS",
                "ELECTRONIC_REMITTANCE_STATUS",
                "ELECTRONIC_REMITTANCE_CHEQUE_CODE",
                "ELECTRONIC_REMITTANCE_REMITTANCE_CODE",
                "ELECTRONIC_REMITTANCE_DETAILS_ACCOUNTING_GROUP",
                "ELECTRONIC_REMITTANCE_DETAILS_DOCUMENT_TYPE",
                "OBJECT_STATUS",
                "OBJECT_UNIT",
                "OBJECT_TYPE",
                "OBJECT_DETAILS_STATUS",
                "FLEET_MARINE_STATUS",
                "MORTGAGEE_STATUS",
                "AGREEMENT_TYPE",
                "AGREEMENT_RATE_MODEL",
                "AGREEMENT_STATUS_1",
                "AGREEMENT_STATUS_2",
                "AGREEMENT_TREAT_AS",
                "AGREEMENT_AUTOCONNECT_POLICY",
                "OFFER_MARINE_AGREEMENT_STATUS",
                "OFFER_MARINE_AGREEMENT_SUBMISSION_TYPE",
                "OFFER_MARINE_AGREEMENT_CLAIM_LEVEL",
                "OFFER_MARINE_AGREEMENT_PREMIUM_LEVEL",
                "OFFER_MARINE_AGREEMENT_STATISTICS_LEVEL",
                "OFFER_MARINE_AGREEMENT_INSURER_LEVEL",
                "OFFER_MARINE_OBJECT_KEY_TYPE",
                "OFFER_MARINE_SECTION_SUBMISSION_ACCEPTED_COMMISION_CODE",
                "OFFER_MARINE_SECTION_SUBMISSION_PRIMARY_OR_FOLLOWER",
                "OFFER_MARINE_SECTION_SUBMISSION_RATE_TYPE",
                "OFFER_MARINE_CONDITION_SET_FFO_TYPE",
                "OFFER_MARINE_CONDITION_SET_RDC_TYPE",
                "OFFER_MARINE_CONDITION_SET_VALUES_TYPE",
                "OFFER_MARINE_SECTION_INSTALLMENT_CALCULATION_TYPE",
                "OFFER_MARINE_SECTION_INSTALLMENT_PERIOD_TYPE",
                "DOCUMENT_ORDER_STATUS",
                "OFFER_MARINE_SECTION_BUSINESS_TYPE",
                "INSURANCE_STATUS",
                "INSURANCE_FFO_TYPE",
                "INSURANCE_RDC_TYPE",
                "INSURANCE_TYPE",
                "INSURANCE_BUSINESS_TYPE",
                "PREMIUM_ADD_STATUS",
                "PREMIUM_TYPE",
                "DOCUMENT_ARCHIVE_STATUS",
                "DOCUMENT_ARCHIVE_APPROVAL_STATUS",
                "DOCUMENT_ARCHIVE_FORM_TYPE",
                "INGOING_INVOICE_STATUS",
                "FORM_TYPE",
                "FORM_SUBMISSION_STATUS",
                "SYSTEM_CLIENT_NUMBER",
                "SYSTEM_SUB_CLIENT_NUMBER",
                "USER_NOTIFICATION_TYPE",
                "SEND_TYPE",
                "COVERAGE_CORRECTION_TYPE",
                "COVERAGE_STATUS",
                "TAG_TYPE",
                "PERSONAL_LEDGER_STATUS",
                "PERSONAL_LEDGER_ACCOUNTING_GROUP",
                "PERSONAL_LEDGER_TRANSACTION_TYPE",
                "ASYNC_TASK_STATUS",
                "AGREEMENT_RENEWAL_CODE",
                "FREIGHT_ORDER_LOAD_SIZE",
                "AUTHORIZATION_RULE_BUSINESS_FUNCTION",
                "OUTGOING_BUSINESS_TYPE",
                "COMMISION_CODE",
                "COVERAGE_DECLARATION_INVOICE_CODE",
                "COVERAGE_DECLARATION_STATUS",
                "COVERAGE_DECLARATION_CLAUSE_CONDITION_SET_TYPE",
                "COVERAGE_COSHARE_ADVICE",
                "DOCUMENT_SIGNATURE_STATUS"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": { "$ref": "#/definitions/Constant" }
              }
            }
          }
        }
      }
    },
    "/coveragedeclaration/taxes": {
      "post": {
        "tags": ["Coverage Declaration"],
        "operationId": "createTax_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CoverageDeclarationTax" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationTax" }
          }
        }
      },
      "put": {
        "tags": ["Coverage Declaration"],
        "operationId": "updateTax_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CoverageDeclarationTax" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationTax" }
          }
        }
      }
    },
    "/coveragedeclaration/{id}/taxes/init": {
      "post": {
        "tags": ["Coverage Declaration"],
        "operationId": "initTax_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationTax" }
          }
        }
      }
    },
    "/coveragedeclaration/{id}/taxes": {
      "get": {
        "tags": ["Coverage Declaration"],
        "operationId": "getTaxes_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CoverageDeclarationTax" }
            }
          }
        }
      }
    },
    "/coveragedeclaration/taxes/{id}": {
      "get": {
        "tags": ["Coverage Declaration"],
        "operationId": "getTax_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationTax" }
          }
        }
      },
      "delete": {
        "tags": ["Coverage Declaration"],
        "operationId": "deleteTax_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/coveragedeclaration/{id}": {
      "get": {
        "tags": ["Coverage Declaration"],
        "operationId": "getDeclaration_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclaration" }
          }
        }
      },
      "delete": {
        "tags": ["Coverage Declaration"],
        "operationId": "deleteDeclaration_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/coveragedeclaration/init": {
      "post": {
        "tags": ["Coverage Declaration"],
        "operationId": "initDeclaration_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CoverageDeclarationInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclaration" }
          }
        }
      }
    },
    "/coveragedeclaration/clauses": {
      "post": {
        "tags": ["Coverage Declaration"],
        "operationId": "createClause_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CoverageDeclarationClause" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationClause" }
          }
        }
      },
      "put": {
        "tags": ["Coverage Declaration"],
        "operationId": "updateClause_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CoverageDeclarationClause" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationClause" }
          }
        }
      }
    },
    "/coveragedeclaration": {
      "get": {
        "tags": ["Coverage Declaration"],
        "operationId": "getDeclarations_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "agreementId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificateNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interest",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CANCELLED_C", "READY_R", "WORK_W"]
          },
          {
            "name": "validPerDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "COVERAGE_ID",
              "START_DATE",
              "END_DATE",
              "CURRENCY",
              "TOTAL_AMOUNT",
              "REFERENCE_DATE",
              "REFERENCE_NAME",
              "NOTE",
              "SETTLED",
              "SETTLED_PREMIUM_ID",
              "ASSURED_ID",
              "ASSURED",
              "VOYAGE_INFO",
              "MEANS_OF_TRANSPORT_INFO",
              "CLAIM_SURVEYOR_1",
              "CLAIM_SURVEYOR_2",
              "PREMIUM",
              "RATE",
              "INVOICE_CODE",
              "STATUS"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/SearchResultCoverageDeclaration"
            }
          }
        }
      },
      "post": {
        "tags": ["Coverage Declaration"],
        "operationId": "createDeclaration_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CoverageDeclaration" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclaration" }
          }
        }
      },
      "put": {
        "tags": ["Coverage Declaration"],
        "operationId": "updateDeclaration_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CoverageDeclaration" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclaration" }
          }
        }
      }
    },
    "/coveragedeclaration/clauses/{id}": {
      "get": {
        "tags": ["Coverage Declaration"],
        "operationId": "getClause_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationClause" }
          }
        }
      },
      "delete": {
        "tags": ["Coverage Declaration"],
        "operationId": "deleteClause_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/coveragedeclaration/{id}/clauses": {
      "get": {
        "tags": ["Coverage Declaration"],
        "operationId": "getClauses_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CoverageDeclarationClause" }
            }
          }
        }
      }
    },
    "/coveragedeclaration/{id}/clauses/init": {
      "post": {
        "tags": ["Coverage Declaration"],
        "operationId": "initClause_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageDeclarationClause" }
          }
        }
      }
    },
    "/coverages/{id}": {
      "get": {
        "tags": ["Coverages"],
        "operationId": "get_5",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CoverageInformation" }
          }
        }
      }
    },
    "/coverages/{id}/applicablecoshares": {
      "get": {
        "tags": ["Coverages"],
        "operationId": "getApplicableCoShares_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ApplicableCoverageCoshare" }
            }
          }
        }
      }
    },
    "/coverages/{id}/deductibles": {
      "get": {
        "tags": ["Coverages"],
        "operationId": "getDeductibles_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Deductible" }
            }
          }
        }
      }
    },
    "/coverages/active": {
      "get": {
        "tags": ["Coverages"],
        "operationId": "getActiveCoverages_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "validPerDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeInterests",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "busnDivision",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "busnSection",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "agreementTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARINE_1",
                "AQUACULTURE_10",
                "PI_11",
                "ENERGY_2",
                "OIL_COMPANY_21",
                "CARGO_3",
                "PROPERTY_4",
                "AVIATION_5",
                "PRIVATE_50",
                "WAR_6",
                "NON_MARINE_7",
                "COASTAL_MARINE_8",
                "BUILDERS_RISK_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "agreementRateModel",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["STANDARD_0", "BROKER_1"]
          },
          {
            "name": "agreementId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/SearchResultCoverageInformation"
            }
          }
        }
      }
    },
    "/coverages/{id}/inlayupperiode": {
      "get": {
        "tags": ["Coverages"],
        "operationId": "inLayupPeriode_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "boolean" }
          }
        }
      }
    },
    "/systemcodes/currencies/setrates": {
      "post": {
        "tags": ["System codes - Currencies"],
        "operationId": "setExchangeRates_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ExchangeRates" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/systemcodes/currencies/rate": {
      "get": {
        "tags": ["System codes - Currencies"],
        "operationId": "getExchangeRate_1",
        "parameters": [
          {
            "name": "fromCurrency",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "toCurrency",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "rateDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "rateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["GENERAL_LEDGER_G", "DAILY_M", "REPORT_R", "X_TRA_X"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ExchangeRateResult" }
          }
        }
      }
    },
    "/systemcodes/currencies": {
      "get": {
        "tags": ["System codes - Currencies"],
        "operationId": "getCurrencies_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Currency" }
            }
          }
        }
      }
    },
    "/systemcodes/documentarchivecodes/rules/{documentType}": {
      "get": {
        "tags": ["System codes - Document Archive"],
        "operationId": "getDocumentArchiveRule_1",
        "parameters": [
          {
            "name": "documentType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "CTRL_PAYMENTS___",
              "ACCOUNT_DOC_AD",
              "ACCOUNT_EXPORT_AE",
              "AVTALEGIRO_AG",
              "ACCOUNT_LIST_AL",
              "ATTACHMENT_AT",
              "AD_BORD_BA",
              "CLOSE_BORD_BC",
              "CORR_BORD_BK",
              "CLAIM_BORD_BL",
              "CLAIM_ADVICE_BM",
              "PROV_BORD_BP",
              "CANCEL_BS",
              "ADD_BORD_BV",
              "CANCEL_CA",
              "COVER_CREW_NOTE_CC",
              "CREW_DISCLETTE_CD",
              "COVNOTE_EXTRACT_CE",
              "CREWLIST_GEN_CG",
              "CLAIM_INVOICE_CI",
              "CLMCTRL_CK",
              "COVER_NOTE_CN",
              "CHANGE_OBJ_CO",
              "CREW_SETTLEMENT_CS",
              "DEBIT_AGENTNOTE_DA",
              "COV_DECLARATION_DE",
              "DEDUCT_INVOICE_DI",
              "INVOICE_DN",
              "IMP_ELBORD_EB",
              "E_INVOICE_EI",
              "ELREMIT_EL",
              "FREIGHT_O_CERTI_FC",
              "SINGLE_GIRO_GI",
              "GIRO_NOTE_GN",
              "INTRST_CALC_IC",
              "CREDIT_ADVICE_IG",
              "INFO_CLAIM_IL",
              "INS_INFO_IN",
              "INFO_PREMIUM_IP",
              "AGREEM_LETTER_LA",
              "BENEFIC_LETTER_LB",
              "CLAIM_LETTER_LC",
              "CLM_ING_INV_LTR_LD",
              "LETTER_LE",
              "INSURANCELETTER_LI",
              "CREW_LETTER_LM",
              "CLAIM_PAYMLETT_LP",
              "LEGAL_RECOVERY_LR",
              "CERTIFICATE_LS",
              "LETTER_EXPIRE_LX",
              "LETTER_MORTGAAG_LY",
              "LETTER_SECURITY_LZ",
              "COASTAL_OFFER_MC",
              "MAIL_CONFIRMAT_ML",
              "MARINE_OFFER_MM",
              "MAIL_EML_FILE_MP",
              "NEW_PERSON_NP",
              "OCR_IMPORT_OC",
              "DEBIT_ADVICE_OG",
              "PERIODICAL_PAY_P_",
              "PAYMENT_ADVICE_PA",
              "PRES_TO_CLIENT_PC",
              "PERSON_DOCUMENT_PE",
              "PL_REMINDER_PL",
              "PAYMENT_PM",
              "PERSON_OFFER_PO",
              "PRINT_DRAFT_PP",
              "STATEMENT_PS",
              "TECHN_STMT_PT",
              "PREM_WAIVER_PW",
              "REQ_FOR_QUOTE_QU",
              "_1REMINDER_R1",
              "_2REMINDER_R2",
              "_3REMINDER_R3",
              "_4REMINDER_R4",
              "_7REMINDER_R7",
              "_8REMINDER_R8",
              "_9REMINDER_R9",
              "CREDIT_NOTE_RC",
              "REMARK_RE",
              "MAX_NOTE_RM",
              "REMINDER_NOTE_RN",
              "ONLINE_NOTE_RO",
              "STATMENT_PREMIU_RP",
              "STATMENT_CLAIM_RQ",
              "PERSAC_LETTER_RS",
              "EXPIRE_REMINDER_RX",
              "SLIP_SL",
              "SYSTEM_MESSAGE_SM",
              "SLOW_PAYER_SP",
              "SYSTEM_SY",
              "TRIP_IMPORT_TI",
              "TAX_TFA_TT",
              "TAX_DOC_TX",
              "EXCEL_EXPORT_XL",
              "PLACEHOLDER_ZZ"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentArchiveRule" }
          }
        }
      }
    },
    "/systemcodes/documentarchivecodes/categories": {
      "get": {
        "tags": ["System codes - Document Archive"],
        "operationId": "getDocumentArchiveCategories_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DocumentArchiveCategory" }
            }
          }
        }
      }
    },
    "/systemcodes/documentarchivecodes/rules": {
      "get": {
        "tags": ["System codes - Document Archive"],
        "operationId": "getDocumentArchiveRules_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DocumentArchiveRule" }
            }
          }
        }
      }
    },
    "/documentarchive/{id}": {
      "get": {
        "tags": ["Document Archive"],
        "operationId": "get_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentArchive" }
          }
        }
      }
    },
    "/documentarchive/folders/{id}/update": {
      "put": {
        "tags": ["Document Archive"],
        "summary": "Update folder name and folder color",
        "description": "",
        "operationId": "update_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Folder id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "folderName",
            "in": "query",
            "description": "Folder name",
            "required": true,
            "type": "string",
            "maxLength": 200,
            "minLength": 0
          },
          {
            "name": "colorCode",
            "in": "query",
            "description": "Folder  color",
            "required": true,
            "type": "string",
            "enum": ["BLUE_B", "GRAY_1", "GREEN_G", "RED_R", "YELLOW_Y"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Folder" }
          }
        }
      }
    },
    "/documentarchive": {
      "get": {
        "tags": ["Document Archive"],
        "operationId": "search_3",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM",
              "INVOICE",
              "COVER_NOTE",
              "AGREEMENT",
              "POLICY",
              "PREMIUM"
            ]
          },
          {
            "name": "entityKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "includeCancelled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeAttachments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeNotViewable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeCanNotView",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "approvalStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["APPROVED_A", "DENIED_D", "NEVER_N", "TO_BE_APPROVED_T"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "formTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CTRL_PAYMENTS___",
                "ACCOUNT_DOC_AD",
                "ACCOUNT_EXPORT_AE",
                "AVTALEGIRO_AG",
                "ACCOUNT_LIST_AL",
                "ATTACHMENT_AT",
                "AD_BORD_BA",
                "CLOSE_BORD_BC",
                "CORR_BORD_BK",
                "CLAIM_BORD_BL",
                "CLAIM_ADVICE_BM",
                "PROV_BORD_BP",
                "CANCEL_BS",
                "ADD_BORD_BV",
                "CANCEL_CA",
                "COVER_CREW_NOTE_CC",
                "CREW_DISCLETTE_CD",
                "COVNOTE_EXTRACT_CE",
                "CREWLIST_GEN_CG",
                "CLAIM_INVOICE_CI",
                "CLMCTRL_CK",
                "COVER_NOTE_CN",
                "CHANGE_OBJ_CO",
                "CREW_SETTLEMENT_CS",
                "DEBIT_AGENTNOTE_DA",
                "COV_DECLARATION_DE",
                "DEDUCT_INVOICE_DI",
                "INVOICE_DN",
                "IMP_ELBORD_EB",
                "E_INVOICE_EI",
                "ELREMIT_EL",
                "FREIGHT_O_CERTI_FC",
                "SINGLE_GIRO_GI",
                "GIRO_NOTE_GN",
                "INTRST_CALC_IC",
                "CREDIT_ADVICE_IG",
                "INFO_CLAIM_IL",
                "INS_INFO_IN",
                "INFO_PREMIUM_IP",
                "AGREEM_LETTER_LA",
                "BENEFIC_LETTER_LB",
                "CLAIM_LETTER_LC",
                "CLM_ING_INV_LTR_LD",
                "LETTER_LE",
                "INSURANCELETTER_LI",
                "CREW_LETTER_LM",
                "CLAIM_PAYMLETT_LP",
                "LEGAL_RECOVERY_LR",
                "CERTIFICATE_LS",
                "LETTER_EXPIRE_LX",
                "LETTER_MORTGAAG_LY",
                "LETTER_SECURITY_LZ",
                "COASTAL_OFFER_MC",
                "MAIL_CONFIRMAT_ML",
                "MARINE_OFFER_MM",
                "MAIL_EML_FILE_MP",
                "NEW_PERSON_NP",
                "OCR_IMPORT_OC",
                "DEBIT_ADVICE_OG",
                "PERIODICAL_PAY_P_",
                "PAYMENT_ADVICE_PA",
                "PRES_TO_CLIENT_PC",
                "PERSON_DOCUMENT_PE",
                "PL_REMINDER_PL",
                "PAYMENT_PM",
                "PERSON_OFFER_PO",
                "PRINT_DRAFT_PP",
                "STATEMENT_PS",
                "TECHN_STMT_PT",
                "PREM_WAIVER_PW",
                "REQ_FOR_QUOTE_QU",
                "_1REMINDER_R1",
                "_2REMINDER_R2",
                "_3REMINDER_R3",
                "_4REMINDER_R4",
                "_7REMINDER_R7",
                "_8REMINDER_R8",
                "_9REMINDER_R9",
                "CREDIT_NOTE_RC",
                "REMARK_RE",
                "MAX_NOTE_RM",
                "REMINDER_NOTE_RN",
                "ONLINE_NOTE_RO",
                "STATMENT_PREMIU_RP",
                "STATMENT_CLAIM_RQ",
                "PERSAC_LETTER_RS",
                "EXPIRE_REMINDER_RX",
                "SLIP_SL",
                "SYSTEM_MESSAGE_SM",
                "SLOW_PAYER_SP",
                "SYSTEM_SY",
                "TRIP_IMPORT_TI",
                "TAX_TFA_TT",
                "TAX_DOC_TX",
                "EXCEL_EXPORT_XL",
                "PLACEHOLDER_ZZ"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeFormTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CTRL_PAYMENTS___",
                "ACCOUNT_DOC_AD",
                "ACCOUNT_EXPORT_AE",
                "AVTALEGIRO_AG",
                "ACCOUNT_LIST_AL",
                "ATTACHMENT_AT",
                "AD_BORD_BA",
                "CLOSE_BORD_BC",
                "CORR_BORD_BK",
                "CLAIM_BORD_BL",
                "CLAIM_ADVICE_BM",
                "PROV_BORD_BP",
                "CANCEL_BS",
                "ADD_BORD_BV",
                "CANCEL_CA",
                "COVER_CREW_NOTE_CC",
                "CREW_DISCLETTE_CD",
                "COVNOTE_EXTRACT_CE",
                "CREWLIST_GEN_CG",
                "CLAIM_INVOICE_CI",
                "CLMCTRL_CK",
                "COVER_NOTE_CN",
                "CHANGE_OBJ_CO",
                "CREW_SETTLEMENT_CS",
                "DEBIT_AGENTNOTE_DA",
                "COV_DECLARATION_DE",
                "DEDUCT_INVOICE_DI",
                "INVOICE_DN",
                "IMP_ELBORD_EB",
                "E_INVOICE_EI",
                "ELREMIT_EL",
                "FREIGHT_O_CERTI_FC",
                "SINGLE_GIRO_GI",
                "GIRO_NOTE_GN",
                "INTRST_CALC_IC",
                "CREDIT_ADVICE_IG",
                "INFO_CLAIM_IL",
                "INS_INFO_IN",
                "INFO_PREMIUM_IP",
                "AGREEM_LETTER_LA",
                "BENEFIC_LETTER_LB",
                "CLAIM_LETTER_LC",
                "CLM_ING_INV_LTR_LD",
                "LETTER_LE",
                "INSURANCELETTER_LI",
                "CREW_LETTER_LM",
                "CLAIM_PAYMLETT_LP",
                "LEGAL_RECOVERY_LR",
                "CERTIFICATE_LS",
                "LETTER_EXPIRE_LX",
                "LETTER_MORTGAAG_LY",
                "LETTER_SECURITY_LZ",
                "COASTAL_OFFER_MC",
                "MAIL_CONFIRMAT_ML",
                "MARINE_OFFER_MM",
                "MAIL_EML_FILE_MP",
                "NEW_PERSON_NP",
                "OCR_IMPORT_OC",
                "DEBIT_ADVICE_OG",
                "PERIODICAL_PAY_P_",
                "PAYMENT_ADVICE_PA",
                "PRES_TO_CLIENT_PC",
                "PERSON_DOCUMENT_PE",
                "PL_REMINDER_PL",
                "PAYMENT_PM",
                "PERSON_OFFER_PO",
                "PRINT_DRAFT_PP",
                "STATEMENT_PS",
                "TECHN_STMT_PT",
                "PREM_WAIVER_PW",
                "REQ_FOR_QUOTE_QU",
                "_1REMINDER_R1",
                "_2REMINDER_R2",
                "_3REMINDER_R3",
                "_4REMINDER_R4",
                "_7REMINDER_R7",
                "_8REMINDER_R8",
                "_9REMINDER_R9",
                "CREDIT_NOTE_RC",
                "REMARK_RE",
                "MAX_NOTE_RM",
                "REMINDER_NOTE_RN",
                "ONLINE_NOTE_RO",
                "STATMENT_PREMIU_RP",
                "STATMENT_CLAIM_RQ",
                "PERSAC_LETTER_RS",
                "EXPIRE_REMINDER_RX",
                "SLIP_SL",
                "SYSTEM_MESSAGE_SM",
                "SLOW_PAYER_SP",
                "SYSTEM_SY",
                "TRIP_IMPORT_TI",
                "TAX_TFA_TT",
                "TAX_DOC_TX",
                "EXCEL_EXPORT_XL",
                "PLACEHOLDER_ZZ"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "DISPLAY_NAME",
              "DESCRIPTION",
              "REFERENCE",
              "MIME_TYPE",
              "MIME_SUBTYPE",
              "STATUS",
              "APPROVAL_STATUS",
              "FORM_TYPE",
              "ENTITY_TYPE",
              "CREATED",
              "CREATED_BY",
              "YEAR",
              "DOCUMENT_NUMBER",
              "PERSON_NAME",
              "PERSON_ID"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDocumentNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toDocumentNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "electronic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "attachmentType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["AGREEMENT"]
          },
          {
            "name": "toBeSignedBy",
            "in": "query",
            "description": "Identifies the user that a document can be signed on behalf of.",
            "required": false,
            "type": "string",
            "maxLength": 3,
            "minLength": 0
          },
          {
            "name": "documentSignatureStatuses",
            "in": "query",
            "description": "Identified signature states to search for. An empty value includes all types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SIG_NOT_REQ_N",
                "REJECTED_R",
                "SIGNED_S",
                "TO_BE_SIGNED_T"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "folderId",
            "in": "query",
            "description": "Search for documents in folder with the specified id. If the parameter is empty the search will simply disregard it.If the parameter has a negative value the search result will only include documents that are NOT linked to any folder",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search for documents with name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultDocumentArchive" }
          }
        }
      },
      "put": {
        "tags": ["Document Archive"],
        "operationId": "update_4",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DocumentArchive" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentArchive" }
          }
        }
      }
    },
    "/documentarchive/{id}/sign": {
      "post": {
        "tags": ["Document Archive"],
        "summary": "Electronically sign the specified document",
        "description": "",
        "operationId": "sign_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentarchive/count": {
      "get": {
        "tags": ["Document Archive"],
        "summary": "Count documents based on entityType, entityKey and includeCancelled",
        "description": "",
        "operationId": "getCount_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM",
              "INVOICE",
              "COVER_NOTE",
              "AGREEMENT",
              "POLICY",
              "PREMIUM"
            ]
          },
          {
            "name": "entityKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "includeCancelled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeAttachments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeNotViewable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeCanNotView",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "approvalStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["APPROVED_A", "DENIED_D", "NEVER_N", "TO_BE_APPROVED_T"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "formTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CTRL_PAYMENTS___",
                "ACCOUNT_DOC_AD",
                "ACCOUNT_EXPORT_AE",
                "AVTALEGIRO_AG",
                "ACCOUNT_LIST_AL",
                "ATTACHMENT_AT",
                "AD_BORD_BA",
                "CLOSE_BORD_BC",
                "CORR_BORD_BK",
                "CLAIM_BORD_BL",
                "CLAIM_ADVICE_BM",
                "PROV_BORD_BP",
                "CANCEL_BS",
                "ADD_BORD_BV",
                "CANCEL_CA",
                "COVER_CREW_NOTE_CC",
                "CREW_DISCLETTE_CD",
                "COVNOTE_EXTRACT_CE",
                "CREWLIST_GEN_CG",
                "CLAIM_INVOICE_CI",
                "CLMCTRL_CK",
                "COVER_NOTE_CN",
                "CHANGE_OBJ_CO",
                "CREW_SETTLEMENT_CS",
                "DEBIT_AGENTNOTE_DA",
                "COV_DECLARATION_DE",
                "DEDUCT_INVOICE_DI",
                "INVOICE_DN",
                "IMP_ELBORD_EB",
                "E_INVOICE_EI",
                "ELREMIT_EL",
                "FREIGHT_O_CERTI_FC",
                "SINGLE_GIRO_GI",
                "GIRO_NOTE_GN",
                "INTRST_CALC_IC",
                "CREDIT_ADVICE_IG",
                "INFO_CLAIM_IL",
                "INS_INFO_IN",
                "INFO_PREMIUM_IP",
                "AGREEM_LETTER_LA",
                "BENEFIC_LETTER_LB",
                "CLAIM_LETTER_LC",
                "CLM_ING_INV_LTR_LD",
                "LETTER_LE",
                "INSURANCELETTER_LI",
                "CREW_LETTER_LM",
                "CLAIM_PAYMLETT_LP",
                "LEGAL_RECOVERY_LR",
                "CERTIFICATE_LS",
                "LETTER_EXPIRE_LX",
                "LETTER_MORTGAAG_LY",
                "LETTER_SECURITY_LZ",
                "COASTAL_OFFER_MC",
                "MAIL_CONFIRMAT_ML",
                "MARINE_OFFER_MM",
                "MAIL_EML_FILE_MP",
                "NEW_PERSON_NP",
                "OCR_IMPORT_OC",
                "DEBIT_ADVICE_OG",
                "PERIODICAL_PAY_P_",
                "PAYMENT_ADVICE_PA",
                "PRES_TO_CLIENT_PC",
                "PERSON_DOCUMENT_PE",
                "PL_REMINDER_PL",
                "PAYMENT_PM",
                "PERSON_OFFER_PO",
                "PRINT_DRAFT_PP",
                "STATEMENT_PS",
                "TECHN_STMT_PT",
                "PREM_WAIVER_PW",
                "REQ_FOR_QUOTE_QU",
                "_1REMINDER_R1",
                "_2REMINDER_R2",
                "_3REMINDER_R3",
                "_4REMINDER_R4",
                "_7REMINDER_R7",
                "_8REMINDER_R8",
                "_9REMINDER_R9",
                "CREDIT_NOTE_RC",
                "REMARK_RE",
                "MAX_NOTE_RM",
                "REMINDER_NOTE_RN",
                "ONLINE_NOTE_RO",
                "STATMENT_PREMIU_RP",
                "STATMENT_CLAIM_RQ",
                "PERSAC_LETTER_RS",
                "EXPIRE_REMINDER_RX",
                "SLIP_SL",
                "SYSTEM_MESSAGE_SM",
                "SLOW_PAYER_SP",
                "SYSTEM_SY",
                "TRIP_IMPORT_TI",
                "TAX_TFA_TT",
                "TAX_DOC_TX",
                "EXCEL_EXPORT_XL",
                "PLACEHOLDER_ZZ"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeFormTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CTRL_PAYMENTS___",
                "ACCOUNT_DOC_AD",
                "ACCOUNT_EXPORT_AE",
                "AVTALEGIRO_AG",
                "ACCOUNT_LIST_AL",
                "ATTACHMENT_AT",
                "AD_BORD_BA",
                "CLOSE_BORD_BC",
                "CORR_BORD_BK",
                "CLAIM_BORD_BL",
                "CLAIM_ADVICE_BM",
                "PROV_BORD_BP",
                "CANCEL_BS",
                "ADD_BORD_BV",
                "CANCEL_CA",
                "COVER_CREW_NOTE_CC",
                "CREW_DISCLETTE_CD",
                "COVNOTE_EXTRACT_CE",
                "CREWLIST_GEN_CG",
                "CLAIM_INVOICE_CI",
                "CLMCTRL_CK",
                "COVER_NOTE_CN",
                "CHANGE_OBJ_CO",
                "CREW_SETTLEMENT_CS",
                "DEBIT_AGENTNOTE_DA",
                "COV_DECLARATION_DE",
                "DEDUCT_INVOICE_DI",
                "INVOICE_DN",
                "IMP_ELBORD_EB",
                "E_INVOICE_EI",
                "ELREMIT_EL",
                "FREIGHT_O_CERTI_FC",
                "SINGLE_GIRO_GI",
                "GIRO_NOTE_GN",
                "INTRST_CALC_IC",
                "CREDIT_ADVICE_IG",
                "INFO_CLAIM_IL",
                "INS_INFO_IN",
                "INFO_PREMIUM_IP",
                "AGREEM_LETTER_LA",
                "BENEFIC_LETTER_LB",
                "CLAIM_LETTER_LC",
                "CLM_ING_INV_LTR_LD",
                "LETTER_LE",
                "INSURANCELETTER_LI",
                "CREW_LETTER_LM",
                "CLAIM_PAYMLETT_LP",
                "LEGAL_RECOVERY_LR",
                "CERTIFICATE_LS",
                "LETTER_EXPIRE_LX",
                "LETTER_MORTGAAG_LY",
                "LETTER_SECURITY_LZ",
                "COASTAL_OFFER_MC",
                "MAIL_CONFIRMAT_ML",
                "MARINE_OFFER_MM",
                "MAIL_EML_FILE_MP",
                "NEW_PERSON_NP",
                "OCR_IMPORT_OC",
                "DEBIT_ADVICE_OG",
                "PERIODICAL_PAY_P_",
                "PAYMENT_ADVICE_PA",
                "PRES_TO_CLIENT_PC",
                "PERSON_DOCUMENT_PE",
                "PL_REMINDER_PL",
                "PAYMENT_PM",
                "PERSON_OFFER_PO",
                "PRINT_DRAFT_PP",
                "STATEMENT_PS",
                "TECHN_STMT_PT",
                "PREM_WAIVER_PW",
                "REQ_FOR_QUOTE_QU",
                "_1REMINDER_R1",
                "_2REMINDER_R2",
                "_3REMINDER_R3",
                "_4REMINDER_R4",
                "_7REMINDER_R7",
                "_8REMINDER_R8",
                "_9REMINDER_R9",
                "CREDIT_NOTE_RC",
                "REMARK_RE",
                "MAX_NOTE_RM",
                "REMINDER_NOTE_RN",
                "ONLINE_NOTE_RO",
                "STATMENT_PREMIU_RP",
                "STATMENT_CLAIM_RQ",
                "PERSAC_LETTER_RS",
                "EXPIRE_REMINDER_RX",
                "SLIP_SL",
                "SYSTEM_MESSAGE_SM",
                "SLOW_PAYER_SP",
                "SYSTEM_SY",
                "TRIP_IMPORT_TI",
                "TAX_TFA_TT",
                "TAX_DOC_TX",
                "EXCEL_EXPORT_XL",
                "PLACEHOLDER_ZZ"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "DISPLAY_NAME",
              "DESCRIPTION",
              "REFERENCE",
              "MIME_TYPE",
              "MIME_SUBTYPE",
              "STATUS",
              "APPROVAL_STATUS",
              "FORM_TYPE",
              "ENTITY_TYPE",
              "CREATED",
              "CREATED_BY",
              "YEAR",
              "DOCUMENT_NUMBER",
              "PERSON_NAME",
              "PERSON_ID"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDocumentNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toDocumentNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "electronic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "attachmentType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["AGREEMENT"]
          },
          {
            "name": "toBeSignedBy",
            "in": "query",
            "description": "Identifies the user that a document can be signed on behalf of.",
            "required": false,
            "type": "string",
            "maxLength": 3,
            "minLength": 0
          },
          {
            "name": "documentSignatureStatuses",
            "in": "query",
            "description": "Identified signature states to search for. An empty value includes all types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SIG_NOT_REQ_N",
                "REJECTED_R",
                "SIGNED_S",
                "TO_BE_SIGNED_T"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "folderId",
            "in": "query",
            "description": "Search for documents in folder with the specified id. If the parameter is empty the search will simply disregard it.If the parameter has a negative value the search result will only include documents that are NOT linked to any folder",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search for documents with name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/documentarchive/{id}/data": {
      "get": {
        "tags": ["Document Archive"],
        "summary": "Get the binary data for a Document. Data is returned with content-type application/octet-stream",
        "description": "",
        "operationId": "getData_1",
        "produces": ["application/octet-stream"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "download",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentarchive/cosignatures": {
      "get": {
        "tags": ["Document Archive"],
        "operationId": "getCoSignatures",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Signature" }
            }
          }
        }
      }
    },
    "/documentarchive/countersign": {
      "get": {
        "tags": ["Document Archive"],
        "summary": "Find documents that can be counter signed.",
        "description": "",
        "operationId": "counterSign",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM",
              "INVOICE",
              "COVER_NOTE",
              "AGREEMENT",
              "POLICY",
              "PREMIUM"
            ]
          },
          {
            "name": "entityKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "includeCancelled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeAttachments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeNotViewable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeCanNotView",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "approvalStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["APPROVED_A", "DENIED_D", "NEVER_N", "TO_BE_APPROVED_T"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "formTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CTRL_PAYMENTS___",
                "ACCOUNT_DOC_AD",
                "ACCOUNT_EXPORT_AE",
                "AVTALEGIRO_AG",
                "ACCOUNT_LIST_AL",
                "ATTACHMENT_AT",
                "AD_BORD_BA",
                "CLOSE_BORD_BC",
                "CORR_BORD_BK",
                "CLAIM_BORD_BL",
                "CLAIM_ADVICE_BM",
                "PROV_BORD_BP",
                "CANCEL_BS",
                "ADD_BORD_BV",
                "CANCEL_CA",
                "COVER_CREW_NOTE_CC",
                "CREW_DISCLETTE_CD",
                "COVNOTE_EXTRACT_CE",
                "CREWLIST_GEN_CG",
                "CLAIM_INVOICE_CI",
                "CLMCTRL_CK",
                "COVER_NOTE_CN",
                "CHANGE_OBJ_CO",
                "CREW_SETTLEMENT_CS",
                "DEBIT_AGENTNOTE_DA",
                "COV_DECLARATION_DE",
                "DEDUCT_INVOICE_DI",
                "INVOICE_DN",
                "IMP_ELBORD_EB",
                "E_INVOICE_EI",
                "ELREMIT_EL",
                "FREIGHT_O_CERTI_FC",
                "SINGLE_GIRO_GI",
                "GIRO_NOTE_GN",
                "INTRST_CALC_IC",
                "CREDIT_ADVICE_IG",
                "INFO_CLAIM_IL",
                "INS_INFO_IN",
                "INFO_PREMIUM_IP",
                "AGREEM_LETTER_LA",
                "BENEFIC_LETTER_LB",
                "CLAIM_LETTER_LC",
                "CLM_ING_INV_LTR_LD",
                "LETTER_LE",
                "INSURANCELETTER_LI",
                "CREW_LETTER_LM",
                "CLAIM_PAYMLETT_LP",
                "LEGAL_RECOVERY_LR",
                "CERTIFICATE_LS",
                "LETTER_EXPIRE_LX",
                "LETTER_MORTGAAG_LY",
                "LETTER_SECURITY_LZ",
                "COASTAL_OFFER_MC",
                "MAIL_CONFIRMAT_ML",
                "MARINE_OFFER_MM",
                "MAIL_EML_FILE_MP",
                "NEW_PERSON_NP",
                "OCR_IMPORT_OC",
                "DEBIT_ADVICE_OG",
                "PERIODICAL_PAY_P_",
                "PAYMENT_ADVICE_PA",
                "PRES_TO_CLIENT_PC",
                "PERSON_DOCUMENT_PE",
                "PL_REMINDER_PL",
                "PAYMENT_PM",
                "PERSON_OFFER_PO",
                "PRINT_DRAFT_PP",
                "STATEMENT_PS",
                "TECHN_STMT_PT",
                "PREM_WAIVER_PW",
                "REQ_FOR_QUOTE_QU",
                "_1REMINDER_R1",
                "_2REMINDER_R2",
                "_3REMINDER_R3",
                "_4REMINDER_R4",
                "_7REMINDER_R7",
                "_8REMINDER_R8",
                "_9REMINDER_R9",
                "CREDIT_NOTE_RC",
                "REMARK_RE",
                "MAX_NOTE_RM",
                "REMINDER_NOTE_RN",
                "ONLINE_NOTE_RO",
                "STATMENT_PREMIU_RP",
                "STATMENT_CLAIM_RQ",
                "PERSAC_LETTER_RS",
                "EXPIRE_REMINDER_RX",
                "SLIP_SL",
                "SYSTEM_MESSAGE_SM",
                "SLOW_PAYER_SP",
                "SYSTEM_SY",
                "TRIP_IMPORT_TI",
                "TAX_TFA_TT",
                "TAX_DOC_TX",
                "EXCEL_EXPORT_XL",
                "PLACEHOLDER_ZZ"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeFormTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CTRL_PAYMENTS___",
                "ACCOUNT_DOC_AD",
                "ACCOUNT_EXPORT_AE",
                "AVTALEGIRO_AG",
                "ACCOUNT_LIST_AL",
                "ATTACHMENT_AT",
                "AD_BORD_BA",
                "CLOSE_BORD_BC",
                "CORR_BORD_BK",
                "CLAIM_BORD_BL",
                "CLAIM_ADVICE_BM",
                "PROV_BORD_BP",
                "CANCEL_BS",
                "ADD_BORD_BV",
                "CANCEL_CA",
                "COVER_CREW_NOTE_CC",
                "CREW_DISCLETTE_CD",
                "COVNOTE_EXTRACT_CE",
                "CREWLIST_GEN_CG",
                "CLAIM_INVOICE_CI",
                "CLMCTRL_CK",
                "COVER_NOTE_CN",
                "CHANGE_OBJ_CO",
                "CREW_SETTLEMENT_CS",
                "DEBIT_AGENTNOTE_DA",
                "COV_DECLARATION_DE",
                "DEDUCT_INVOICE_DI",
                "INVOICE_DN",
                "IMP_ELBORD_EB",
                "E_INVOICE_EI",
                "ELREMIT_EL",
                "FREIGHT_O_CERTI_FC",
                "SINGLE_GIRO_GI",
                "GIRO_NOTE_GN",
                "INTRST_CALC_IC",
                "CREDIT_ADVICE_IG",
                "INFO_CLAIM_IL",
                "INS_INFO_IN",
                "INFO_PREMIUM_IP",
                "AGREEM_LETTER_LA",
                "BENEFIC_LETTER_LB",
                "CLAIM_LETTER_LC",
                "CLM_ING_INV_LTR_LD",
                "LETTER_LE",
                "INSURANCELETTER_LI",
                "CREW_LETTER_LM",
                "CLAIM_PAYMLETT_LP",
                "LEGAL_RECOVERY_LR",
                "CERTIFICATE_LS",
                "LETTER_EXPIRE_LX",
                "LETTER_MORTGAAG_LY",
                "LETTER_SECURITY_LZ",
                "COASTAL_OFFER_MC",
                "MAIL_CONFIRMAT_ML",
                "MARINE_OFFER_MM",
                "MAIL_EML_FILE_MP",
                "NEW_PERSON_NP",
                "OCR_IMPORT_OC",
                "DEBIT_ADVICE_OG",
                "PERIODICAL_PAY_P_",
                "PAYMENT_ADVICE_PA",
                "PRES_TO_CLIENT_PC",
                "PERSON_DOCUMENT_PE",
                "PL_REMINDER_PL",
                "PAYMENT_PM",
                "PERSON_OFFER_PO",
                "PRINT_DRAFT_PP",
                "STATEMENT_PS",
                "TECHN_STMT_PT",
                "PREM_WAIVER_PW",
                "REQ_FOR_QUOTE_QU",
                "_1REMINDER_R1",
                "_2REMINDER_R2",
                "_3REMINDER_R3",
                "_4REMINDER_R4",
                "_7REMINDER_R7",
                "_8REMINDER_R8",
                "_9REMINDER_R9",
                "CREDIT_NOTE_RC",
                "REMARK_RE",
                "MAX_NOTE_RM",
                "REMINDER_NOTE_RN",
                "ONLINE_NOTE_RO",
                "STATMENT_PREMIU_RP",
                "STATMENT_CLAIM_RQ",
                "PERSAC_LETTER_RS",
                "EXPIRE_REMINDER_RX",
                "SLIP_SL",
                "SYSTEM_MESSAGE_SM",
                "SLOW_PAYER_SP",
                "SYSTEM_SY",
                "TRIP_IMPORT_TI",
                "TAX_TFA_TT",
                "TAX_DOC_TX",
                "EXCEL_EXPORT_XL",
                "PLACEHOLDER_ZZ"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "DISPLAY_NAME",
              "DESCRIPTION",
              "REFERENCE",
              "MIME_TYPE",
              "MIME_SUBTYPE",
              "STATUS",
              "APPROVAL_STATUS",
              "FORM_TYPE",
              "ENTITY_TYPE",
              "CREATED",
              "CREATED_BY",
              "YEAR",
              "DOCUMENT_NUMBER",
              "PERSON_NAME",
              "PERSON_ID"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDocumentNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toDocumentNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "electronic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "attachmentType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["AGREEMENT"]
          },
          {
            "name": "toBeSignedBy",
            "in": "query",
            "description": "Identifies the user that a document can be signed on behalf of.",
            "required": false,
            "type": "string",
            "maxLength": 3,
            "minLength": 0
          },
          {
            "name": "documentSignatureStatuses",
            "in": "query",
            "description": "Identified signature states to search for. An empty value includes all types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SIG_NOT_REQ_N",
                "REJECTED_R",
                "SIGNED_S",
                "TO_BE_SIGNED_T"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "folderId",
            "in": "query",
            "description": "Search for documents in folder with the specified id. If the parameter is empty the search will simply disregard it.If the parameter has a negative value the search result will only include documents that are NOT linked to any folder",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search for documents with name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SearchResultDocumentArchive" }
          }
        }
      }
    },
    "/documentarchive/status/{status}": {
      "put": {
        "tags": ["Document Archive"],
        "operationId": "setStatus_2",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentarchive/emailhistory": {
      "post": {
        "tags": ["Document Archive"],
        "operationId": "logEmailHistory_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentArchiveEmailHistoryParams"
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentarchive/folders/{id}": {
      "delete": {
        "tags": ["Document Archive"],
        "summary": "Delete folder with the specified id",
        "description": "",
        "operationId": "deleteFolder_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Folder id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentarchive/folders": {
      "get": {
        "tags": ["Document Archive"],
        "summary": "Retrieve list of folders for a specific entity type and key",
        "description": "",
        "operationId": "getFolders_1",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "description": "Supported entity type",
            "required": true,
            "type": "string",
            "enum": ["CLAIM"]
          },
          {
            "name": "entityKey",
            "in": "query",
            "description": "Entity key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Folder" }
            }
          }
        }
      },
      "post": {
        "tags": ["Document Archive"],
        "summary": "Add new folder",
        "description": "",
        "operationId": "addFolder_1",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "description": "Supported entity type",
            "required": true,
            "type": "string",
            "enum": ["CLAIM"]
          },
          {
            "name": "entityKey",
            "in": "query",
            "description": "Entity key",
            "required": true,
            "type": "string"
          },
          {
            "name": "folderName",
            "in": "query",
            "description": "Folder name",
            "required": true,
            "type": "string",
            "maxLength": 200,
            "minLength": 0
          },
          {
            "name": "colorCode",
            "in": "query",
            "description": "Color code",
            "required": true,
            "type": "string",
            "enum": ["BLUE_B", "GRAY_1", "GREEN_G", "RED_R", "YELLOW_Y"]
          },
          {
            "name": "parentFolderId",
            "in": "query",
            "description": "Parent folder id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Folder" }
          }
        }
      },
      "put": {
        "tags": ["Document Archive"],
        "summary": "Move folder",
        "description": "",
        "operationId": "moveFolder_1",
        "parameters": [
          {
            "name": "folderId",
            "in": "query",
            "description": "Folder id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toFolderId",
            "in": "query",
            "description": "To folder. If target id empty it will become a root folder",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Folder" }
          }
        }
      }
    },
    "/documentarchive/{id}/emailhistory": {
      "get": {
        "tags": ["Document Archive"],
        "operationId": "getEmailHistory_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EmailHistory" }
            }
          }
        }
      }
    },
    "/documentarchive/approvalstatus/{approvalStatus}": {
      "put": {
        "tags": ["Document Archive"],
        "operationId": "setApprovalStatus_1",
        "parameters": [
          {
            "name": "approvalStatus",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": ["APPROVED_A", "DENIED_D", "NEVER_N", "TO_BE_APPROVED_T"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentarchive/folders/{id}/document": {
      "get": {
        "tags": ["Document Archive"],
        "summary": "Retrieve documents in the specified folder",
        "description": "",
        "operationId": "findDocumentsInFolder_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Folder id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DocumentArchive" }
            }
          }
        }
      },
      "post": {
        "tags": ["Document Archive"],
        "summary": "Add document to folder",
        "description": "",
        "operationId": "addDocumentToFolder_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Folder id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "documentId",
            "in": "query",
            "description": "Document id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      },
      "put": {
        "tags": ["Document Archive"],
        "summary": "Move document",
        "description": "",
        "operationId": "moveDocument_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "folderId",
            "in": "query",
            "description": "Folder id. If null the document will not be referenced by any folder.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentarchive/data": {
      "put": {
        "tags": ["Document Archive"],
        "summary": "Update document binary data. When createNew is true, the service will cancel the document and create a new one, otherwise the service will update the binary data. Default: false.",
        "description": "",
        "operationId": "updateData_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fileName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "createNew",
            "in": "formData",
            "required": false,
            "type": "Boolean"
          },
          {
            "name": "data",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DocumentArchive" }
          }
        }
      }
    },
    "/documentarchive/{id}/reject": {
      "post": {
        "tags": ["Document Archive"],
        "summary": "Reject electronically signing the specified document",
        "description": "",
        "operationId": "reject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentengine/init": {
      "post": {
        "tags": ["Document Engine"],
        "operationId": "init_3",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DocumentEngineInitParam" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ProducedDocument" }
          }
        }
      }
    },
    "/documentengine": {
      "post": {
        "tags": ["Document Engine"],
        "operationId": "create_4",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "markup",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "producedDocument",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentArchive" }
          }
        }
      }
    },
    "/documentengine/initmarkup": {
      "post": {
        "tags": ["Document Engine"],
        "operationId": "initMarkup_1",
        "produces": ["text/html"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DocumentEngineInitParam" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/documentengine/preview": {
      "post": {
        "tags": ["Document Engine"],
        "summary": "Get a PDF preview of a Produced Document. Data is returned with content-type application/octet-stream",
        "description": "",
        "operationId": "preview_1",
        "consumes": ["multipart/form-data"],
        "produces": ["application/octet-stream"],
        "parameters": [
          {
            "name": "markup",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachments",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": { "type": "file" },
            "collectionFormat": "multi"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/documentengine/initmarkup/claimpayment": {
      "post": {
        "tags": ["Document Engine"],
        "operationId": "initMarkupClaimPayment_1",
        "produces": ["text/html"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentEngineClaimPaymentInitParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/documentengine/initmarkup/ingoinginvoice": {
      "post": {
        "tags": ["Document Engine"],
        "operationId": "initMarkupIngoingInvoice_1",
        "produces": ["text/html"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentEngineIngoingInvoiceInitParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/systemconfig/documentnotificationgroups/{id}": {
      "get": {
        "tags": ["System config - Document Notification Groups"],
        "operationId": "get_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentNotificationGroup" }
          }
        }
      },
      "delete": {
        "tags": ["System config - Document Notification Groups"],
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/systemconfig/documentnotificationgroups": {
      "get": {
        "tags": ["System config - Document Notification Groups"],
        "operationId": "getDocumentNotificationGroups_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DocumentNotificationGroup" }
            }
          }
        }
      },
      "post": {
        "tags": ["System config - Document Notification Groups"],
        "operationId": "create_5",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DocumentNotificationGroup" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentNotificationGroup" }
          }
        }
      },
      "put": {
        "tags": ["System config - Document Notification Groups"],
        "operationId": "update_5",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DocumentNotificationGroup" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentNotificationGroup" }
          }
        }
      }
    },
    "/systemconfig/documentnotificationgroups/availableformtypes": {
      "get": {
        "tags": ["System config - Document Notification Groups"],
        "operationId": "getAvailableFormTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CTRL_PAYMENTS___",
                  "ACCOUNT_DOC_AD",
                  "ACCOUNT_EXPORT_AE",
                  "AVTALEGIRO_AG",
                  "ACCOUNT_LIST_AL",
                  "ATTACHMENT_AT",
                  "AD_BORD_BA",
                  "CLOSE_BORD_BC",
                  "CORR_BORD_BK",
                  "CLAIM_BORD_BL",
                  "CLAIM_ADVICE_BM",
                  "PROV_BORD_BP",
                  "CANCEL_BS",
                  "ADD_BORD_BV",
                  "CANCEL_CA",
                  "COVER_CREW_NOTE_CC",
                  "CREW_DISCLETTE_CD",
                  "COVNOTE_EXTRACT_CE",
                  "CREWLIST_GEN_CG",
                  "CLAIM_INVOICE_CI",
                  "CLMCTRL_CK",
                  "COVER_NOTE_CN",
                  "CHANGE_OBJ_CO",
                  "CREW_SETTLEMENT_CS",
                  "DEBIT_AGENTNOTE_DA",
                  "COV_DECLARATION_DE",
                  "DEDUCT_INVOICE_DI",
                  "INVOICE_DN",
                  "IMP_ELBORD_EB",
                  "E_INVOICE_EI",
                  "ELREMIT_EL",
                  "FREIGHT_O_CERTI_FC",
                  "SINGLE_GIRO_GI",
                  "GIRO_NOTE_GN",
                  "INTRST_CALC_IC",
                  "CREDIT_ADVICE_IG",
                  "INFO_CLAIM_IL",
                  "INS_INFO_IN",
                  "INFO_PREMIUM_IP",
                  "AGREEM_LETTER_LA",
                  "BENEFIC_LETTER_LB",
                  "CLAIM_LETTER_LC",
                  "CLM_ING_INV_LTR_LD",
                  "LETTER_LE",
                  "INSURANCELETTER_LI",
                  "CREW_LETTER_LM",
                  "CLAIM_PAYMLETT_LP",
                  "LEGAL_RECOVERY_LR",
                  "CERTIFICATE_LS",
                  "LETTER_EXPIRE_LX",
                  "LETTER_MORTGAAG_LY",
                  "LETTER_SECURITY_LZ",
                  "COASTAL_OFFER_MC",
                  "MAIL_CONFIRMAT_ML",
                  "MARINE_OFFER_MM",
                  "MAIL_EML_FILE_MP",
                  "NEW_PERSON_NP",
                  "OCR_IMPORT_OC",
                  "DEBIT_ADVICE_OG",
                  "PERIODICAL_PAY_P_",
                  "PAYMENT_ADVICE_PA",
                  "PRES_TO_CLIENT_PC",
                  "PERSON_DOCUMENT_PE",
                  "PL_REMINDER_PL",
                  "PAYMENT_PM",
                  "PERSON_OFFER_PO",
                  "PRINT_DRAFT_PP",
                  "STATEMENT_PS",
                  "TECHN_STMT_PT",
                  "PREM_WAIVER_PW",
                  "REQ_FOR_QUOTE_QU",
                  "_1REMINDER_R1",
                  "_2REMINDER_R2",
                  "_3REMINDER_R3",
                  "_4REMINDER_R4",
                  "_7REMINDER_R7",
                  "_8REMINDER_R8",
                  "_9REMINDER_R9",
                  "CREDIT_NOTE_RC",
                  "REMARK_RE",
                  "MAX_NOTE_RM",
                  "REMINDER_NOTE_RN",
                  "ONLINE_NOTE_RO",
                  "STATMENT_PREMIU_RP",
                  "STATMENT_CLAIM_RQ",
                  "PERSAC_LETTER_RS",
                  "EXPIRE_REMINDER_RX",
                  "SLIP_SL",
                  "SYSTEM_MESSAGE_SM",
                  "SLOW_PAYER_SP",
                  "SYSTEM_SY",
                  "TRIP_IMPORT_TI",
                  "TAX_TFA_TT",
                  "TAX_DOC_TX",
                  "EXCEL_EXPORT_XL",
                  "PLACEHOLDER_ZZ"
                ]
              }
            }
          }
        }
      }
    },
    "/documenttemplates/textplacecodes": {
      "get": {
        "tags": ["Document Templates"],
        "operationId": "getTextPlaceCodes_1",
        "parameters": [
          {
            "name": "validity",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["All", "ConditionSet"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TextPlaceCode" }
            }
          }
        }
      }
    },
    "/documenttemplates/custom": {
      "get": {
        "tags": ["Document Templates"],
        "operationId": "getCustomTemplates_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "ARCHIVE_EMAIL_AE",
              "CLAUSES_CL",
              "DOC_NOTIFY_DN",
              "FREIGHT_O_EMAIL_FE",
              "FORM_NOTIFY_FN",
              "MSG_NOTIFY_MN",
              "POLICY_EMAIL_PE",
              "RESET_PW_EMAIL_RE",
              "TRIP_EMAIL_TE"
            ]
          },
          {
            "name": "outputFormat",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["HTML_1", "TEXT_2"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DocumentTemplate" }
            }
          }
        }
      }
    },
    "/documenttemplates": {
      "get": {
        "tags": ["Document Templates"],
        "operationId": "getDocumentTemplates_1",
        "parameters": [
          {
            "name": "formType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "CTRL_PAYMENTS___",
              "ACCOUNT_DOC_AD",
              "ACCOUNT_EXPORT_AE",
              "AVTALEGIRO_AG",
              "ACCOUNT_LIST_AL",
              "ATTACHMENT_AT",
              "AD_BORD_BA",
              "CLOSE_BORD_BC",
              "CORR_BORD_BK",
              "CLAIM_BORD_BL",
              "CLAIM_ADVICE_BM",
              "PROV_BORD_BP",
              "CANCEL_BS",
              "ADD_BORD_BV",
              "CANCEL_CA",
              "COVER_CREW_NOTE_CC",
              "CREW_DISCLETTE_CD",
              "COVNOTE_EXTRACT_CE",
              "CREWLIST_GEN_CG",
              "CLAIM_INVOICE_CI",
              "CLMCTRL_CK",
              "COVER_NOTE_CN",
              "CHANGE_OBJ_CO",
              "CREW_SETTLEMENT_CS",
              "DEBIT_AGENTNOTE_DA",
              "COV_DECLARATION_DE",
              "DEDUCT_INVOICE_DI",
              "INVOICE_DN",
              "IMP_ELBORD_EB",
              "E_INVOICE_EI",
              "ELREMIT_EL",
              "FREIGHT_O_CERTI_FC",
              "SINGLE_GIRO_GI",
              "GIRO_NOTE_GN",
              "INTRST_CALC_IC",
              "CREDIT_ADVICE_IG",
              "INFO_CLAIM_IL",
              "INS_INFO_IN",
              "INFO_PREMIUM_IP",
              "AGREEM_LETTER_LA",
              "BENEFIC_LETTER_LB",
              "CLAIM_LETTER_LC",
              "CLM_ING_INV_LTR_LD",
              "LETTER_LE",
              "INSURANCELETTER_LI",
              "CREW_LETTER_LM",
              "CLAIM_PAYMLETT_LP",
              "LEGAL_RECOVERY_LR",
              "CERTIFICATE_LS",
              "LETTER_EXPIRE_LX",
              "LETTER_MORTGAAG_LY",
              "LETTER_SECURITY_LZ",
              "COASTAL_OFFER_MC",
              "MAIL_CONFIRMAT_ML",
              "MARINE_OFFER_MM",
              "MAIL_EML_FILE_MP",
              "NEW_PERSON_NP",
              "OCR_IMPORT_OC",
              "DEBIT_ADVICE_OG",
              "PERIODICAL_PAY_P_",
              "PAYMENT_ADVICE_PA",
              "PRES_TO_CLIENT_PC",
              "PERSON_DOCUMENT_PE",
              "PL_REMINDER_PL",
              "PAYMENT_PM",
              "PERSON_OFFER_PO",
              "PRINT_DRAFT_PP",
              "STATEMENT_PS",
              "TECHN_STMT_PT",
              "PREM_WAIVER_PW",
              "REQ_FOR_QUOTE_QU",
              "_1REMINDER_R1",
              "_2REMINDER_R2",
              "_3REMINDER_R3",
              "_4REMINDER_R4",
              "_7REMINDER_R7",
              "_8REMINDER_R8",
              "_9REMINDER_R9",
              "CREDIT_NOTE_RC",
              "REMARK_RE",
              "MAX_NOTE_RM",
              "REMINDER_NOTE_RN",
              "ONLINE_NOTE_RO",
              "STATMENT_PREMIU_RP",
              "STATMENT_CLAIM_RQ",
              "PERSAC_LETTER_RS",
              "EXPIRE_REMINDER_RX",
              "SLIP_SL",
              "SYSTEM_MESSAGE_SM",
              "SLOW_PAYER_SP",
              "SYSTEM_SY",
              "TRIP_IMPORT_TI",
              "TAX_TFA_TT",
              "TAX_DOC_TX",
              "EXCEL_EXPORT_XL",
              "PLACEHOLDER_ZZ"
            ]
          },
          {
            "name": "entityKey",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DocumentTemplate" }
            }
          }
        }
      }
    },
    "/documenttemplates/customchild": {
      "get": {
        "tags": ["Document Templates"],
        "operationId": "getCustomChildTemplates_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "ARCHIVE_EMAIL_AE",
              "CLAUSES_CL",
              "DOC_NOTIFY_DN",
              "FREIGHT_O_EMAIL_FE",
              "FORM_NOTIFY_FN",
              "MSG_NOTIFY_MN",
              "POLICY_EMAIL_PE",
              "RESET_PW_EMAIL_RE",
              "TRIP_EMAIL_TE"
            ]
          },
          {
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["HTML_1", "TEXT_2"]
          },
          {
            "name": "interest",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionCode",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DocumentTemplate" }
            }
          }
        }
      }
    },
    "/documenttemplates/{id}": {
      "get": {
        "tags": ["Document Templates"],
        "operationId": "getDocumentTemplate_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "includetext",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/DocumentTemplateWithText" }
          }
        }
      }
    },
    "/documenttemplates/fixedtexts/headers": {
      "get": {
        "tags": ["Document Templates"],
        "operationId": "getFixedTextHeaders_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FixedTextHeader" }
            }
          }
        }
      }
    },
    "/electronicremittance/{id}": {
      "get": {
        "tags": ["Electronic Remittance"],
        "operationId": "get_8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/electronicremittance/{id}/delete": {
      "post": {
        "tags": ["Electronic Remittance"],
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/electronicremittance/{id}/release": {
      "post": {
        "tags": ["Electronic Remittance"],
        "operationId": "release_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/electronicremittance/{id}/hold": {
      "post": {
        "tags": ["Electronic Remittance"],
        "operationId": "hold_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/electronicremittance/cosignatures": {
      "get": {
        "tags": ["Electronic Remittance"],
        "operationId": "getCoSignatures_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Signature" }
            }
          }
        }
      }
    },
    "/electronicremittance/{id}/countersign": {
      "post": {
        "tags": ["Electronic Remittance"],
        "operationId": "counterSign_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/electronicremittance/{id}/authorizationrule": {
      "put": {
        "tags": ["Electronic Remittance"],
        "operationId": "changeAuthorizationRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/AuthorizationRule" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ElectronicRemittance" }
          }
        }
      }
    },
    "/electronicremittance/countersign": {
      "get": {
        "tags": ["Electronic Remittance"],
        "operationId": "getCounterSignPayments_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "signature",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "electronicRemittanceStatuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NEW_1",
                "WAIT_FOR_SIGN_2",
                "READY_3",
                "SENT_BANK_4",
                "ACCEPTED_5",
                "SETTLED_6",
                "HOLD_7",
                "ERROR_8",
                "DELETED_9"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/SearchResultElectronicRemittance"
            }
          }
        }
      }
    },
    "/email": {
      "post": {
        "tags": ["Email"],
        "operationId": "sendEmail_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "json structure of ParisEmail",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachments",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": { "type": "file" },
            "collectionFormat": "multi"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/email/init": {
      "post": {
        "tags": ["Email"],
        "operationId": "initEmail_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/EmailInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ParisEmail" }
          }
        }
      }
    },
    "/fleetmarine/{id}": {
      "get": {
        "tags": ["Fleet Marine"],
        "operationId": "get_9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FleetMarine" }
          }
        }
      }
    },
    "/fleetmarine": {
      "get": {
        "tags": ["Fleet Marine"],
        "operationId": "search_4",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientAdvocate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACTIVE_A", "DECLINED_D", "EXPIRED_E", "PROSPECT_P"]
          },
          {
            "name": "connectedInsuredObject",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "manager",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "NAME",
              "CLIENT_ADVOCATE",
              "CONTACT_PERSON",
              "STATUS"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultFleetMarine" }
          }
        }
      },
      "post": {
        "tags": ["Fleet Marine"],
        "operationId": "create_6",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/FleetMarine" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FleetMarine" }
          }
        }
      },
      "put": {
        "tags": ["Fleet Marine"],
        "operationId": "update_6",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/FleetMarine" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FleetMarine" }
          }
        }
      }
    },
    "/fleetmarine/init": {
      "post": {
        "tags": ["Fleet Marine"],
        "operationId": "init_4",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FleetMarine" }
          }
        }
      }
    },
    "/fleetmarine/{id}/objects": {
      "get": {
        "tags": ["Fleet Marine"],
        "operationId": "getObjects_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InsuredObject" }
            }
          }
        }
      }
    },
    "/fleetmarine/{id}/connectobjects": {
      "post": {
        "tags": ["Fleet Marine"],
        "operationId": "connectObjects_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/fleetmarine/{id}/disconnectobjects": {
      "post": {
        "tags": ["Fleet Marine"],
        "operationId": "disconnectObjects_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/fleetmarine/{id}/roles": {
      "get": {
        "tags": ["Fleet Marine"],
        "operationId": "getFleetMarineRoles_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FleetMarineRole" }
            }
          }
        }
      },
      "post": {
        "tags": ["Fleet Marine"],
        "operationId": "changeRoles_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FleetMarineRole" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FleetMarineRole" }
            }
          }
        }
      }
    },
    "/fleetmarine/{id}/roles/init": {
      "post": {
        "tags": ["Fleet Marine"],
        "operationId": "initRole_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FleetMarineRole" }
          }
        }
      }
    },
    "/forms/{name}": {
      "get": {
        "tags": ["Forms"],
        "operationId": "get_10",
        "parameters": [
          { "name": "name", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Form" }
          }
        }
      }
    },
    "/forms": {
      "post": {
        "tags": ["Forms"],
        "operationId": "create_7",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Form" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Form" }
          }
        }
      },
      "put": {
        "tags": ["Forms"],
        "operationId": "update_7",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Form" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Form" }
          }
        }
      }
    },
    "/forms/submissions/{id}": {
      "get": {
        "tags": ["Forms"],
        "operationId": "getSubmission_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FormSubmission" }
          }
        }
      }
    },
    "/forms/{name}/submissions/{codeValue}": {
      "post": {
        "tags": ["Forms"],
        "operationId": "createSubmission_3",
        "consumes": ["multipart/form-data"],
        "parameters": [
          { "name": "name", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/MultipartBody" }
          },
          {
            "name": "codeValue",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FormSubmission" }
          }
        }
      }
    },
    "/forms/{name}/submissions": {
      "post": {
        "tags": ["Forms"],
        "operationId": "createSubmission",
        "consumes": ["multipart/form-data"],
        "parameters": [
          { "name": "name", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/MultipartBody" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FormSubmission" }
          }
        }
      }
    },
    "/forms/submissions/{id}/status": {
      "put": {
        "tags": ["Forms"],
        "operationId": "setStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FormSubmission" }
          }
        }
      }
    },
    "/forms/submissions/{id}/internalnote": {
      "put": {
        "tags": ["Forms"],
        "operationId": "setInternalNote_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/FormSubmission" }
          }
        }
      }
    },
    "/forms/submissions": {
      "get": {
        "tags": ["Forms"],
        "operationId": "searchSubmissions_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "formName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["DRAFT_D", "PROCESSED_P", "SUBMITTED_S"]
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM_CL",
              "COVERAGE_CO",
              "MEMBER_ME",
              "OBJECT_OB",
              "ONBOARDING_ON",
              "OTHER_OT",
              "PERSON_PE"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CREATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultFormSubmission" }
          }
        }
      }
    },
    "/forms/submissions/{id}/fields": {
      "get": {
        "tags": ["Forms"],
        "operationId": "getSubmissionFields_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FieldSubmission" }
            }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/taxregions": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getTaxRegions_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "isoCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CODE", "DESCRIPTION"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultTaxRegion" }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/timezones": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getTimeZones_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TimeZone" }
            }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/workplacetypes": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getWorkPlaceTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/WorkPlaceType" }
            }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/postalcodes": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getPostalCodes_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "isoCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CODE", "DESCRIPTION"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultPostalCode" }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/locations": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getUNLocations_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CODE", "DESCRIPTION"]
          },
          {
            "name": "iso2Country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["PORT", "RAIL_TERMINAL", "ROAD_TERMINAL", "AIRPORT"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultUNLocation" }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/areacodes": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getAreaCodes_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM_AREA",
              "TRADING_AREA",
              "VESSEL_AREA",
              "PERSON_AREA",
              "AMERICAN_STATE",
              "COUNTRY_CODE",
              "ROLE_AREA"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AreaCode" }
            }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/areacodes/{code}": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getAreaCode_1",
        "parameters": [
          { "name": "code", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/AreaCode" }
          }
        }
      }
    },
    "/systemcodes/geographiccodes/locations/{code}": {
      "get": {
        "tags": ["System codes - Geographic codes"],
        "operationId": "getUNLocation_1",
        "parameters": [
          { "name": "code", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UNLocation" }
          }
        }
      }
    },
    "/global/search": {
      "get": {
        "tags": ["Global Search"],
        "operationId": "search_5",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 5,
            "maximum": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/GlobalSearchResult" }
          }
        }
      }
    },
    "/systemcodes/insurancecodes/taxcodes": {
      "get": {
        "tags": ["System codes - Insurance codes"],
        "operationId": "getTaxCodes_1",
        "parameters": [
          {
            "name": "sectionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PERCENTAGE__", "AMOUNT_A"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TaxCode" }
            }
          }
        }
      }
    },
    "/systemcodes/insurancecodes/premiumcodes": {
      "get": {
        "tags": ["System codes - Insurance codes"],
        "operationId": "getPremiumCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PremiumCode" }
            }
          }
        }
      }
    },
    "/systemcodes/insurancecodes/ratemarkets": {
      "get": {
        "tags": ["System codes - Insurance codes"],
        "operationId": "getRateMarkets_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RateMarket" }
            }
          }
        }
      }
    },
    "/systemcodes/insurancecodes/rebates": {
      "get": {
        "tags": ["System codes - Insurance codes"],
        "operationId": "getRebates_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Rebate" }
            }
          }
        }
      }
    },
    "/systemcodes/insurancecodes/deductiblecodes": {
      "get": {
        "tags": ["System codes - Insurance codes"],
        "operationId": "getDeductibleCodes_1",
        "parameters": [
          {
            "name": "sectionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DeductibleCode" }
            }
          }
        }
      }
    },
    "/systemcodes/insurancecodes/nonmarineobjecttypes": {
      "get": {
        "tags": ["System codes - Insurance codes"],
        "operationId": "getNonmarineObjectTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NonmarineObjectType" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/hulltypes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getHullTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/HullType" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/manufacturers": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getManufacturers_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Manufacturer" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/majorcodes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getMajorCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MajorCode" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/businessareas": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getBusinessAreas_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BusinessArea" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/trackitcodes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getTrackItCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TrackItCode" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/nonmarinemodels": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getNonmarineModels_1",
        "parameters": [
          {
            "name": "nonmarineMakeCode",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NonmarineModel" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/transporttypes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getTransportTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TransportType" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/nonmarinemakes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getNonmarineMakes_1",
        "parameters": [
          {
            "name": "objectType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "VESSEL_1",
              "RIG_OBJECT_10",
              "FLOATING_INSTAL_12",
              "LIABILITY_13",
              "AQUAOBJECT_14",
              "FISH_15",
              "AQUA_CARGO_16",
              "COASTAL_2",
              "CARGO_OBJECT_3",
              "ENERGY_PHYSOBJ_4",
              "ENERGY_PACKOBJ_5",
              "PROPERTY_6",
              "VEHICLE_FLEET_60",
              "VEHICLE_61",
              "MOTORCYKLE_62",
              "MACHINE_63",
              "TRAILER_64",
              "PERSON_GROUP_65",
              "PERSON_66",
              "AVIATION_OBJECT_7",
              "BUILDING_70",
              "CABIN_71",
              "ARBEIDSMASKIN_73",
              "INVENTORY_74",
              "LEISURE_BOAT_75",
              "VALUABLES_76",
              "ANIMAL_77",
              "PLACE_FLEET_78",
              "PLACE_8",
              "CUMULE_9"
            ]
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NonmarineMake" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/vesseltypes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getVesselTypes_1",
        "parameters": [
          {
            "name": "objectType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VESSEL_1",
              "RIG_OBJECT_10",
              "FLOATING_INSTAL_12",
              "LIABILITY_13",
              "AQUAOBJECT_14",
              "FISH_15",
              "AQUA_CARGO_16",
              "COASTAL_2",
              "CARGO_OBJECT_3",
              "ENERGY_PHYSOBJ_4",
              "ENERGY_PACKOBJ_5",
              "PROPERTY_6",
              "VEHICLE_FLEET_60",
              "VEHICLE_61",
              "MOTORCYKLE_62",
              "MACHINE_63",
              "TRAILER_64",
              "PERSON_GROUP_65",
              "PERSON_66",
              "AVIATION_OBJECT_7",
              "BUILDING_70",
              "CABIN_71",
              "ARBEIDSMASKIN_73",
              "INVENTORY_74",
              "LEISURE_BOAT_75",
              "VALUABLES_76",
              "ANIMAL_77",
              "PLACE_FLEET_78",
              "PLACE_8",
              "CUMULE_9"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/VesselType" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/usagecodes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getUsageCodes_1",
        "parameters": [
          {
            "name": "objectType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VESSEL_1",
              "RIG_OBJECT_10",
              "FLOATING_INSTAL_12",
              "LIABILITY_13",
              "AQUAOBJECT_14",
              "FISH_15",
              "AQUA_CARGO_16",
              "COASTAL_2",
              "CARGO_OBJECT_3",
              "ENERGY_PHYSOBJ_4",
              "ENERGY_PACKOBJ_5",
              "PROPERTY_6",
              "VEHICLE_FLEET_60",
              "VEHICLE_61",
              "MOTORCYKLE_62",
              "MACHINE_63",
              "TRAILER_64",
              "PERSON_GROUP_65",
              "PERSON_66",
              "AVIATION_OBJECT_7",
              "BUILDING_70",
              "CABIN_71",
              "ARBEIDSMASKIN_73",
              "INVENTORY_74",
              "LEISURE_BOAT_75",
              "VALUABLES_76",
              "ANIMAL_77",
              "PLACE_FLEET_78",
              "PLACE_8",
              "CUMULE_9"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UsageCode" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/cargotypes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getCargoTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CargoType" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/icecodes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getIceCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/IceCode" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/vesselcodes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getVesselCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/VesselCode" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/enginetypes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getEngineTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EngineType" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/minorcodes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getMinorCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MinorCode" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/shipyards": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getShipyards_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Shipyard" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/materialtypes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getMaterialTypes_1",
        "parameters": [
          {
            "name": "objectType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VESSEL_1",
              "RIG_OBJECT_10",
              "FLOATING_INSTAL_12",
              "LIABILITY_13",
              "AQUAOBJECT_14",
              "FISH_15",
              "AQUA_CARGO_16",
              "COASTAL_2",
              "CARGO_OBJECT_3",
              "ENERGY_PHYSOBJ_4",
              "ENERGY_PACKOBJ_5",
              "PROPERTY_6",
              "VEHICLE_FLEET_60",
              "VEHICLE_61",
              "MOTORCYKLE_62",
              "MACHINE_63",
              "TRAILER_64",
              "PERSON_GROUP_65",
              "PERSON_66",
              "AVIATION_OBJECT_7",
              "BUILDING_70",
              "CABIN_71",
              "ARBEIDSMASKIN_73",
              "INVENTORY_74",
              "LEISURE_BOAT_75",
              "VALUABLES_76",
              "ANIMAL_77",
              "PLACE_FLEET_78",
              "PLACE_8",
              "CUMULE_9"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MaterialType" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/classifications": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getClassifications_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Classification" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/nonmarinemakeyears": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getNonmarineMakeYears_1",
        "parameters": [
          {
            "name": "nonmarineMakeCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/nonmarinesubmodels/car/{regNo}": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getNonmarineSubModelsByRegNo_1",
        "parameters": [
          { "name": "regNo", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NonmarineSubModel" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/enginepropulsion": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getEnginePropulsion_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EnginePropulsion" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/objectdetailcodes": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getObjectDetailCodes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ObjectDetailCode" }
            }
          }
        }
      }
    },
    "/systemcodes/objectcodes/nonmarinesubmodels": {
      "get": {
        "tags": ["System codes - Object codes"],
        "operationId": "getNonmarineSubModels_1",
        "parameters": [
          {
            "name": "nonmarineModelCode",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NonmarineSubModel" }
            }
          }
        }
      }
    },
    "/objects/{id}": {
      "get": {
        "tags": ["Objects"],
        "operationId": "get_11",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      }
    },
    "/objects": {
      "get": {
        "tags": ["Objects"],
        "operationId": "search_6",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "imoNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "VESSEL_1",
                "RIG_OBJECT_10",
                "FLOATING_INSTAL_12",
                "LIABILITY_13",
                "AQUAOBJECT_14",
                "FISH_15",
                "AQUA_CARGO_16",
                "COASTAL_2",
                "CARGO_OBJECT_3",
                "ENERGY_PHYSOBJ_4",
                "ENERGY_PACKOBJ_5",
                "PROPERTY_6",
                "VEHICLE_FLEET_60",
                "VEHICLE_61",
                "MOTORCYKLE_62",
                "MACHINE_63",
                "TRAILER_64",
                "PERSON_GROUP_65",
                "PERSON_66",
                "AVIATION_OBJECT_7",
                "BUILDING_70",
                "CABIN_71",
                "ARBEIDSMASKIN_73",
                "INVENTORY_74",
                "LEISURE_BOAT_75",
                "VALUABLES_76",
                "ANIMAL_77",
                "PLACE_FLEET_78",
                "PLACE_8",
                "CUMULE_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "vesselType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "manager",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fleetMarine",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "identification",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callSignal",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromInsuranceYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toInsuranceYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fleetObjectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "majorCode",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "address1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "address2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "flagAreaCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hasInsurancesOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchHistorical",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OBJECT_NUMBER",
              "IMO_NUMBER",
              "NAME",
              "EX_NAME",
              "VESSEL_TYPE",
              "MANAGER",
              "ORIGINAL_BUILT_YEAR"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultInsuredObject" }
          }
        }
      },
      "post": {
        "tags": ["Objects"],
        "operationId": "create_8",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      },
      "put": {
        "tags": ["Objects"],
        "operationId": "update_8",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      }
    },
    "/objects/init": {
      "post": {
        "tags": ["Objects"],
        "operationId": "init_5",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObjectInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      }
    },
    "/objects/versions/{versionId}": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getVersion_2",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      }
    },
    "/objects/{id}/versions": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getVersions_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/objects/versions": {
      "post": {
        "tags": ["Objects"],
        "operationId": "createVersion_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      },
      "put": {
        "tags": ["Objects"],
        "operationId": "updateVersion_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      }
    },
    "/objects/versions/details/{insuredObjectDetailsId}": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getInsuredObjectDetails_1",
        "parameters": [
          {
            "name": "insuredObjectDetailsId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObjectDetails" }
          }
        }
      },
      "delete": {
        "tags": ["Objects"],
        "operationId": "deleteInsuredObjectDetails_1",
        "parameters": [
          {
            "name": "insuredObjectDetailsId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/objects/versions/{versionId}/details/init": {
      "post": {
        "tags": ["Objects"],
        "operationId": "initInsuredObjectDetails_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObjectDetails" }
          }
        }
      }
    },
    "/objects/versions/{versionId}/details": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getInsuredObjectDetailsList_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InsuredObjectDetails" }
            }
          }
        }
      },
      "post": {
        "tags": ["Objects"],
        "operationId": "createInsuredObjectDetails_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObjectDetails" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObjectDetails" }
          }
        }
      }
    },
    "/objects/versions/details": {
      "put": {
        "tags": ["Objects"],
        "operationId": "updateInsuredObjectDetails_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObjectDetails" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObjectDetails" }
          }
        }
      }
    },
    "/objects/statistics": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getInsuredObjectStatistics_1",
        "parameters": [
          {
            "name": "objectNumbers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "integer", "format": "int32" },
            "collectionFormat": "multi"
          },
          {
            "name": "personId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "insurancesValidPerDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "interests",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InsuredObjectStatistic" }
            }
          }
        }
      }
    },
    "/objects/versions/{versionId}/roles": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getInsuredObjectRoles_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InsuredObjectRole" }
            }
          }
        }
      },
      "post": {
        "tags": ["Objects"],
        "operationId": "changeRoles_2",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InsuredObjectRole" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InsuredObjectRole" }
            }
          }
        }
      }
    },
    "/objects/fleet": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getInsuredObjectFleetList_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultInsuredObjectFleet" }
          }
        }
      }
    },
    "/objects/fleet/{insuredObjectFleetId}": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getInsuredObjectFleet_1",
        "parameters": [
          {
            "name": "insuredObjectFleetId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObjectFleet" }
          }
        }
      }
    },
    "/objects/simple": {
      "get": {
        "tags": ["Objects"],
        "operationId": "searchSimple_2",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "imoNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "VESSEL_1",
                "RIG_OBJECT_10",
                "FLOATING_INSTAL_12",
                "LIABILITY_13",
                "AQUAOBJECT_14",
                "FISH_15",
                "AQUA_CARGO_16",
                "COASTAL_2",
                "CARGO_OBJECT_3",
                "ENERGY_PHYSOBJ_4",
                "ENERGY_PACKOBJ_5",
                "PROPERTY_6",
                "VEHICLE_FLEET_60",
                "VEHICLE_61",
                "MOTORCYKLE_62",
                "MACHINE_63",
                "TRAILER_64",
                "PERSON_GROUP_65",
                "PERSON_66",
                "AVIATION_OBJECT_7",
                "BUILDING_70",
                "CABIN_71",
                "ARBEIDSMASKIN_73",
                "INVENTORY_74",
                "LEISURE_BOAT_75",
                "VALUABLES_76",
                "ANIMAL_77",
                "PLACE_FLEET_78",
                "PLACE_8",
                "CUMULE_9"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "vesselType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "manager",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fleetMarine",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "identification",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callSignal",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromInsuranceYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toInsuranceYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fleetObjectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "majorCode",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "address1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "address2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "flagAreaCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hasInsurancesOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchHistorical",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OBJECT_NUMBER",
              "IMO_NUMBER",
              "NAME",
              "EX_NAME",
              "VESSEL_TYPE",
              "MANAGER",
              "ORIGINAL_BUILT_YEAR"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/SearchResultSimpleInsuredObject"
            }
          }
        }
      }
    },
    "/objects/{id}/versions/init": {
      "post": {
        "tags": ["Objects"],
        "operationId": "initVersion_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InsuredObjectInitVersionParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      }
    },
    "/objects/versions/mortgagees/{mortgageeId}": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getMortgagee_1",
        "parameters": [
          {
            "name": "mortgageeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Mortgagee" }
          }
        }
      },
      "delete": {
        "tags": ["Objects"],
        "operationId": "deleteMortgagee_1",
        "parameters": [
          {
            "name": "mortgageeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/objects/fairplay/{imoNumber}": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getFromFairPlay_1",
        "parameters": [
          {
            "name": "imoNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObject" }
          }
        }
      }
    },
    "/objects/validateimonumber": {
      "get": {
        "tags": ["Objects"],
        "operationId": "validateImoNumber_1",
        "parameters": [
          {
            "name": "imoNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ImoNumberValidation" }
          }
        }
      }
    },
    "/objects/versions/{versionId}/mortgagees": {
      "get": {
        "tags": ["Objects"],
        "operationId": "getMortgagees_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Mortgagee" }
            }
          }
        }
      },
      "post": {
        "tags": ["Objects"],
        "operationId": "createMortgagee_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Mortgagee" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Mortgagee" }
          }
        }
      }
    },
    "/objects/versions/{versionId}/mortgagees/init": {
      "post": {
        "tags": ["Objects"],
        "operationId": "initMortgagee_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Mortgagee" }
          }
        }
      }
    },
    "/objects/versions/mortgagees": {
      "put": {
        "tags": ["Objects"],
        "operationId": "updateMortgagee_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Mortgagee" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Mortgagee" }
          }
        }
      }
    },
    "/objects/versions/{versionId}/roles/init": {
      "post": {
        "tags": ["Objects"],
        "operationId": "initRole_2",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsuredObjectRole" }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": ["Messages"],
        "operationId": "get_12",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Message" }
          }
        }
      }
    },
    "/messages": {
      "get": {
        "tags": ["Messages"],
        "operationId": "search_7",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "text",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACTIVE_A", "CANCELLED_C", "HISTORY_H", "TREATED_T"]
          },
          {
            "name": "includeRead",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CREATED", "UPDATED", "SUBJECT", "PERSON"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultMessage" }
          }
        }
      },
      "post": {
        "tags": ["Messages"],
        "operationId": "create_9",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Message" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Message" }
          }
        }
      }
    },
    "/messages/count": {
      "get": {
        "tags": ["Messages"],
        "operationId": "getCount_2",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "text",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACTIVE_A", "CANCELLED_C", "HISTORY_H", "TREATED_T"]
          },
          {
            "name": "includeRead",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CREATED", "UPDATED", "SUBJECT", "PERSON"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/messages/{id}/markasactive": {
      "put": {
        "tags": ["Messages"],
        "operationId": "markAsActive_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/messages/{id}/markastreated": {
      "put": {
        "tags": ["Messages"],
        "operationId": "markAsTreated_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/messages/{id}/markasread": {
      "put": {
        "tags": ["Messages"],
        "operationId": "markAsRead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/messages/unreadcount": {
      "get": {
        "tags": ["Messages"],
        "operationId": "getUnreadCount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/notes/{id}": {
      "get": {
        "tags": ["Notes"],
        "operationId": "get_13",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Note" }
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": ["Notes"],
        "operationId": "search_8",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "SUBJECT", "CODE_VALUE", "CREATED", "UPDATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultNote" }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "operationId": "create_10",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Note" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Note" }
          }
        }
      },
      "put": {
        "tags": ["Notes"],
        "operationId": "update_9",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Note" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Note" }
          }
        }
      }
    },
    "/notes/count": {
      "get": {
        "tags": ["Notes"],
        "operationId": "getCount_3",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "SUBJECT", "CODE_VALUE", "CREATED", "UPDATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/notes/{id}/history": {
      "get": {
        "tags": ["Notes"],
        "operationId": "getNoteHistory_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Note" }
            }
          }
        }
      }
    },
    "/notes/{id}/comments": {
      "post": {
        "tags": ["Notes"],
        "operationId": "createComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        }
      },
      "put": {
        "tags": ["Notes"],
        "operationId": "updateComment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ActivityComment" }
          }
        }
      }
    },
    "/notes/comments": {
      "get": {
        "tags": ["Notes"],
        "operationId": "searchComments",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "PRIORITY", "CREATED", "UPDATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultActivityComment" }
          }
        }
      }
    },
    "/notes/comments/{commentId}": {
      "delete": {
        "tags": ["Notes"],
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/notes/comments/count": {
      "get": {
        "tags": ["Notes"],
        "operationId": "getCommentCount",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "PRIORITY", "CREATED", "UPDATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/notifications/{id}": {
      "get": {
        "tags": ["Notifications"],
        "operationId": "get_14",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Notification" }
          }
        }
      }
    },
    "/notifications/search": {
      "get": {
        "tags": ["Notifications"],
        "operationId": "search_9",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeRead",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "toSignature",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultNotification" }
          }
        }
      }
    },
    "/notifications/{id}/markasunread": {
      "put": {
        "tags": ["Notifications"],
        "operationId": "markAsUnread_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/notifications/{id}/markasread": {
      "put": {
        "tags": ["Notifications"],
        "operationId": "markAsRead_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/notifications/unreadcount": {
      "get": {
        "tags": ["Notifications"],
        "operationId": "getUnreadCount_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "integer", "format": "int32" }
          }
        }
      }
    },
    "/notifications/markallasread": {
      "put": {
        "tags": ["Notifications"],
        "operationId": "markAllAsRead",
        "parameters": [],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/agreements/{id}": {
      "get": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "get_15",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "storeInHistory",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "deleteAgreement_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/agreements/{id}/close": {
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "closeOffer_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      }
    },
    "/offermarine/agreements/{id}/undoexporttoparis": {
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "undoExportToParis_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/agreements/{id}/exporttoparis": {
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "exportToParis_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ExportToParisParams" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/agreements/{id}/allbilling": {
      "get": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "getAllBilling_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/SimplePerson" }
            }
          }
        }
      }
    },
    "/offermarine/agreements": {
      "get": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "searchAgreements",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "team",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CANCELLED_C",
              "ESTABLISHED_E",
              "OFFER_O",
              "QUEUED_Q",
              "REPLACED_R"
            ]
          },
          {
            "name": "submissionType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NEWRENEW_0",
              "ADD__OBJECT_1",
              "VALUE_2",
              "TRIP_3",
              "LAYUP_4",
              "EXPIRE_5",
              "PROLONG_6",
              "GENERAL_ADD_7",
              "GENERAL_RETURN_8",
              "TEXT_ADD_9"
            ]
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_ID",
              "ORIGINAL_INSURED",
              "TEXT",
              "TEAM",
              "STATUS",
              "SUBMISSION_TYPE"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/SearchResultOfferMarineAgreement"
            }
          }
        }
      },
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "createAgreement_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "updateAgreement_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      }
    },
    "/offermarine/agreements/import": {
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "importOffer_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "data",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/agreements/init": {
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "initAgreement_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineAgreementInitParam" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      }
    },
    "/offermarine/agreements/{id}/open": {
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "openOffer_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      }
    },
    "/offermarine/agreements/history": {
      "get": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "getHistory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineAgreement" }
            }
          }
        }
      }
    },
    "/offermarine/agreements/{id}/copy": {
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "copyOfferToNewAgreement_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CopyOfferParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineAgreement" }
          }
        }
      }
    },
    "/offermarine/agreements/{id}/insurerpresentations": {
      "get": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "getInsurerPresentations_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfferMarineInsurerPresentation"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "createInsurerPresentations_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateOfferMarineInsurerPresentationParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfferMarineInsurerPresentation"
              }
            }
          }
        }
      }
    },
    "/offermarine/agreements/{id}/clientpresentations": {
      "get": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "getClientPresentations_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineClientPresentation" }
            }
          }
        }
      },
      "post": {
        "tags": ["Offer Marine - Agreements"],
        "operationId": "createClientPresentation_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateOfferMarineClientPresentationParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineClientPresentation" }
          }
        }
      }
    },
    "/offermarine/objects/connectobjects": {
      "post": {
        "tags": ["Offer Marine - Objects"],
        "operationId": "connectObjects",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineObjectConnectParams" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/objects/disconnectobjects": {
      "post": {
        "tags": ["Offer Marine - Objects"],
        "operationId": "disconnectObjects",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineObjectConnectParams" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/objects": {
      "get": {
        "tags": ["Offer Marine - Objects"],
        "operationId": "getOfferMarineObjects_1",
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineObject" }
            }
          }
        }
      }
    },
    "/offermarine/objects/{id}": {
      "get": {
        "tags": ["Offer Marine - Objects"],
        "operationId": "getOfferMarineObject_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineObject" }
          }
        }
      }
    },
    "/offermarine/sections/{id}": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getSection_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "deleteSection_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/sections/init": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "initSection_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineSectionInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        }
      }
    },
    "/offermarine/sections": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getSections_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineSection" }
            }
          }
        }
      },
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "createSection_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "updateSection_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        }
      }
    },
    "/offermarine/sections/deductiblesets/{id}": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getDeductibleSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "deleteDeductibleSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/sections/deductiblesets/{id}/copy": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "copyDeductibleSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CopyDeductibleSetParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
          }
        }
      }
    },
    "/offermarine/sections/conditionsets/{id}": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getConditionSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineConditionSet" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "deleteConditionSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/sections/{id}/conditionsets": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getConditionSets_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineConditionSet" }
            }
          }
        }
      }
    },
    "/offermarine/sections/{id}/conditionsets/init": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "initConditionSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineConditionSet" }
          }
        }
      }
    },
    "/offermarine/sections/conditionsets": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "createConditionSet_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineConditionSet" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineConditionSet" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "updateConditionSet_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineConditionSet" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineConditionSet" }
          }
        }
      }
    },
    "/offermarine/sections/{id}/copy": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "createCopySection_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CopySectionParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        }
      }
    },
    "/offermarine/sections/{id}/deductiblesets": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getDeductibleSets_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
            }
          }
        }
      }
    },
    "/offermarine/sections/{id}/deductiblesets/init": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "initDeductibleSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
          }
        }
      }
    },
    "/offermarine/sections/{id}/initcopy": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "initCopySection_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSection" }
          }
        }
      }
    },
    "/offermarine/sections/rebatesets/{id}": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getRebateSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineRebateSet" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "deleteRebateSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/sections/{id}/insurances": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getInsurances_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineInsurance" }
            }
          }
        }
      }
    },
    "/offermarine/sections/insurances/{id}": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getInsurance_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineInsurance" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "deleteInsurance_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/sections/taxes": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "createTax",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineSectionTaxes" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSectionTaxes" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "updateTax",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineSectionTaxes" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSectionTaxes" }
          }
        }
      }
    },
    "/offermarine/sections/{id}/taxes/init": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "initTax",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TaxInitParam" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSectionTaxes" }
          }
        }
      }
    },
    "/offermarine/sections/{id}/taxes": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getTaxes",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineSectionTaxes" }
            }
          }
        }
      }
    },
    "/offermarine/sections/{id}/rebatesets/init": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "initRebateSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineRebateSet" }
          }
        }
      }
    },
    "/offermarine/sections/{id}/installments": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getInstallments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineInstallment" }
            }
          }
        }
      },
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "changeInstallments_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineInstallment" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineInstallment" }
            }
          }
        }
      }
    },
    "/offermarine/sections/rebatesets/{id}/copy": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "copyRebateSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CopyRebateSetParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineRebateSet" }
          }
        }
      }
    },
    "/offermarine/sections/rebatesets": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "createRebateSet_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineRebateSet" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineRebateSet" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "updateRebateSet_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineRebateSet" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineRebateSet" }
          }
        }
      }
    },
    "/offermarine/sections/taxes/{id}": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getTax",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSectionTaxes" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "deleteTax",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/sections/insurances": {
      "put": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "updateInsurance_2",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineInsurance" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineInsurance" }
          }
        }
      }
    },
    "/offermarine/sections/{id}/rebatesets": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getRebateSets_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineRebateSet" }
            }
          }
        }
      }
    },
    "/offermarine/sections/deductiblesets": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "createDeductibleSet_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "updateDeductibleSet_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineDeductibleSet" }
          }
        }
      }
    },
    "/offermarine/sections/defaultinsurances": {
      "post": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "createDefaultInsurances_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OfferMarineInsurancesInitParams"
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/sections/{id}/dummysection/globalconditionset": {
      "get": {
        "tags": ["Offer Marine - Sections"],
        "operationId": "getGlobalConditionSet_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineConditionSet" }
          }
        }
      }
    },
    "/offermarine/statistics/{offerMarineAgreementId}/claim": {
      "get": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "getClaimStatistics_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineClaimStatistics" }
            }
          }
        }
      }
    },
    "/offermarine/statistics/{offerMarineAgreementId}/fleet": {
      "get": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "getFleetStatistics_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineFleetStatistics" }
            }
          }
        }
      }
    },
    "/offermarine/statistics/{offerMarineAgreementId}/placements": {
      "get": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "getStatisticsPlacements_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfferMarineStatisticsPlacement"
              }
            }
          }
        }
      }
    },
    "/offermarine/statistics/fleet": {
      "post": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "createFleetStatistics_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineFleetStatistics" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineFleetStatistics" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "updateFleetStatistics_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineFleetStatistics" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineFleetStatistics" }
          }
        }
      }
    },
    "/offermarine/statistics/fleet/{fleetStatisticsId}": {
      "delete": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "deleteFleetStatistics_1",
        "parameters": [
          {
            "name": "fleetStatisticsId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/statistics/{offerMarineAgreementId}/claim/init": {
      "post": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "initClaimStatistics_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineClaimStatistics" }
          }
        }
      }
    },
    "/offermarine/statistics/claim": {
      "post": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "createClaimStatistics_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineClaimStatistics" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineClaimStatistics" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "updateClaimStatistics_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineClaimStatistics" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineClaimStatistics" }
          }
        }
      }
    },
    "/offermarine/statistics/{offerMarineAgreementId}/regenerate": {
      "post": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "regenerateStatistics_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/statistics/{offerMarineAgreementId}/fleet/init": {
      "post": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "initFleetStatistics_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineFleetStatistics" }
          }
        }
      }
    },
    "/offermarine/statistics/claim/{claimStatisticsId}": {
      "delete": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "deleteClaimStatistics_1",
        "parameters": [
          {
            "name": "claimStatisticsId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/statistics/{offerMarineAgreementId}/ratemarkets": {
      "get": {
        "tags": ["Offer Marine - Statistics"],
        "operationId": "getStatisticsRateMarkets_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfferMarineStatisticsRateMarket"
              }
            }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/status/open": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "open",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/insurances": {
      "get": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "getInsurances",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineInsurance" }
            }
          }
        }
      }
    },
    "/offermarine/submissions": {
      "get": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "getSubmissions_1",
        "parameters": [
          {
            "name": "offerMarineAgreementId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offerMarineSectionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarineSubmission" }
            }
          }
        }
      },
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "createSubmission_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "updateSubmission_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}": {
      "get": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "getSubmission",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "deleteSubmission_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/submissions/insurances/{id}": {
      "get": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "getInsurance",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineInsurance" }
          }
        }
      }
    },
    "/offermarine/submissions/init": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "initSubmission_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OfferMarineSubmissionInitParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/placements": {
      "get": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "getPlacements_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OfferMarinePlacement" }
            }
          }
        }
      }
    },
    "/offermarine/submissions/placements": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "createPlacement_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarinePlacement" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarinePlacement" }
          }
        }
      },
      "put": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "updatePlacement",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarinePlacement" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarinePlacement" }
          }
        }
      }
    },
    "/offermarine/submissions/placements/{id}": {
      "get": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "getPlacement",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarinePlacement" }
          }
        }
      },
      "delete": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "deletePlacement_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/offermarine/submissions/{id}/status/refuse": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "refuseSubmission_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/status/noorder": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "noOrderSubmission_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/copy": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "copySubmission_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CopySubmissionParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/offermarine/submissions/insurances": {
      "put": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "updateInsurance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/OfferMarineInsurance" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineInsurance" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/placements/init": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "initPlacement_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarinePlacement" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/finalacceptance/accept": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "acceptSubmission_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/offermarine/submissions/{id}/finalacceptance/unaccept": {
      "post": {
        "tags": ["Offer Marine - Submissions"],
        "operationId": "unacceptSubmission_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineSubmission" }
          }
        }
      }
    },
    "/systemcodes/personcodes/subtypes/{type}": {
      "get": {
        "tags": ["System codes - Person codes"],
        "operationId": "getPersonSubTypes_1",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "INSURANCE_COMP_1",
              "LAWYER_10",
              "AVR_ADJUSTER_11",
              "RATING_COMP_12",
              "MARITIME_AUTHOR_13",
              "INSURANCE_BROKE_2",
              "OPPOSITE_PARTY_21",
              "CLAIM_RECEIVER_22",
              "ONE_TIME_VENDOR_23",
              "COVER_3",
              "QUOTA_SHTREATY_4",
              "CUSTOMER_DIR_5",
              "EMPLOYEE_51",
              "CREW_52",
              "ASSOCIATION_55",
              "SALES_AGENT_6",
              "AGENTOFFICE_61",
              "AGENTEMPLOYEE_62",
              "SURVEYOR_7",
              "MORTGBANK_8",
              "ORGANOFFICE_81",
              "ORGEMPLOYEE_82",
              "CORRESPONDENT_83",
              "REGION_85",
              "MORTGOFFICE_86",
              "INTERIM_1_88",
              "MORTGAGEE_CON_9",
              "OWN_RETENTION_91",
              "CUTOFF_92",
              "OWN_COMM_BR_93",
              "TECHNICAL_ADDR_94",
              "INTERIM_ACCOUNT_95",
              "INGOING_VAT_96",
              "OUTGOING_VAT_97",
              "INTERIM_2_98",
              "OTHER_99"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonSubType" }
            }
          }
        }
      }
    },
    "/systemcodes/personcodes/ratings": {
      "get": {
        "tags": ["System codes - Person codes"],
        "operationId": "getPersonRatings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonRating" }
            }
          }
        }
      }
    },
    "/systemcodes/personcodes/organizations": {
      "get": {
        "tags": ["System codes - Person codes"],
        "operationId": "getPersonOrganizations_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonOrganization" }
            }
          }
        }
      }
    },
    "/persons/{id}": {
      "get": {
        "tags": ["Persons"],
        "operationId": "get_16",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "storeInHistory",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      }
    },
    "/persons": {
      "get": {
        "tags": ["Persons"],
        "operationId": "search_11",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          { "name": "ssn", "in": "query", "required": false, "type": "string" },
          {
            "name": "orgNo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "shortName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INSURANCE_COMP_1",
                "LAWYER_10",
                "AVR_ADJUSTER_11",
                "RATING_COMP_12",
                "MARITIME_AUTHOR_13",
                "INSURANCE_BROKE_2",
                "OPPOSITE_PARTY_21",
                "CLAIM_RECEIVER_22",
                "ONE_TIME_VENDOR_23",
                "COVER_3",
                "QUOTA_SHTREATY_4",
                "CUSTOMER_DIR_5",
                "EMPLOYEE_51",
                "CREW_52",
                "ASSOCIATION_55",
                "SALES_AGENT_6",
                "AGENTOFFICE_61",
                "AGENTEMPLOYEE_62",
                "SURVEYOR_7",
                "MORTGBANK_8",
                "ORGANOFFICE_81",
                "ORGEMPLOYEE_82",
                "CORRESPONDENT_83",
                "REGION_85",
                "MORTGOFFICE_86",
                "INTERIM_1_88",
                "MORTGAGEE_CON_9",
                "OWN_RETENTION_91",
                "CUTOFF_92",
                "OWN_COMM_BR_93",
                "TECHNICAL_ADDR_94",
                "INTERIM_ACCOUNT_95",
                "INGOING_VAT_96",
                "OUTGOING_VAT_97",
                "INTERIM_2_98",
                "OTHER_99"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "activeCoveragesOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hasInsurancesOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeStopUse",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeInvisible",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "concern",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crmId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "NAME", "SSN", "ORG_NO", "TYPE"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultPerson" }
          }
        }
      },
      "post": {
        "tags": ["Persons"],
        "summary": "Create a legal person",
        "description": "",
        "operationId": "create_11",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Person" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "summary": "Update a legal person",
        "description": "",
        "operationId": "update_10",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Person" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      }
    },
    "/persons/init": {
      "post": {
        "tags": ["Persons"],
        "operationId": "init_6",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      }
    },
    "/persons/{id}/address": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getAddress_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "busnDivision",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "busnSection",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "busnClass",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "function",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MAINGENERAL_0",
              "PROVAD_ADRESS_1",
              "CLOSING_ADR_2",
              "CLAIM_ADR_3",
              "STATEMENT_ADRES_4",
              "STATMENT_IF_41",
              "STATEMENT_VESTA_42",
              "STATEMENT_STB_43",
              "STATEMENT_SAMPO_44",
              "STATMENT_PREMIU_48",
              "STATMENT_CLAIM_49",
              "POLICY_ADDRESS_5",
              "POLICY_TRIP_51",
              "PREMIUM_NOTE_6",
              "PREMNOTE_IF_61",
              "PREM_NOTE_VESTA_62",
              "PREMNOTESTOREBR_63",
              "PREMNOTESAMPO_64",
              "PREMNOTEGARDAB_67",
              "PREM_NOTE_TRIP_68",
              "REMINDER_69",
              "IMPORT_OCR_7",
              "TRIP_EMAIL_71",
              "ATG_8",
              "COMPANY_MAIL_80",
              "INTERNVAT_ADDR_85",
              "REGISTEROWNER_86",
              "PERFORMCARRIER_87",
              "DMLC_OWNER_88",
              "COFR_APPLICANT_89",
              "VISITING_ADRES_90"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonAddress" }
          }
        }
      }
    },
    "/persons/responsibles/search": {
      "get": {
        "tags": ["Persons"],
        "operationId": "search_10",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PERSON_NAME", "CONTACT_NAME"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "responsible",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultPersonResponsible" }
          }
        }
      }
    },
    "/persons/versions/{versionId}": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getVersion",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      }
    },
    "/persons/{id}/versions": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/persons/versions": {
      "post": {
        "tags": ["Persons"],
        "operationId": "createVersion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Person" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "operationId": "updateVersion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Person" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      }
    },
    "/persons/{id}/roles": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getRoles_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "roleTypeId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonRole" }
            }
          }
        }
      },
      "post": {
        "tags": ["Persons"],
        "operationId": "changeRoles_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonRole" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonRole" }
            }
          }
        }
      }
    },
    "/persons/{id}/addresses/history": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getAddressHistoryList_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonAddress" }
            }
          }
        }
      }
    },
    "/persons/{id}/alternatepayer/activateeinvoiceb2b": {
      "post": {
        "tags": ["Persons"],
        "operationId": "activateEInvoiceB2BAlternatePayer_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/EInvoiceResult" }
          }
        }
      }
    },
    "/persons/{id}/activateeinvoiceb2g": {
      "post": {
        "tags": ["Persons"],
        "operationId": "activateEInvoiceB2G_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/EInvoiceResult" }
          }
        }
      }
    },
    "/persons/responsibles/avatar": {
      "get": {
        "tags": ["Persons"],
        "summary": "Get the binary data for an avatar image. Data is returned with content-type application/octet-stream",
        "description": "",
        "operationId": "getResponsibleAvatar_1",
        "produces": ["application/octet-stream"],
        "parameters": [
          { "name": "id", "in": "query", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      },
      "post": {
        "tags": ["Persons"],
        "operationId": "createResponsibleAvatar_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "data",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Attachment" }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "operationId": "deleteResponsibleAvatar_1",
        "parameters": [
          { "name": "id", "in": "query", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/persons/{id}/deactivateeinvoiceb2bb2g": {
      "post": {
        "tags": ["Persons"],
        "operationId": "deactivateEInvoiceB2BB2G_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/EInvoiceResult" }
          }
        }
      }
    },
    "/persons/{id}/internationalidentifiers": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getPersonInternationalIdentifiers_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonInternationalIdentifier" }
            }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "operationId": "deletePersonInternationalIdentifier_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "country",
            "in": "query",
            "required": true,
            "type": "string"
          },
          { "name": "type", "in": "query", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/persons/{id}/bankaccounts/history": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getBankAccountHistoryList_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonBankAccount" }
            }
          }
        }
      }
    },
    "/persons/versions/{versionId}/restricted": {
      "get": {
        "tags": ["Persons"],
        "operationId": "disablePersonFields_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "boolean" }
          }
        }
      }
    },
    "/persons/{id}/alternatepayer": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getAlternatePayer_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      },
      "post": {
        "tags": ["Persons"],
        "operationId": "createAlternatePayer_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Person" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "operationId": "updateAlternatePayer_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Person" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "operationId": "deleteAlternatePayer_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/persons/{id}/customeridentificationnumber": {
      "post": {
        "tags": ["Persons"],
        "operationId": "createCustomerIdentificationNumber_1",
        "produces": ["text/plain"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/persons/{id}/activateeinvoiceb2b": {
      "post": {
        "tags": ["Persons"],
        "operationId": "activateEInvoiceB2B_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/EInvoiceResult" }
          }
        }
      }
    },
    "/persons/{id}/statistics": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getPersonStatistics_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interests",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonStatistic" }
          }
        }
      }
    },
    "/persons/versions/{versionId}/address/restricted": {
      "get": {
        "tags": ["Persons"],
        "operationId": "disablePersonAddressFields_1",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "function",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MAINGENERAL_0",
              "PROVAD_ADRESS_1",
              "CLOSING_ADR_2",
              "CLAIM_ADR_3",
              "STATEMENT_ADRES_4",
              "STATMENT_IF_41",
              "STATEMENT_VESTA_42",
              "STATEMENT_STB_43",
              "STATEMENT_SAMPO_44",
              "STATMENT_PREMIU_48",
              "STATMENT_CLAIM_49",
              "POLICY_ADDRESS_5",
              "POLICY_TRIP_51",
              "PREMIUM_NOTE_6",
              "PREMNOTE_IF_61",
              "PREM_NOTE_VESTA_62",
              "PREMNOTESTOREBR_63",
              "PREMNOTESAMPO_64",
              "PREMNOTEGARDAB_67",
              "PREM_NOTE_TRIP_68",
              "REMINDER_69",
              "IMPORT_OCR_7",
              "TRIP_EMAIL_71",
              "ATG_8",
              "COMPANY_MAIL_80",
              "INTERNVAT_ADDR_85",
              "REGISTEROWNER_86",
              "PERFORMCARRIER_87",
              "DMLC_OWNER_88",
              "COFR_APPLICANT_89",
              "VISITING_ADRES_90"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "boolean" }
          }
        }
      }
    },
    "/persons/{id}/responsibles/init": {
      "post": {
        "tags": ["Persons"],
        "operationId": "initResponsible_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonResponsible" }
          }
        }
      }
    },
    "/persons/{id}/responsibles": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getResponsibles_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonResponsible" }
            }
          }
        }
      }
    },
    "/persons/{id}/addresses/init": {
      "post": {
        "tags": ["Persons"],
        "operationId": "initAddress_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonAddress" }
          }
        }
      }
    },
    "/persons/{id}/avatar": {
      "get": {
        "tags": ["Persons"],
        "summary": "Get the binary data for an avatar image. Data is returned with content-type application/octet-stream",
        "description": "",
        "operationId": "getAvatar_1",
        "produces": ["application/octet-stream"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      },
      "post": {
        "tags": ["Persons"],
        "operationId": "createAvatar_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "data",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Attachment" }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "operationId": "deleteAvatar_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/persons/{id}/bankaccounts/init": {
      "post": {
        "tags": ["Persons"],
        "operationId": "initBankAccount_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonBankAccount" }
          }
        }
      }
    },
    "/persons/bankaccounts": {
      "post": {
        "tags": ["Persons"],
        "operationId": "createBankAccount_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonBankAccount" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonBankAccount" }
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "operationId": "updateBankAccount_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonBankAccount" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonBankAccount" }
          }
        }
      }
    },
    "/persons/{id}/bankaccounts": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getBankAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stopUse",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonBankAccount" }
            }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "operationId": "deleteBankAccount_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineNo",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/persons/addresses": {
      "post": {
        "tags": ["Persons"],
        "operationId": "createAddress_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonAddress" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonAddress" }
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "operationId": "updateAddress_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonAddress" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonAddress" }
          }
        }
      }
    },
    "/persons/responsibles": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getResponsible_1",
        "parameters": [
          { "name": "id", "in": "query", "required": false, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonResponsible" }
          }
        }
      },
      "post": {
        "tags": ["Persons"],
        "operationId": "createResponsible_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonResponsible" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonResponsible" }
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "operationId": "updateResponsible_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonResponsible" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonResponsible" }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "operationId": "deleteResponsible_1",
        "parameters": [
          { "name": "id", "in": "query", "required": false, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/persons/{id}/addresses": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getAddresses_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonAddress" }
            }
          }
        }
      },
      "delete": {
        "tags": ["Persons"],
        "operationId": "deleteAddress_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "busnDivision",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "busnSection",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "busnClass",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "function",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MAINGENERAL_0",
              "PROVAD_ADRESS_1",
              "CLOSING_ADR_2",
              "CLAIM_ADR_3",
              "STATEMENT_ADRES_4",
              "STATMENT_IF_41",
              "STATEMENT_VESTA_42",
              "STATEMENT_STB_43",
              "STATEMENT_SAMPO_44",
              "STATMENT_PREMIU_48",
              "STATMENT_CLAIM_49",
              "POLICY_ADDRESS_5",
              "POLICY_TRIP_51",
              "PREMIUM_NOTE_6",
              "PREMNOTE_IF_61",
              "PREM_NOTE_VESTA_62",
              "PREMNOTESTOREBR_63",
              "PREMNOTESAMPO_64",
              "PREMNOTEGARDAB_67",
              "PREM_NOTE_TRIP_68",
              "REMINDER_69",
              "IMPORT_OCR_7",
              "TRIP_EMAIL_71",
              "ATG_8",
              "COMPANY_MAIL_80",
              "INTERNVAT_ADDR_85",
              "REGISTEROWNER_86",
              "PERFORMCARRIER_87",
              "DMLC_OWNER_88",
              "COFR_APPLICANT_89",
              "VISITING_ADRES_90"
            ]
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/persons/{id}/contacts": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getPersonContacts_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INSURANCE_COMP_1",
                "LAWYER_10",
                "AVR_ADJUSTER_11",
                "RATING_COMP_12",
                "MARITIME_AUTHOR_13",
                "INSURANCE_BROKE_2",
                "OPPOSITE_PARTY_21",
                "CLAIM_RECEIVER_22",
                "ONE_TIME_VENDOR_23",
                "COVER_3",
                "QUOTA_SHTREATY_4",
                "CUSTOMER_DIR_5",
                "EMPLOYEE_51",
                "CREW_52",
                "ASSOCIATION_55",
                "SALES_AGENT_6",
                "AGENTOFFICE_61",
                "AGENTEMPLOYEE_62",
                "SURVEYOR_7",
                "MORTGBANK_8",
                "ORGANOFFICE_81",
                "ORGEMPLOYEE_82",
                "CORRESPONDENT_83",
                "REGION_85",
                "MORTGOFFICE_86",
                "INTERIM_1_88",
                "MORTGAGEE_CON_9",
                "OWN_RETENTION_91",
                "CUTOFF_92",
                "OWN_COMM_BR_93",
                "TECHNICAL_ADDR_94",
                "INTERIM_ACCOUNT_95",
                "INGOING_VAT_96",
                "OUTGOING_VAT_97",
                "INTERIM_2_98",
                "OTHER_99"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "includeStopUse",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonContact" }
            }
          }
        }
      }
    },
    "/persons/simple": {
      "get": {
        "tags": ["Persons"],
        "operationId": "searchSimple",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          { "name": "ssn", "in": "query", "required": false, "type": "string" },
          {
            "name": "orgNo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "shortName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INSURANCE_COMP_1",
                "LAWYER_10",
                "AVR_ADJUSTER_11",
                "RATING_COMP_12",
                "MARITIME_AUTHOR_13",
                "INSURANCE_BROKE_2",
                "OPPOSITE_PARTY_21",
                "CLAIM_RECEIVER_22",
                "ONE_TIME_VENDOR_23",
                "COVER_3",
                "QUOTA_SHTREATY_4",
                "CUSTOMER_DIR_5",
                "EMPLOYEE_51",
                "CREW_52",
                "ASSOCIATION_55",
                "SALES_AGENT_6",
                "AGENTOFFICE_61",
                "AGENTEMPLOYEE_62",
                "SURVEYOR_7",
                "MORTGBANK_8",
                "ORGANOFFICE_81",
                "ORGEMPLOYEE_82",
                "CORRESPONDENT_83",
                "REGION_85",
                "MORTGOFFICE_86",
                "INTERIM_1_88",
                "MORTGAGEE_CON_9",
                "OWN_RETENTION_91",
                "CUTOFF_92",
                "OWN_COMM_BR_93",
                "TECHNICAL_ADDR_94",
                "INTERIM_ACCOUNT_95",
                "INGOING_VAT_96",
                "OUTGOING_VAT_97",
                "INTERIM_2_98",
                "OTHER_99"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "activeCoveragesOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hasInsurancesOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeStopUse",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeInvisible",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "concern",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crmId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "NAME", "SSN", "ORG_NO", "TYPE"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultSimplePerson" }
          }
        }
      }
    },
    "/persons/{id}/versions/init": {
      "post": {
        "tags": ["Persons"],
        "operationId": "initVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Person" }
          }
        }
      }
    },
    "/persons/history": {
      "get": {
        "tags": ["Persons"],
        "operationId": "getHistory_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Person" }
            }
          }
        }
      }
    },
    "/persons/{id}/roles/init": {
      "post": {
        "tags": ["Persons"],
        "operationId": "initRole_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonRole" }
          }
        }
      }
    },
    "/persons/internationalidentifiers": {
      "post": {
        "tags": ["Persons"],
        "operationId": "createPersonInternationalIdentifier_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonInternationalIdentifier" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonInternationalIdentifier" }
          }
        }
      },
      "put": {
        "tags": ["Persons"],
        "operationId": "updatePersonInternationalIdentifier_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/PersonInternationalIdentifier" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonInternationalIdentifier" }
          }
        }
      }
    },
    "/persons/{id}/alternatepayer/deactivateeinvoiceb2bb2g": {
      "post": {
        "tags": ["Persons"],
        "operationId": "deactivateEInvoiceB2BB2GAlternatePayer_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/EInvoiceResult" }
          }
        }
      }
    },
    "/policies/frames/members": {
      "get": {
        "tags": ["Policy Covers"],
        "operationId": "getMembers_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "policyFrameIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["PERSON_NAME", "PERSON_SSN", "START_DATE", "END_DATE"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string", "enum": ["ASC", "DESC"] },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultMember" }
          }
        }
      }
    },
    "/premiumcalculations/private/travel": {
      "get": {
        "tags": ["Premium Calculations - Private"],
        "operationId": "getPrice_4",
        "parameters": [
          { "name": "ssn", "in": "query", "required": true, "type": "string" },
          {
            "name": "postalCode",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "coverage",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["SINGLE_PERSON", "FAMILY"]
          },
          {
            "name": "oldestInsured",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsurancePrice" }
          }
        }
      }
    },
    "/premiumcalculations/private/contents": {
      "get": {
        "tags": ["Premium Calculations - Private"],
        "operationId": "getPrice",
        "parameters": [
          { "name": "ssn", "in": "query", "required": true, "type": "string" },
          {
            "name": "postalCode",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "totalAmount",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deductible",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "securityAlarm",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "fireAlarm",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "waterAlarm",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "residenceType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "DETACHED",
              "DUPLEX_HORIZONTAL",
              "DUPLEX_VERTICAL",
              "TRIPLEX",
              "QUADRUPLEX",
              "TERRACED",
              "DORM",
              "APARTMENT",
              "APARTMENT_BUILDING"
            ]
          },
          {
            "name": "buildingMaterial",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["WOOD", "FIRE_SAFE", "BRICK"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsurancePrice" }
          }
        }
      }
    },
    "/premiumcalculations/private/car": {
      "get": {
        "tags": ["Premium Calculations - Private"],
        "operationId": "getPrice_1",
        "parameters": [
          { "name": "ssn", "in": "query", "required": true, "type": "string" },
          {
            "name": "postalCode",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "nonmarineSubModel",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deductible",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ageYoungestDriver",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "kmPerYear",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bonusPercent",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bonusDuration",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "ONE_YEAR",
              "TWO_YEARS",
              "THREE_YEARS",
              "FOUR_YEARS",
              "FIVE_YEARS",
              "MORE_THAN_FIVE_YEARS",
              "ONE_TO_FIVE_YEARS"
            ]
          },
          {
            "name": "coverage",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["LIABILITY", "PARTIAL_HULL", "HULL"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CarInsurancePrice" }
          }
        }
      }
    },
    "/premiumcalculations/private/building": {
      "get": {
        "tags": ["Premium Calculations - Private"],
        "operationId": "getPrice_2",
        "parameters": [
          { "name": "ssn", "in": "query", "required": true, "type": "string" },
          {
            "name": "postalCode",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "grossArea",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deductible",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "securityAlarm",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "fireAlarm",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "waterAlarm",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "pipeInPipe",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "livesThere",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "residenceType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["DETACHED", "DUPLEX", "TERRACED", "COTTAGE"]
          },
          {
            "name": "buildingMaterial",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["WOOD", "FIRE_SAFE", "BRICK"]
          },
          {
            "name": "buildingInsuranceStandard",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["POOR", "NORMAL", "BETTER", "HIGH"]
          },
          {
            "name": "residenceUnits",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/InsurancePrice" }
          }
        }
      }
    },
    "/premiumcalculations/premiumdays": {
      "get": {
        "tags": ["Premium Calculations"],
        "operationId": "calculatePremiumDays_1",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "startHour",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "endHour",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "calculationType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["NORMAL_0", "_9125D_1", "EXACT_DAYS_2"]
          },
          {
            "name": "use366Days",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "number", "format": "double" }
          }
        }
      }
    },
    "/premiums/{id}": {
      "get": {
        "tags": ["Premiums"],
        "operationId": "get_17",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PremiumView" }
          }
        }
      }
    },
    "/premiums": {
      "get": {
        "tags": ["Premiums"],
        "operationId": "search_12",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "agreementId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coverageId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PREMIUM_ID",
              "AGREEMENT_ID",
              "OBJECT_NUMBER",
              "OBJECT_NAME",
              "YEAR",
              "ORIGINAL_INSURED",
              "IMO_NUMBER",
              "EXTERNAL_REFERENCE",
              "TOTAL_AMOUNT",
              "NET_PREMIUM",
              "COVERAGE_STATUS"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          {
            "name": "originalInsuredIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "integer", "format": "int64" },
            "collectionFormat": "multi"
          },
          {
            "name": "fromYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "toYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeInterests",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeInterests",
            "in": "query",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "policyCoverId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchFields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["OBJECT_NAME", "IMO_NUMBER"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeAdditionals",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["PERSONAL_LEDGER_INFORMATION"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultPremiumView" }
          }
        }
      }
    },
    "/readaccesslog": {
      "get": {
        "tags": ["Read Access Log"],
        "operationId": "getReadAccessLog_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "eventType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["ENTITY_ACCESS", "USER_LOGIN"]
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CLAIM",
              "OBJECT",
              "AGREEMENT",
              "NOTE_ACTIVITY",
              "LEGAL_PERSON",
              "DOCUMENT_ARCHIVE",
              "PREMIUM"
            ]
          },
          {
            "name": "entityKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessDateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "accessDateTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "accessedBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessedByUser",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "ACCESS_DATE"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultReadAccessLog" }
          }
        }
      }
    },
    "/responsibles/{id}": {
      "delete": {
        "tags": ["Responsibles"],
        "operationId": "delete_3",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/responsibles": {
      "get": {
        "tags": ["Responsibles"],
        "operationId": "getResponsibles",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["CLAIM"]
          },
          { "name": "key", "in": "query", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Responsible" }
            }
          }
        }
      },
      "post": {
        "tags": ["Responsibles"],
        "operationId": "create_12",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Responsible" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Responsible" }
          }
        }
      }
    },
    "/roletypes": {
      "get": {
        "tags": ["Role types"],
        "operationId": "getRoleTypes_1",
        "parameters": [
          {
            "name": "roleDomainType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT",
              "CLAIM",
              "CLAIM_INTERNAL",
              "FLEET_MARINE",
              "OBJECT",
              "PERSON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RoleType" }
            }
          }
        }
      }
    },
    "/signatures/{id}": {
      "get": {
        "tags": ["Signatures"],
        "operationId": "get_18",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Signature" }
          }
        }
      }
    },
    "/signatures": {
      "get": {
        "tags": ["Signatures"],
        "operationId": "search_13",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Signature" }
            }
          }
        }
      },
      "put": {
        "tags": ["Signatures"],
        "operationId": "update_11",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Signature" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Signature" }
          }
        }
      }
    },
    "/signatures/{id}/electronicsignature": {
      "get": {
        "tags": ["Signatures"],
        "summary": "Get electronic signature. Base64 encoded string",
        "description": "",
        "operationId": "getElectronicSignature_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Signature id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ElectronicSignature" }
          }
        }
      },
      "post": {
        "tags": ["Signatures"],
        "summary": "Create / update electronic signature image (Base64 encoded)",
        "description": "",
        "operationId": "uploadElectronicSignatureImageBase64Encoded_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Signature id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Base64 encoded image",
            "required": true,
            "schema": { "$ref": "#/definitions/ElectronicSignature" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ElectronicSignature" }
          }
        }
      },
      "delete": {
        "tags": ["Signatures"],
        "summary": "Delete electronic signature",
        "description": "",
        "operationId": "deleteElectronicSignature_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Signature id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/signatures/{id}/allowedlegalpersontypes": {
      "get": {
        "tags": ["Signatures"],
        "summary": "Get allowed legal person types for creation by the given signature",
        "description": "",
        "operationId": "getAllowedLegalPersonTypes_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Signature id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INSURANCE_COMP_1",
                  "LAWYER_10",
                  "AVR_ADJUSTER_11",
                  "RATING_COMP_12",
                  "MARITIME_AUTHOR_13",
                  "INSURANCE_BROKE_2",
                  "OPPOSITE_PARTY_21",
                  "CLAIM_RECEIVER_22",
                  "ONE_TIME_VENDOR_23",
                  "COVER_3",
                  "QUOTA_SHTREATY_4",
                  "CUSTOMER_DIR_5",
                  "EMPLOYEE_51",
                  "CREW_52",
                  "ASSOCIATION_55",
                  "SALES_AGENT_6",
                  "AGENTOFFICE_61",
                  "AGENTEMPLOYEE_62",
                  "SURVEYOR_7",
                  "MORTGBANK_8",
                  "ORGANOFFICE_81",
                  "ORGEMPLOYEE_82",
                  "CORRESPONDENT_83",
                  "REGION_85",
                  "MORTGOFFICE_86",
                  "INTERIM_1_88",
                  "MORTGAGEE_CON_9",
                  "OWN_RETENTION_91",
                  "CUTOFF_92",
                  "OWN_COMM_BR_93",
                  "TECHNICAL_ADDR_94",
                  "INTERIM_ACCOUNT_95",
                  "INGOING_VAT_96",
                  "OUTGOING_VAT_97",
                  "INTERIM_2_98",
                  "OTHER_99"
                ]
              },
              "uniqueItems": true
            }
          }
        }
      }
    },
    "/signatures/{id}/ectronicsignature/upload": {
      "post": {
        "tags": ["Signatures"],
        "summary": "Create / update electronic signature image file. Max 2MB",
        "description": "",
        "operationId": "uploadElectronicSignatureImage_1",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Signature id",
            "required": true,
            "type": "string"
          },
          { "name": "data", "in": "formData", "required": true, "type": "file" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ElectronicSignature" }
          }
        }
      }
    },
    "/signatures/current": {
      "get": {
        "tags": ["Signatures"],
        "operationId": "getCurrent_2",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Signature" }
          }
        }
      }
    },
    "/systemcodes/languages": {
      "get": {
        "tags": ["System codes - Languages"],
        "operationId": "getSystemLanguages_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/SystemLanguage" }
            }
          }
        }
      }
    },
    "/system/update/{buildId}": {
      "post": {
        "tags": ["System"],
        "operationId": "update_12",
        "parameters": [
          {
            "name": "buildId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/system/buildinfo": {
      "get": {
        "tags": ["System"],
        "operationId": "getBuildInfo_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/BuildInfo" }
          }
        }
      }
    },
    "/system/logging/reset": {
      "post": {
        "tags": ["System"],
        "summary": "Reset session logging to default",
        "description": "",
        "operationId": "resetSessionLogging_1",
        "parameters": [],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/system/status": {
      "get": {
        "tags": ["System"],
        "operationId": "getStatus_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "object" }
            }
          }
        }
      }
    },
    "/system/logging": {
      "post": {
        "tags": ["System"],
        "summary": "Add session logging",
        "description": "",
        "operationId": "addSessionLogging_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/LoggerModel" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/systemsettings/main": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getMainSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/MainSettings" }
          }
        }
      }
    },
    "/systemsettings/archive": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getArchiveSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ArchiveSettings" }
          }
        }
      }
    },
    "/systemsettings/company": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getCompanySettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CompanySettings" }
          }
        }
      }
    },
    "/systemsettings/parisproperties": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getParisProperty_1",
        "produces": ["text/plain"],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["GARD_DM_LINK", "GARD_DM_TEMPLATEDOC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/systemsettings/claim": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getClaimSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ClaimSettings" }
          }
        }
      }
    },
    "/systemsettings/personalledger": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getPersonalLedgerSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/PersonalLedgerSettings" }
          }
        }
      }
    },
    "/systemsettings/signature": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getSignatureSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SignatureSettings" }
          }
        }
      }
    },
    "/systemsettings/offermarinebrokermodel": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getOfferMarineBrokermodelSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/OfferMarineBrokermodelSettings" }
          }
        }
      }
    },
    "/systemsettings/background": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getBackgroundSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/BackgroundSettings" }
          }
        }
      }
    },
    "/systemsettings/accounting": {
      "get": {
        "tags": ["System Settings"],
        "operationId": "getAccountingSettings_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/AccountingSettings" }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": ["Tags"],
        "operationId": "searchTags_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PERSON_PE"]
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "NAME", "TYPE", "ENTITY_KEY", "CREATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultTag" }
          }
        }
      },
      "post": {
        "tags": ["Tags"],
        "operationId": "createTag_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Tag" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Tag" }
          }
        }
      },
      "put": {
        "tags": ["Tags"],
        "operationId": "updateTag_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Tag" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Tag" }
          }
        }
      }
    },
    "/tags/relations/add": {
      "put": {
        "tags": ["Tags"],
        "summary": "Link a tag to an entity or bean",
        "description": "",
        "operationId": "linkTag_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TagRelation" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TagRelation" }
          }
        }
      }
    },
    "/tags/relations": {
      "get": {
        "tags": ["Tags"],
        "summary": "List tag relations",
        "description": "",
        "operationId": "searchTagRelations_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PERSON_PE"]
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "NAME", "TYPE", "ENTITY_KEY", "CREATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          },
          { "name": "key", "in": "query", "required": false, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SearchResultTagRelation" }
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "tags": ["Tags"],
        "operationId": "getTag_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/Tag" }
          }
        }
      },
      "delete": {
        "tags": ["Tags"],
        "operationId": "deleteTag_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/tags/relations/remove": {
      "put": {
        "tags": ["Tags"],
        "summary": "Unlink a tag from an entity or bean",
        "description": "",
        "operationId": "unlinkTag_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TagRelation" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/timeline": {
      "get": {
        "tags": ["Timeline"],
        "operationId": "getTimeline_1",
        "parameters": [
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "messageType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AGREEMENT_A",
              "OBJECT_B",
              "CLOSING_C",
              "COVERAGE_D",
              "SECTION_E",
              "DOCUMENT_F",
              "GENERAL_G",
              "BUDGET_H",
              "OPPONENTS_I",
              "INSURANCE_J",
              "EL_PAYMENT_L",
              "OFFER_MARINE_M",
              "OFFER_O",
              "PERSON_P",
              "PERSON_RESP_Q",
              "PREMIUM_R",
              "CLAIM_S",
              "ACCIDENT_T",
              "EMPLOYEE_W",
              "COMMUNICATION_X",
              "FORM_SUBMISSION_Y"
            ]
          },
          {
            "name": "codeValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fullText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["ACTIVITIES", "MESSAGES", "NOTES"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TimelineEvent" }
            }
          }
        }
      }
    },
    "/systemconfig/translation/{translationType}/{codeValue}": {
      "get": {
        "tags": ["System config - Translation "],
        "operationId": "getTranslations_1",
        "parameters": [
          {
            "name": "translationType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": ["USER_NOTIFICATION_TYPE", "PRODUCT"]
          },
          {
            "name": "codeValue",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Translation" }
            }
          }
        }
      },
      "put": {
        "tags": ["System config - Translation "],
        "operationId": "updateTranslations_1",
        "parameters": [
          {
            "name": "translationType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": ["USER_NOTIFICATION_TYPE", "PRODUCT"]
          },
          {
            "name": "codeValue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Translation" }
            }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/usedhours": {
      "get": {
        "tags": ["Used hours"],
        "operationId": "search_14",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "usedHoursType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["AGREEMENT", "PERSON", "INSURANCE", "PREMIUM", "CLAIM"]
          },
          {
            "name": "usedHoursKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "signature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "DESCRIPTION",
              "DATE",
              "HOURS",
              "FACTOR",
              "INVOICED",
              "CREATED",
              "UPDATED",
              "USED_HOURS_KEY"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UsedHoursSearchResult" }
          }
        }
      },
      "post": {
        "tags": ["Used hours"],
        "operationId": "create_13",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UsedHours" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UsedHours" }
          }
        }
      },
      "put": {
        "tags": ["Used hours"],
        "operationId": "update_13",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UsedHours" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UsedHours" }
          }
        }
      }
    },
    "/usedhours/init": {
      "post": {
        "tags": ["Used hours"],
        "operationId": "init_7",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UsedHoursInitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UsedHours" }
          }
        }
      }
    },
    "/usedhours/{id}": {
      "delete": {
        "tags": ["Used hours"],
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/usedhours/sum": {
      "get": {
        "tags": ["Used hours"],
        "operationId": "sum_1",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "usedHoursType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["AGREEMENT", "PERSON", "INSURANCE", "PREMIUM", "CLAIM"]
          },
          {
            "name": "usedHoursKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "signature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "DESCRIPTION",
              "DATE",
              "HOURS",
              "FACTOR",
              "INVOICED",
              "CREATED",
              "UPDATED",
              "USED_HOURS_KEY"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "number", "format": "double" }
          }
        }
      }
    },
    "/usernotifications": {
      "get": {
        "tags": ["User Notifications"],
        "operationId": "search_15",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COMPLETED_C",
              "ERROR_E",
              "ORDERED_O",
              "PROCESSING_P",
              "CANCELLED_X"
            ]
          },
          {
            "name": "userNotificationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["MSGANSWER_1", "SCHEMATREATED_2", "DOCUMENT_APPROV_3"]
          },
          {
            "name": "sendType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["EMAIL_1", "SMS_2", "EMAIL_WITH_ATCH_3"]
          },
          {
            "name": "data",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ID", "USER", "CREATED"]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultUserNotification" }
          }
        }
      }
    },
    "/usernotifications/{id}/markascancelled": {
      "put": {
        "tags": ["User Notifications"],
        "operationId": "setStatusCancelled_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UserNotification" }
          }
        }
      }
    },
    "/usernotifications/{id}/markasordered": {
      "put": {
        "tags": ["User Notifications"],
        "operationId": "setStatusOrdered_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UserNotification" }
          }
        }
      }
    },
    "/systemconfig/usernotifications": {
      "get": {
        "tags": ["System config - User Notification Types"],
        "operationId": "getUserNotificationTypes_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UserNotificationType" }
            }
          }
        }
      },
      "put": {
        "tags": ["System config - User Notification Types"],
        "operationId": "update_14",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UserNotificationType" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UserNotificationType" }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "operationId": "get_19",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/User" }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "operationId": "search_16",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          { "name": "ssn", "in": "query", "required": false, "type": "string" },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "twoFactorAuthEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "SSN",
              "NAME",
              "EMAIL",
              "PHONE",
              "LAST_LOGIN",
              "ENABLED",
              "TITLE",
              "TWO_FACTOR_AUTH_ENABLED"
            ]
          },
          {
            "name": "orderByDirection",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ASC", "DESC"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultUser" }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "operationId": "create_14",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/User" }
          },
          {
            "name": "inviteEmail",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "url", "in": "query", "required": false, "type": "string" },
          {
            "name": "manageUsers",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/User" }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "operationId": "update_15",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/User" }
          }
        }
      }
    },
    "/users/{id}/notificationsettings/{personId}": {
      "get": {
        "tags": ["Users"],
        "operationId": "getNotificationSettingss_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UserNotificationSetting" }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "operationId": "update_16",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UserNotificationSetting" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/UserNotificationSetting" }
          }
        }
      }
    },
    "/users/{id}/access/{personId}": {
      "delete": {
        "tags": ["Users"],
        "operationId": "revokeAccess_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/users/resetpassword": {
      "post": {
        "tags": ["Users"],
        "operationId": "resetPassword_1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string"
          },
          { "name": "url", "in": "query", "required": true, "type": "string" }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "operationId": "getCurrent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/User" }
          }
        }
      }
    },
    "/users/{id}/password": {
      "put": {
        "tags": ["Users"],
        "operationId": "setPassword_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/users/current/personaccess": {
      "get": {
        "tags": ["Users"],
        "operationId": "getCurrentUserPersonAccess_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UserPersonAccess" }
            }
          }
        }
      }
    },
    "/users/current/password": {
      "put": {
        "tags": ["Users"],
        "operationId": "changeCurrentPassword_1",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ChangePassword" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/viewresolver/object": {
      "get": {
        "tags": ["View Resolver"],
        "operationId": "getViewResolverForInsuredObject_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "VESSEL_1",
              "RIG_OBJECT_10",
              "FLOATING_INSTAL_12",
              "LIABILITY_13",
              "AQUAOBJECT_14",
              "FISH_15",
              "AQUA_CARGO_16",
              "COASTAL_2",
              "CARGO_OBJECT_3",
              "ENERGY_PHYSOBJ_4",
              "ENERGY_PACKOBJ_5",
              "PROPERTY_6",
              "VEHICLE_FLEET_60",
              "VEHICLE_61",
              "MOTORCYKLE_62",
              "MACHINE_63",
              "TRAILER_64",
              "PERSON_GROUP_65",
              "PERSON_66",
              "AVIATION_OBJECT_7",
              "BUILDING_70",
              "CABIN_71",
              "ARBEIDSMASKIN_73",
              "INVENTORY_74",
              "LEISURE_BOAT_75",
              "VALUABLES_76",
              "ANIMAL_77",
              "PLACE_FLEET_78",
              "PLACE_8",
              "CUMULE_9"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ViewResolver" }
          }
        }
      }
    },
    "/viewresolver/claim": {
      "get": {
        "tags": ["View Resolver"],
        "operationId": "getViewResolverForClaim_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ViewResolver" }
          }
        }
      }
    },
    "/viewresolver/claim/payment": {
      "get": {
        "tags": ["View Resolver"],
        "operationId": "getViewResolverForClaimPayment_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ViewResolver" }
          }
        }
      }
    },
    "/viewresolver/claim/event": {
      "get": {
        "tags": ["View Resolver"],
        "operationId": "getViewResolverForClaimEvent_1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ViewResolver" }
          }
        }
      }
    },
    "/viewresolver/person": {
      "get": {
        "tags": ["View Resolver"],
        "operationId": "getViewResolverForPerson_1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "INSURANCE_COMP_1",
              "LAWYER_10",
              "AVR_ADJUSTER_11",
              "RATING_COMP_12",
              "MARITIME_AUTHOR_13",
              "INSURANCE_BROKE_2",
              "OPPOSITE_PARTY_21",
              "CLAIM_RECEIVER_22",
              "ONE_TIME_VENDOR_23",
              "COVER_3",
              "QUOTA_SHTREATY_4",
              "CUSTOMER_DIR_5",
              "EMPLOYEE_51",
              "CREW_52",
              "ASSOCIATION_55",
              "SALES_AGENT_6",
              "AGENTOFFICE_61",
              "AGENTEMPLOYEE_62",
              "SURVEYOR_7",
              "MORTGBANK_8",
              "ORGANOFFICE_81",
              "ORGEMPLOYEE_82",
              "CORRESPONDENT_83",
              "REGION_85",
              "MORTGOFFICE_86",
              "INTERIM_1_88",
              "MORTGAGEE_CON_9",
              "OWN_RETENTION_91",
              "CUTOFF_92",
              "OWN_COMM_BR_93",
              "TECHNICAL_ADDR_94",
              "INTERIM_ACCOUNT_95",
              "INGOING_VAT_96",
              "OUTGOING_VAT_97",
              "INTERIM_2_98",
              "OTHER_99"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ViewResolver" }
          }
        }
      }
    },
    "/viewresolver/coverage": {
      "get": {
        "tags": ["View Resolver"],
        "operationId": "getViewResolverForCoverage_1",
        "parameters": [
          {
            "name": "coverageId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ViewResolver" }
          }
        }
      }
    },
    "/viewresolver/agreement": {
      "get": {
        "tags": ["View Resolver"],
        "operationId": "getViewResolverForAgreement_1",
        "parameters": [
          {
            "name": "agreementType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MARINE_1",
              "AQUACULTURE_10",
              "PI_11",
              "ENERGY_2",
              "OIL_COMPANY_21",
              "CARGO_3",
              "PROPERTY_4",
              "AVIATION_5",
              "PRIVATE_50",
              "WAR_6",
              "NON_MARINE_7",
              "COASTAL_MARINE_8",
              "BUILDERS_RISK_9"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/ViewResolver" }
          }
        }
      }
    },
    "/workplaces/{id}": {
      "get": {
        "tags": ["Work Places"],
        "operationId": "get_20",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/WorkPlace" }
          }
        }
      }
    },
    "/workplaces": {
      "get": {
        "tags": ["Work Places"],
        "operationId": "search_17",
        "parameters": [
          {
            "name": "firstResult",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "shortName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "workPlaceType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/SearchResultWorkPlace" }
          }
        }
      },
      "post": {
        "tags": ["Work Places"],
        "operationId": "create_15",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/WorkPlace" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/WorkPlace" }
          }
        }
      },
      "put": {
        "tags": ["Work Places"],
        "operationId": "update_17",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/WorkPlace" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/WorkPlace" }
          }
        }
      }
    },
    "/workplaces/init": {
      "post": {
        "tags": ["Work Places"],
        "operationId": "init_8",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/WorkPlace" }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "description": "Bearer token",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "paris-api-key": {
      "description": "Paris API Key",
      "type": "apiKey",
      "name": "paris-api-key",
      "in": "header"
    }
  },
  "definitions": {
    "BankAccount": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "currency": { "type": "string" },
        "swiftBank": { "type": "string" }
      }
    },
    "GeneralLedgerAccount": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "description": { "type": "string" }
      }
    },
    "PersonalLedgerView": {
      "type": "object",
      "properties": {
        "accountingGroup": {
          "type": "string",
          "enum": [
            "AS_SPEC_IO_0",
            "DIRECT_1",
            "RECEIVED_2",
            "CEDED_3",
            "CLAIM_PAYMENTS_4",
            "AGENT_7",
            "TREATIES_8",
            "INTERIMS_9"
          ]
        },
        "billingNo": { "$ref": "#/definitions/SimplePerson" },
        "accountNo": { "$ref": "#/definitions/SimplePerson" },
        "currency": { "type": "string" },
        "dueDate": { "type": "string", "format": "date" },
        "documentDate": { "type": "string", "format": "date" },
        "calledTimes": { "type": "integer", "format": "int32" },
        "referenceName": { "type": "string" },
        "interestReference": { "type": "string" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "referenceNumber": { "type": "integer", "format": "int64" },
        "bordereauReference": { "type": "string" },
        "callDate": { "type": "string", "format": "date" },
        "validDate": { "type": "string", "format": "date" },
        "settledDate": { "type": "string", "format": "date" },
        "transactionType": {
          "type": "string",
          "enum": [
            "BALANCE_0",
            "CASH_CL_BALANCE_1",
            "BALANCE_CORRECT_10",
            "PREMIUM_DEPOT_11",
            "CLAIM_DEPOT_12",
            "XL_PREMIUM_13",
            "XL_CLAIM_14",
            "PROFIT_COMM_15",
            "INTEREST_16",
            "REMIT_17",
            "RELPREM_DEPOT_18",
            "REL_CLM_DEPOT_19",
            "PREMIUM_2",
            "INTRPREMDEPOT_20",
            "INTRCLMDEPOT_21",
            "COLLECT_FEE_22",
            "ADM_FEE_23",
            "COMMISSION_24",
            "TAX_25",
            "NATPREM_26",
            "DUTY_PAYMENT_27",
            "INST_ADDENDUM_28",
            "ACCREBATE_29",
            "RETURN_PREMIUM_3",
            "NSCOMM_30",
            "LAST_INSTALMENT_31",
            "RELEASE_CALL_32",
            "OTHER_EXPENSES_33",
            "CLAIM_4",
            "CASH_CLAIM_5",
            "REFUND_6",
            "REMITTANCE_7",
            "BET_KORR_77",
            "VARIOUS_8",
            "AS_LOST_9"
          ]
        },
        "createdBy": { "type": "string" },
        "fromDate": { "type": "string", "format": "date" },
        "toDate": { "type": "string", "format": "date" },
        "comment": { "type": "string" },
        "status": { "type": "string", "enum": ["OPEN_O", "SETTLED_S"] },
        "amount": { "type": "number", "format": "double" },
        "policyCoverId": { "type": "string" },
        "object": { "$ref": "#/definitions/SimpleInsuredObject" },
        "interest": { "type": "string" }
      }
    },
    "PersonalLedgerViewSearchResult": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/PersonalLedgerView" }
        },
        "totalCount": { "type": "integer", "format": "int32" },
        "sumAmount": { "type": "number", "format": "double" }
      }
    },
    "SimpleInsuredObject": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "objectNumber": { "type": "integer", "format": "int32" },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "imoNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999999,
          "exclusiveMaximum": false
        },
        "type": {
          "type": "string",
          "enum": [
            "VESSEL_1",
            "RIG_OBJECT_10",
            "FLOATING_INSTAL_12",
            "LIABILITY_13",
            "AQUAOBJECT_14",
            "FISH_15",
            "AQUA_CARGO_16",
            "COASTAL_2",
            "CARGO_OBJECT_3",
            "ENERGY_PHYSOBJ_4",
            "ENERGY_PACKOBJ_5",
            "PROPERTY_6",
            "VEHICLE_FLEET_60",
            "VEHICLE_61",
            "MOTORCYKLE_62",
            "MACHINE_63",
            "TRAILER_64",
            "PERSON_GROUP_65",
            "PERSON_66",
            "AVIATION_OBJECT_7",
            "BUILDING_70",
            "CABIN_71",
            "ARBEIDSMASKIN_73",
            "INVENTORY_74",
            "LEISURE_BOAT_75",
            "VALUABLES_76",
            "ANIMAL_77",
            "PLACE_FLEET_78",
            "PLACE_8",
            "CUMULE_9"
          ]
        },
        "mostRecentOriginalInsured": { "$ref": "#/definitions/SimplePerson" },
        "externalReference": { "type": "string" }
      }
    },
    "SimplePerson": {
      "type": "object",
      "required": ["shortName", "type"],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "shortName": { "type": "string", "minLength": 0, "maxLength": 15 },
        "type": {
          "type": "string",
          "enum": [
            "INSURANCE_COMP_1",
            "LAWYER_10",
            "AVR_ADJUSTER_11",
            "RATING_COMP_12",
            "MARITIME_AUTHOR_13",
            "INSURANCE_BROKE_2",
            "OPPOSITE_PARTY_21",
            "CLAIM_RECEIVER_22",
            "ONE_TIME_VENDOR_23",
            "COVER_3",
            "QUOTA_SHTREATY_4",
            "CUSTOMER_DIR_5",
            "EMPLOYEE_51",
            "CREW_52",
            "ASSOCIATION_55",
            "SALES_AGENT_6",
            "AGENTOFFICE_61",
            "AGENTEMPLOYEE_62",
            "SURVEYOR_7",
            "MORTGBANK_8",
            "ORGANOFFICE_81",
            "ORGEMPLOYEE_82",
            "CORRESPONDENT_83",
            "REGION_85",
            "MORTGOFFICE_86",
            "INTERIM_1_88",
            "MORTGAGEE_CON_9",
            "OWN_RETENTION_91",
            "CUTOFF_92",
            "OWN_COMM_BR_93",
            "TECHNICAL_ADDR_94",
            "INTERIM_ACCOUNT_95",
            "INGOING_VAT_96",
            "OUTGOING_VAT_97",
            "INTERIM_2_98",
            "OTHER_99"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "NORMAL_0",
            "EXPIRED_1",
            "DEAD_10",
            "CHANGED_COMPANY_2",
            "DISMISSED_CLAIM_3",
            "DISMISSED_PAYMT_4",
            "BANKRUPT_5",
            "SLOW_PAYER_6",
            "CUTOFF_7",
            "PREENTERED_89",
            "APPROVED_90",
            "LEGAL_RECOVERY_99"
          ]
        },
        "stopUse": { "type": "boolean" },
        "invisible": { "type": "boolean" },
        "canModify": { "type": "boolean" }
      }
    },
    "ActivityGroup": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "ActivityCategory": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Activity": {
      "type": "object",
      "required": [
        "dueDate",
        "fromSignature",
        "messageType",
        "note",
        "status",
        "subject"
      ],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "messageType": {
          "type": "string",
          "enum": [
            "AGREEMENT_A",
            "OBJECT_B",
            "CLOSING_C",
            "COVERAGE_D",
            "SECTION_E",
            "DOCUMENT_F",
            "GENERAL_G",
            "BUDGET_H",
            "OPPONENTS_I",
            "INSURANCE_J",
            "EL_PAYMENT_L",
            "OFFER_MARINE_M",
            "OFFER_O",
            "PERSON_P",
            "PERSON_RESP_Q",
            "PREMIUM_R",
            "CLAIM_S",
            "ACCIDENT_T",
            "EMPLOYEE_W",
            "COMMUNICATION_X",
            "FORM_SUBMISSION_Y"
          ]
        },
        "codeValue": { "type": "string", "minLength": 0, "maxLength": 30 },
        "note": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "created": { "type": "string", "format": "date-time" },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "HISTORY_H", "TREATED_T"]
        },
        "dueDate": { "type": "string", "format": "date-time" },
        "reminderDate": { "type": "string", "format": "date-time" },
        "category": { "type": "string", "minLength": 0, "maxLength": 3 },
        "subject": { "type": "string", "minLength": 0, "maxLength": 35 },
        "fromSignature": { "type": "string", "minLength": 0, "maxLength": 3 },
        "toSignature": { "type": "string", "minLength": 0, "maxLength": 3 },
        "toGroup": { "type": "string", "minLength": 0, "maxLength": 8 },
        "highPriority": { "type": "boolean" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "attachmentsCount": { "type": "integer", "format": "int32" },
        "history": { "$ref": "#/definitions/History" },
        "read": { "type": "boolean" }
      }
    },
    "History": {
      "type": "object",
      "properties": {
        "changeTime": { "type": "string", "format": "date-time" },
        "operation": {
          "type": "string",
          "enum": ["INSERT", "UPDATE", "DELETE"]
        },
        "changedBy": { "type": "string" },
        "changedByUser": { "$ref": "#/definitions/SimpleUser" },
        "networkId": { "type": "string" },
        "application": { "type": "string" },
        "ipAddress": { "type": "string" },
        "userAgent": { "type": "string" }
      }
    },
    "SimpleUser": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "name": { "type": "string" }
      }
    },
    "ActivityInitParams": {
      "type": "object",
      "required": ["messageType"],
      "properties": {
        "messageType": {
          "type": "string",
          "enum": [
            "AGREEMENT_A",
            "OBJECT_B",
            "CLOSING_C",
            "COVERAGE_D",
            "SECTION_E",
            "DOCUMENT_F",
            "GENERAL_G",
            "BUDGET_H",
            "OPPONENTS_I",
            "INSURANCE_J",
            "EL_PAYMENT_L",
            "OFFER_MARINE_M",
            "OFFER_O",
            "PERSON_P",
            "PERSON_RESP_Q",
            "PREMIUM_R",
            "CLAIM_S",
            "ACCIDENT_T",
            "EMPLOYEE_W",
            "COMMUNICATION_X",
            "FORM_SUBMISSION_Y"
          ]
        }
      }
    },
    "SearchResult": {
      "type": "object",
      "properties": {
        "result": { "type": "array", "items": { "type": "object" } },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "SearchResultActivity": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Activity" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "ActivityComment": {
      "type": "object",
      "required": ["comment"],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "comment": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "canModify": { "type": "boolean" }
      }
    },
    "SearchResultActivityComment": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ActivityComment" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "OrderCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "LostCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Agreement": {
      "type": "object",
      "required": [
        "busnClass",
        "busnDivision",
        "busnSection",
        "endDate",
        "name",
        "numberOfInstallments",
        "offerReceivedDate",
        "office",
        "organizationLinkAgreementNumber",
        "originalInsured",
        "refusedText",
        "source",
        "startDate",
        "status1",
        "status2",
        "totalNumberOfYearForLongTermAgreement",
        "year",
        "yearNote",
        "yearNumberWithAgreedAgreement"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "number": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999999,
          "exclusiveMaximum": false
        },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "busnDivision": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnSection": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnClass": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "office": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "originalInsured": { "$ref": "#/definitions/SimplePerson" },
        "cedent": { "$ref": "#/definitions/SimplePerson" },
        "source": { "$ref": "#/definitions/SimplePerson" },
        "defaultSalesAgent": { "$ref": "#/definitions/SimplePerson" },
        "treatAs": {
          "type": "string",
          "enum": ["DIRECT_TREATM_1", "RECEIVED_TREATM_2"]
        },
        "autoconnectPolicy": {
          "type": "string",
          "enum": [
            "AUTOCONNECT_AGR_A",
            "NO_AUTOCONN_N",
            "AUTO_CONN_OBJ_O",
            "YES_AUTOCON_Y"
          ]
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "status1": {
          "type": "string",
          "enum": ["CANCEL_C", "ESTABLISHED_E", "OFFER_O", "QUOTE_Q", "WORK_W"]
        },
        "status2": {
          "type": "string",
          "enum": ["ACCEPTED_A", "OPEN_O", "REFUSED_R", "WORK_W"]
        },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "timeZone": { "type": "string", "minLength": 0, "maxLength": 3 },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "endHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "underwriter": { "type": "string", "minLength": 0, "maxLength": 3 },
        "assistantUnderwriter": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "team": { "type": "string", "minLength": 0, "maxLength": 5 },
        "orderCode": { "type": "string", "minLength": 0, "maxLength": 2 },
        "established": { "type": "boolean" },
        "type": {
          "type": "string",
          "enum": [
            "MARINE_1",
            "AQUACULTURE_10",
            "PI_11",
            "ENERGY_2",
            "OIL_COMPANY_21",
            "CARGO_3",
            "PROPERTY_4",
            "AVIATION_5",
            "PRIVATE_50",
            "WAR_6",
            "NON_MARINE_7",
            "COASTAL_MARINE_8",
            "BUILDERS_RISK_9"
          ]
        },
        "renewalCode": {
          "type": "string",
          "enum": [
            "MANUAL_1",
            "AUTOMATIC_2",
            "RENEWED_3",
            "FROM_RENEWAL_8",
            "SHORT_TIME_9"
          ]
        },
        "busnRegion": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "organizationLinkAgreementNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999999,
          "exclusiveMaximum": false
        },
        "orderText": { "type": "string", "minLength": 0, "maxLength": 35 },
        "renewalText": { "type": "string", "minLength": 0, "maxLength": 35 },
        "refusedCode": { "type": "string", "minLength": 0, "maxLength": 2 },
        "refusedText": { "type": "string", "minLength": 0, "maxLength": 35 },
        "offerReceivedDate": { "type": "string", "format": "date" },
        "offerAcceptedOrRefusedDate": { "type": "string", "format": "date" },
        "establishedDate": { "type": "string", "format": "date" },
        "claimLead": { "$ref": "#/definitions/SimplePerson" },
        "numberOfInstallments": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "totalNumberOfYearForLongTermAgreement": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "yearNumberWithAgreedAgreement": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "yearNote": { "type": "string", "minLength": 0, "maxLength": 200 },
        "internalNote": { "type": "string", "minLength": 0, "maxLength": 2000 },
        "genericNote1": { "type": "string", "minLength": 0, "maxLength": 200 }
      }
    },
    "AgreementInitParams": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MARINE_1",
            "AQUACULTURE_10",
            "PI_11",
            "ENERGY_2",
            "OIL_COMPANY_21",
            "CARGO_3",
            "PROPERTY_4",
            "AVIATION_5",
            "PRIVATE_50",
            "WAR_6",
            "NON_MARINE_7",
            "COASTAL_MARINE_8",
            "BUILDERS_RISK_9"
          ]
        }
      }
    },
    "SearchResultAgreement": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Agreement" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "AgreementRenewToOfferParams": {
      "type": "object",
      "required": ["claimLevel", "premiumLevel", "statisticsLevel", "toYear"],
      "properties": {
        "toYear": { "type": "integer", "format": "int32" },
        "currency": { "type": "string" },
        "toMarked": { "type": "boolean" },
        "includeAgreements": { "type": "array", "items": { "type": "string" } },
        "claimLevel": { "type": "string", "enum": ["CLAIM_1", "CATEGORY_2"] },
        "premiumLevel": {
          "type": "string",
          "enum": [
            "GROSS_0",
            "LESS_OWN_DISC_1",
            "LESS_DISCOUNT_2",
            "LESS_KEYIN_DISC_9"
          ]
        },
        "manualDiscount": { "type": "number", "format": "double" },
        "statisticsLevel": {
          "type": "string",
          "enum": ["_100_PERCENT_0", "OUR_SHARE__1"]
        },
        "insurerLevel": {
          "type": "string",
          "enum": ["BILLINGNO_1", "SECURITY_2"]
        },
        "statisticsFromYear": { "type": "integer", "format": "int32" },
        "statisticsToYear": { "type": "integer", "format": "int32" }
      }
    },
    "AgreementRole": {
      "type": "object",
      "required": ["roleTypeId"],
      "properties": {
        "person": { "$ref": "#/definitions/SimplePerson" },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 25 },
        "roleTypeId": { "type": "string", "minLength": 0, "maxLength": 6 }
      }
    },
    "OfferMarineAgreement": {
      "type": "object",
      "required": ["agreement", "currency", "status"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "status": {
          "type": "string",
          "enum": [
            "CANCELLED_C",
            "ESTABLISHED_E",
            "OFFER_O",
            "QUEUED_Q",
            "REPLACED_R"
          ]
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "version": { "type": "integer", "format": "int32" },
        "submissionType": {
          "type": "string",
          "enum": [
            "NEWRENEW_0",
            "ADD__OBJECT_1",
            "VALUE_2",
            "TRIP_3",
            "LAYUP_4",
            "EXPIRE_5",
            "PROLONG_6",
            "GENERAL_ADD_7",
            "GENERAL_RETURN_8",
            "TEXT_ADD_9"
          ]
        },
        "text": { "type": "string", "minLength": 0, "maxLength": 35 },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "endHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 2000 },
        "statisticsFromYear": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "statisticsToYear": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "agreement": { "$ref": "#/definitions/Agreement" },
        "claimLevel": { "type": "string", "enum": ["CLAIM_1", "CATEGORY_2"] },
        "premiumLevel": {
          "type": "string",
          "enum": [
            "GROSS_0",
            "LESS_OWN_DISC_1",
            "LESS_DISCOUNT_2",
            "LESS_KEYIN_DISC_9"
          ]
        },
        "statisticsLevel": {
          "type": "string",
          "enum": ["_100_PERCENT_0", "OUR_SHARE__1"]
        },
        "insurerLevel": {
          "type": "string",
          "enum": ["BILLINGNO_1", "SECURITY_2"]
        },
        "discount": { "type": "number", "format": "double" },
        "operations": {
          "$ref": "#/definitions/OfferMarineAgreementOperations"
        },
        "changeOffer": { "type": "boolean" },
        "ready": { "type": "boolean" }
      }
    },
    "OfferMarineAgreementOperations": {
      "type": "object",
      "properties": {
        "canModify": { "type": "boolean" },
        "canCreateSections": { "type": "boolean" },
        "canCreateSubmissions": { "type": "boolean" },
        "canCopy": { "type": "boolean" },
        "canImportPresentation": { "type": "boolean" },
        "canOpen": { "type": "boolean" },
        "canClose": { "type": "boolean" },
        "canUndoExportToParis": { "type": "boolean" }
      }
    },
    "AgreementSummary": {
      "type": "object",
      "properties": {
        "businessResult": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "businessResultOpenNet": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "closedNet": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "paidPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "outstandingClaims": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "settledClaims": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "commissionFromInsurer": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "commissionToAgents": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "commissionToPartiesInFront": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "commissionToAgentsAndPartiesInFront": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "commissionNet": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        }
      }
    },
    "AgreementGenerateChangeOfferParams": {
      "type": "object",
      "required": ["submissionType"],
      "properties": {
        "submissionType": {
          "type": "string",
          "enum": [
            "NEWRENEW_0",
            "ADD__OBJECT_1",
            "VALUE_2",
            "TRIP_3",
            "LAYUP_4",
            "EXPIRE_5",
            "PROLONG_6",
            "GENERAL_ADD_7",
            "GENERAL_RETURN_8",
            "TEXT_ADD_9"
          ]
        },
        "offerMarineObjectIds": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "fileName": { "type": "string", "minLength": 0, "maxLength": 200 },
        "description": { "type": "string", "minLength": 0, "maxLength": 400 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 200 },
        "displayName": { "type": "string", "minLength": 0, "maxLength": 200 },
        "mimeType": { "type": "string", "minLength": 0, "maxLength": 20 },
        "mimeSubType": { "type": "string", "minLength": 0, "maxLength": 20 },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
        },
        "category": { "type": "string" },
        "validPerDate": { "type": "string", "format": "date" },
        "canView": { "type": "boolean" },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "createdByUser": { "$ref": "#/definitions/SimpleUser" }
      }
    },
    "SearchResultAttachment": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "FortSectorCode": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "FortTradeCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "value": { "type": "string" },
        "description": { "type": "string" }
      }
    },
    "Credentials": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "ssn": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" },
        "otp": { "type": "string" }
      }
    },
    "AuthorizationRule": {
      "type": "object",
      "required": [
        "businessDivision",
        "businessFunction",
        "conditionGroup",
        "formType",
        "interest",
        "limit",
        "signatureId"
      ],
      "properties": {
        "signatureId": { "type": "string", "minLength": 0, "maxLength": 3 },
        "businessFunction": {
          "type": "string",
          "enum": [
            "ACCOUNTING_ACC",
            "ACCOUNT_G_ACG",
            "CLAIM_CLM",
            "CLM_PRPAY_CLP",
            "DOCUMENT_DOC",
            "PLEDGER_FIB",
            "PREMIUM_INS"
          ]
        },
        "businessDivision": { "type": "integer", "format": "int32" },
        "interest": { "type": "string" },
        "conditionGroup": {
          "type": "string",
          "enum": ["ALL_0", "DEAD_1", "DISAB_2", "OTHER_9"]
        },
        "limit": { "type": "integer", "format": "int32" },
        "formType": {
          "type": "string",
          "enum": [
            "CTRL_PAYMENTS___",
            "ACCOUNT_DOC_AD",
            "ACCOUNT_EXPORT_AE",
            "AVTALEGIRO_AG",
            "ACCOUNT_LIST_AL",
            "ATTACHMENT_AT",
            "AD_BORD_BA",
            "CLOSE_BORD_BC",
            "CORR_BORD_BK",
            "CLAIM_BORD_BL",
            "CLAIM_ADVICE_BM",
            "PROV_BORD_BP",
            "CANCEL_BS",
            "ADD_BORD_BV",
            "CANCEL_CA",
            "COVER_CREW_NOTE_CC",
            "CREW_DISCLETTE_CD",
            "COVNOTE_EXTRACT_CE",
            "CREWLIST_GEN_CG",
            "CLAIM_INVOICE_CI",
            "CLMCTRL_CK",
            "COVER_NOTE_CN",
            "CHANGE_OBJ_CO",
            "CREW_SETTLEMENT_CS",
            "DEBIT_AGENTNOTE_DA",
            "COV_DECLARATION_DE",
            "DEDUCT_INVOICE_DI",
            "INVOICE_DN",
            "IMP_ELBORD_EB",
            "E_INVOICE_EI",
            "ELREMIT_EL",
            "FREIGHT_O_CERTI_FC",
            "SINGLE_GIRO_GI",
            "GIRO_NOTE_GN",
            "INTRST_CALC_IC",
            "CREDIT_ADVICE_IG",
            "INFO_CLAIM_IL",
            "INS_INFO_IN",
            "INFO_PREMIUM_IP",
            "AGREEM_LETTER_LA",
            "BENEFIC_LETTER_LB",
            "CLAIM_LETTER_LC",
            "CLM_ING_INV_LTR_LD",
            "LETTER_LE",
            "INSURANCELETTER_LI",
            "CREW_LETTER_LM",
            "CLAIM_PAYMLETT_LP",
            "LEGAL_RECOVERY_LR",
            "CERTIFICATE_LS",
            "LETTER_EXPIRE_LX",
            "LETTER_MORTGAAG_LY",
            "LETTER_SECURITY_LZ",
            "COASTAL_OFFER_MC",
            "MAIL_CONFIRMAT_ML",
            "MARINE_OFFER_MM",
            "MAIL_EML_FILE_MP",
            "NEW_PERSON_NP",
            "OCR_IMPORT_OC",
            "DEBIT_ADVICE_OG",
            "PERIODICAL_PAY_P_",
            "PAYMENT_ADVICE_PA",
            "PRES_TO_CLIENT_PC",
            "PERSON_DOCUMENT_PE",
            "PL_REMINDER_PL",
            "PAYMENT_PM",
            "PERSON_OFFER_PO",
            "PRINT_DRAFT_PP",
            "STATEMENT_PS",
            "TECHN_STMT_PT",
            "PREM_WAIVER_PW",
            "REQ_FOR_QUOTE_QU",
            "_1REMINDER_R1",
            "_2REMINDER_R2",
            "_3REMINDER_R3",
            "_4REMINDER_R4",
            "_7REMINDER_R7",
            "_8REMINDER_R8",
            "_9REMINDER_R9",
            "CREDIT_NOTE_RC",
            "REMARK_RE",
            "MAX_NOTE_RM",
            "REMINDER_NOTE_RN",
            "ONLINE_NOTE_RO",
            "STATMENT_PREMIU_RP",
            "STATMENT_CLAIM_RQ",
            "PERSAC_LETTER_RS",
            "EXPIRE_REMINDER_RX",
            "SLIP_SL",
            "SYSTEM_MESSAGE_SM",
            "SLOW_PAYER_SP",
            "SYSTEM_SY",
            "TRIP_IMPORT_TI",
            "TAX_TFA_TT",
            "TAX_DOC_TX",
            "EXCEL_EXPORT_XL",
            "PLACEHOLDER_ZZ"
          ]
        }
      }
    },
    "ClaimDepartmentCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BusnClass": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BusnRegion": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BusnDivision": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "feeClaimCategory": { "type": "string" },
        "feePercent": { "type": "number", "format": "double" }
      }
    },
    "Interest": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "translation": { "type": "string" },
        "marineInterestType": {
          "type": "string",
          "enum": ["HULL", "LOSS_OF_HIRE", "OTHER"]
        },
        "policyType": {
          "type": "string",
          "enum": ["NORMAL_0", "NOTHING_1", "PERSON_2"]
        },
        "group": { "type": "string" },
        "certificates": { "type": "boolean" }
      }
    },
    "Condition": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "translation": { "type": "string" }
      }
    },
    "Office": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BusnSection": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BusnBranch": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BusnSubClass": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "translation": { "type": "string" }
      }
    },
    "EnergyLossDamageCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "EnergyCauseCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "NonmarineClaimCause": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "EnergyLossLocationCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "DetailCasualty": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "NonmarineClaimEffect": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "EnergyLossFunctionCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "GeneralClaimCause": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "ClaimCategory": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "governmental": {
          "type": "string",
          "enum": ["NO_1", "YES_2", "GOVERMENT_9"]
        },
        "deductibleRule": {
          "type": "string",
          "enum": [
            "AAD_A",
            "NATDIS_D",
            "INTERNAL_COST_I",
            "NORULE_N",
            "WORKDED_W"
          ]
        }
      }
    },
    "LiabilityCode": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "RecoveryCode": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "ClaimPlace": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "MainEvent": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "ClaimCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "MainCasualty": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "TauCode": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "PaymentCode": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "considerReversedChargeVATWarning": { "type": "boolean" },
        "defaultGeneralLedgerAccount": { "type": "boolean" },
        "defaultGeneralLedgerAccountDIR": {
          "type": "integer",
          "format": "int64"
        },
        "defaultGeneralLedgerAccountCO": {
          "type": "integer",
          "format": "int64"
        },
        "defaultGeneralLedgerAccountRE": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ClaimEvent": {
      "type": "object",
      "required": ["eventDate", "mainEvent", "superEvent"],
      "properties": {
        "eventId": { "type": "string" },
        "eventDate": { "type": "string", "format": "date" },
        "eventNumber": { "type": "integer", "format": "int32" },
        "superEvent": {
          "type": "string",
          "enum": [
            "COLLISION_1",
            "HEAVY_WEATHER_2",
            "FIREEXPLOSION_3",
            "XL_4",
            "OTHER_INCIDENT_9",
            "CARGO_A",
            "COLLISION_B",
            "CONTACT_C",
            "MACHEQUIPMENT_D",
            "DEFENCE_E",
            "FIREEXPLOSION_F",
            "GROUNDING_G",
            "HULLSTRUCTFAILU_H",
            "POLLUTION_J",
            "LOSS_OF_STABILI_L",
            "WLL_INCIDENT_M",
            "NOT_RELEVANT_N",
            "PERSON_P",
            "SURVEXAMQUERY_S",
            "WEATHERNATDIS_W",
            "NOT_IN_19_X",
            "OTHER_Z"
          ]
        },
        "mainEvent": { "type": "string", "minLength": 0, "maxLength": 3 },
        "areaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "agreementType": {
          "type": "string",
          "enum": [
            "MARINE_1",
            "AQUACULTURE_10",
            "PI_11",
            "ENERGY_2",
            "OIL_COMPANY_21",
            "CARGO_3",
            "PROPERTY_4",
            "AVIATION_5",
            "PRIVATE_50",
            "WAR_6",
            "NON_MARINE_7",
            "COASTAL_MARINE_8",
            "BUILDERS_RISK_9"
          ]
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 200 },
        "time": { "type": "integer", "format": "int32" },
        "timeZone": { "type": "string" },
        "port": { "$ref": "#/definitions/UNLocation" }
      }
    },
    "UNLocation": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "coordinates": { "type": "string", "minLength": 0, "maxLength": 20 },
        "types": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["PORT", "RAIL_TERMINAL", "ROAD_TERMINAL", "AIRPORT"]
          }
        }
      }
    },
    "ClaimEventInitParams": {
      "type": "object",
      "required": ["eventDate"],
      "properties": {
        "eventDate": { "type": "string", "format": "date" },
        "coverageId": { "type": "string" }
      }
    },
    "SearchResultClaimEvent": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimEvent" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "Claim": {
      "type": "object",
      "required": ["claimEvent", "coverageId"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "coverageInformation": { "$ref": "#/definitions/CoverageInformation" },
        "coverageId": { "type": "string", "minLength": 0, "maxLength": 15 },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE_1",
            "CLM_CLOSED_2",
            "CLM_REOPEN_3",
            "CLM_RCLOSED_4",
            "DELETED_9"
          ]
        },
        "claimEvent": { "$ref": "#/definitions/ClaimEvent" },
        "date": { "type": "string", "format": "date" },
        "reportedDate": { "type": "string", "format": "date" },
        "handler": { "type": "string", "minLength": 0, "maxLength": 3 },
        "code": { "type": "string", "minLength": 0, "maxLength": 2 },
        "codeDate": { "type": "string", "format": "date" },
        "lastTreatmentDate": { "type": "string", "format": "date" },
        "office": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "totals": { "$ref": "#/definitions/ClaimTotals" },
        "operations": { "$ref": "#/definitions/ClaimOperations" },
        "claimant": { "$ref": "#/definitions/SimplePerson" },
        "insured": { "$ref": "#/definitions/SimplePerson" },
        "place": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "numberOfDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "degreeOfDisablement": {
          "type": "number",
          "format": "double",
          "maximum": 999.99,
          "exclusiveMaximum": false
        },
        "occupationalDegreeOfDisablement": {
          "type": "number",
          "format": "double",
          "maximum": 999.99,
          "exclusiveMaximum": false
        },
        "limitCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "limitAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "insuredAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "looseBonus": { "type": "boolean" },
        "hour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "common": { "type": "boolean" },
        "areaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "fromAreaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "toAreaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "taxRegion": { "type": "string", "minLength": 0, "maxLength": 4 },
        "areaDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "tauCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "tauText": { "type": "string", "minLength": 0, "maxLength": 35 },
        "liabilityCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "liabilityText": { "type": "string", "minLength": 0, "maxLength": 35 },
        "cargoType": { "type": "string", "minLength": 0, "maxLength": 3 },
        "transportType": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "reference": { "type": "string", "minLength": 0, "maxLength": 17 },
        "text": { "type": "string", "minLength": 0, "maxLength": 40 },
        "internalNote": { "type": "string", "minLength": 0, "maxLength": 2000 },
        "mainCasualty": { "type": "string", "minLength": 0, "maxLength": 3 },
        "detailCasualty": { "type": "string", "minLength": 0, "maxLength": 3 },
        "nonmarineClaimEffect": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "nonmarineClaimCause": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "generalClaimCause": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "totalLoss": { "type": "boolean" },
        "automaticSettlement": { "type": "boolean" },
        "closeDate": { "type": "string", "format": "date" },
        "nextActionDate": { "type": "string", "format": "date" },
        "longDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "externalClaimId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculateInterest": { "type": "boolean" },
        "workPlace": { "$ref": "#/definitions/WorkPlace" },
        "lossAdjusterDate": { "type": "string", "format": "date" },
        "numberOfTreatment1": { "type": "integer", "format": "int32" },
        "numberOfTreatment2": { "type": "integer", "format": "int32" },
        "timeBarNote": { "type": "string", "minLength": 0, "maxLength": 200 },
        "largeClaimGroup": { "type": "boolean" },
        "object": { "$ref": "#/definitions/SimpleInsuredObject" },
        "geoDescription": { "type": "string", "minLength": 0, "maxLength": 70 },
        "regress": {
          "type": "string",
          "enum": [
            "NOT_POSSIBLE_1",
            "POSSIBLE_2",
            "TREATEMENT_3",
            "FINISHED_4",
            "ANSVAR_ERKJENT_5",
            "DELVIS_BETALT_6",
            "BET_AVSLUTTET_7",
            "NOT_TREATED_8"
          ]
        },
        "regressDate": { "type": "string", "format": "date" },
        "regressBy": { "type": "string", "minLength": 0, "maxLength": 3 },
        "regressCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "regressAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "regressText": { "type": "string", "minLength": 0, "maxLength": 70 },
        "claimObjects": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimObject" }
        },
        "exchangeDateForAutoDeductibles": {
          "type": "string",
          "format": "date"
        },
        "pilotOnBoard": {
          "type": "string",
          "enum": ["NO_N", "YES_Y", "UNKNOWN_Z"]
        },
        "codeDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "codeTreatmentDate": { "type": "string", "format": "date" },
        "adjuster": { "type": "string", "minLength": 0, "maxLength": 3 },
        "externalAdjuster": { "type": "boolean" },
        "onOrOffshoreCode": {
          "type": "string",
          "enum": ["DOWNSTREAM_1", "UPSTREAM_2", "UNSPECIFIED_9"]
        },
        "amountNoDecimals": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "insuredCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "energyAssuredsShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "energyLossLocationOnObject": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "energyLossObjectFunction": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "energyLossDamageOnItem": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "energyClaimCauseCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "categoryType": {
          "type": "string",
          "enum": [
            "GENAVERAGE_1",
            "GAVR_ABSORPTIO_2",
            "ASSUMGENAVR_3",
            "SUE__LABOUR_4",
            "NONE_Z"
          ]
        },
        "totalLossType": {
          "type": "string",
          "enum": ["UNSPEC_0", "ACTUAL_1", "CONSTRUCTIVE_2"]
        },
        "potentialRecovery": {
          "type": "string",
          "enum": ["NO_N", "UNKNOWN_U", "YES_Y"]
        },
        "claimRecoveryCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "potentialRecoveryCurrency": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "potentialRecoveryAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "potentialRecoveryInternalNote": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "recoveryAchieved": { "type": "boolean" },
        "recoveryAchievedCurrency": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "recoveryAchievedAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "recoveryAchievedDate": { "type": "string", "format": "date" },
        "recoveryReminderDate": { "type": "string", "format": "date" },
        "recoveryAchievedSignature": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "recoveryAchievedInternalNote": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "internalConflict": { "type": "boolean" },
        "timeBarDate": { "type": "string", "format": "date" },
        "objectName": { "type": "string", "minLength": 0, "maxLength": 40 },
        "startOfRisk": { "type": "string", "format": "date" },
        "meansOfTransport": {
          "type": "string",
          "minLength": 0,
          "maxLength": 70
        },
        "fromPort": { "type": "string", "minLength": 0, "maxLength": 3 },
        "placeOfReceipt": { "type": "string", "minLength": 0, "maxLength": 6 },
        "portOfLoading": { "type": "string", "minLength": 0, "maxLength": 6 },
        "portOfDischarge": { "type": "string", "minLength": 0, "maxLength": 6 },
        "placeOfDelivery": { "type": "string", "minLength": 0, "maxLength": 6 },
        "countryOfDischarge": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "claimId": {
          "type": "integer",
          "format": "int32",
          "maximum": 99999999,
          "exclusiveMaximum": false
        },
        "responsibles": {
          "type": "array",
          "items": { "$ref": "#/definitions/Responsible" }
        }
      }
    },
    "ClaimObject": {
      "type": "object",
      "required": ["object"],
      "properties": {
        "object": { "$ref": "#/definitions/SimpleInsuredObject" }
      }
    },
    "ClaimOperations": {
      "type": "object",
      "properties": {
        "canModify": { "type": "boolean" },
        "canModifyMessage": { "type": "string" },
        "canClose": { "type": "boolean" },
        "canCloseMessage": { "type": "string" },
        "canOpen": { "type": "boolean" },
        "canOpenMessage": { "type": "string" },
        "canDelete": { "type": "boolean" },
        "canDeleteMessage": { "type": "string" },
        "canUndoDelete": { "type": "boolean" },
        "canUndoDeleteMessage": { "type": "string" },
        "canView": { "type": "boolean" }
      }
    },
    "ClaimTotals": {
      "type": "object",
      "properties": {
        "reserve": { "type": "number", "format": "double" },
        "settled": { "type": "number", "format": "double" },
        "total": { "type": "number", "format": "double" },
        "reserve100": { "type": "number", "format": "double" },
        "settled100": { "type": "number", "format": "double" },
        "total100": { "type": "number", "format": "double" },
        "balance": { "type": "number", "format": "double" },
        "totalPaidHold": { "type": "number", "format": "double" },
        "grossReserve": { "type": "number", "format": "double" },
        "grossSettled": { "type": "number", "format": "double" },
        "deductibleReserve": { "type": "number", "format": "double" },
        "deductibleSettled": { "type": "number", "format": "double" },
        "currency": { "type": "string" }
      }
    },
    "CoverageInformation": {
      "type": "object",
      "properties": {
        "coverageId": { "type": "string" },
        "agreementId": { "type": "string" },
        "agreementName": { "type": "string" },
        "agreementTreatAs": {
          "type": "string",
          "enum": ["DIRECT_TREATM_1", "RECEIVED_TREATM_2"]
        },
        "originalInsured": { "$ref": "#/definitions/SimplePerson" },
        "source": { "$ref": "#/definitions/SimplePerson" },
        "busnDivision": { "type": "integer", "format": "int32" },
        "busnRegion": { "type": "integer", "format": "int32" },
        "busnBranch": { "type": "integer", "format": "int32" },
        "interest": { "type": "string" },
        "condition": { "type": "integer", "format": "int32" },
        "businessSubclass": { "type": "integer", "format": "int32" },
        "startDate": { "type": "string", "format": "date" },
        "changeDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "currency": { "type": "string" },
        "object": { "$ref": "#/definitions/SimpleInsuredObject" },
        "payer": { "$ref": "#/definitions/SimplePerson" },
        "claimLeader": { "$ref": "#/definitions/SimplePerson" },
        "insuranceType": {
          "type": "string",
          "enum": [
            "PROPORTIONAL_1",
            "SECONDARY_2",
            "NON_PROP_3",
            "COMMISSION_6",
            "FEE_INVOICED_7",
            "NOPREM_INVOICED_8"
          ]
        },
        "totalAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "ourShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "agreementType": {
          "type": "string",
          "enum": [
            "MARINE_1",
            "AQUACULTURE_10",
            "PI_11",
            "ENERGY_2",
            "OIL_COMPANY_21",
            "CARGO_3",
            "PROPERTY_4",
            "AVIATION_5",
            "PRIVATE_50",
            "WAR_6",
            "NON_MARINE_7",
            "COASTAL_MARINE_8",
            "BUILDERS_RISK_9"
          ]
        },
        "policyCoverId": { "type": "string" },
        "placementKey": { "type": "string" },
        "deductibleNote": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "claimHandler": { "type": "string" },
        "claimAdjuster": { "type": "string" },
        "executiveOfficer": { "type": "string" },
        "ffoType": {
          "type": "string",
          "enum": [
            "UNSPECIFIED_0",
            "_1_4_1",
            "_2_4_2",
            "_3_4_3",
            "_4_4_4",
            "NO_5"
          ]
        },
        "rdcType": {
          "type": "string",
          "enum": [
            "UNSPECIFIED_0",
            "_1_4_1",
            "_2_4_2",
            "_3_4_3",
            "_4_4_4",
            "NO_5"
          ]
        },
        "businessType": { "type": "string", "enum": ["DIR_1", "CO_2", "RE_3"] }
      }
    },
    "Responsible": {
      "type": "object",
      "required": ["key", "signatureId", "type"],
      "properties": {
        "id": { "type": "string" },
        "signatureId": { "type": "string", "minLength": 0, "maxLength": 3 },
        "type": { "type": "string", "enum": ["CLAIM"] },
        "key": { "type": "string" }
      }
    },
    "WorkPlace": {
      "type": "object",
      "required": ["name", "shortName"],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "name": { "type": "string", "minLength": 0, "maxLength": 70 },
        "shortName": { "type": "string", "minLength": 0, "maxLength": 15 },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "workPlaceType": { "type": "string", "minLength": 0, "maxLength": 3 }
      }
    },
    "ClaimInitParams": {
      "type": "object",
      "required": ["coverageId", "date"],
      "properties": {
        "coverageId": { "type": "string" },
        "date": { "type": "string", "format": "date" }
      }
    },
    "ClaimCloseParams": {
      "type": "object",
      "properties": { "closeDate": { "type": "string", "format": "date" } }
    },
    "ClaimView": {
      "type": "object",
      "properties": {
        "claimId": { "type": "string" },
        "coverageId": { "type": "string" },
        "claimant": { "type": "string" },
        "originalInsured": { "type": "string" },
        "source": { "type": "string" },
        "claimHandler": { "type": "string" },
        "claimAdjuster": { "type": "string" },
        "interest": { "type": "string" },
        "claimDate": { "type": "string", "format": "date" },
        "lastTreatmentDate": { "type": "string", "format": "date" },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE_1",
            "CLM_CLOSED_2",
            "CLM_REOPEN_3",
            "CLM_RCLOSED_4",
            "DELETED_9"
          ]
        },
        "text": { "type": "string" },
        "insuredObject": { "type": "string" },
        "claimLeader": { "type": "string" },
        "agreementName": { "type": "string" },
        "internalConflict": { "type": "boolean" },
        "totals": { "$ref": "#/definitions/ClaimTotals" },
        "operations": { "$ref": "#/definitions/ClaimOperations" }
      }
    },
    "SearchResultClaimView": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimView" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "ClaimIngoingInvoice": {
      "type": "object",
      "required": [
        "advanceAmount",
        "currency",
        "directPay",
        "grossAmount",
        "issuer",
        "noCosts",
        "status",
        "sumCoveredAmount",
        "sumOtherClaimAmount",
        "sumOwnersShareAmount",
        "sumTotalAmount"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "issuer": { "$ref": "#/definitions/SimplePerson" },
        "issuersReference": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "grossAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "amount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "directPay": { "type": "boolean" },
        "description": { "type": "string", "minLength": 0, "maxLength": 35 },
        "advanceAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "payDate": { "type": "string", "format": "date" },
        "noCosts": { "type": "boolean" },
        "status": {
          "type": "string",
          "enum": ["ORDINARY_O", "PAY_IN_ADVANCE_P", "REPLACED_R", "WORK_W"]
        },
        "originalIngoingInvoice": {
          "$ref": "#/definitions/ClaimIngoingInvoice"
        },
        "sumTotalAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumCoveredAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumOwnersShareAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumOtherClaimAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "note": { "type": "string", "minLength": 0, "maxLength": 2000 },
        "claimPayment": { "$ref": "#/definitions/ClaimPayment" },
        "printNote": { "type": "boolean" },
        "ingoingInvoiceLines": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimIngoingInvoiceLine" }
        },
        "interestDays": { "type": "integer", "format": "int32" },
        "calculatedInterest": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "paidInterest": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "attachmentsCount": { "type": "integer", "format": "int32" }
      }
    },
    "ClaimIngoingInvoiceLine": {
      "type": "object",
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "description": { "type": "string", "minLength": 0, "maxLength": 35 },
        "descriptionLong": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "totalAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "coveredAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "ownersShareAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "ownersShareDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "ownersShareDescriptionLong": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "otherClaimAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        }
      }
    },
    "ClaimPayment": {
      "type": "object",
      "required": [
        "accountingGroup",
        "balance",
        "currency",
        "documentDate",
        "dueDate",
        "function",
        "legalReceiver",
        "paymentReceiver",
        "validFrom"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "id": { "type": "string" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "validFrom": { "type": "string", "format": "date" },
        "documentDate": { "type": "string", "format": "date" },
        "exchangeDate": { "type": "string", "format": "date" },
        "function": {
          "type": "string",
          "enum": [
            "CLAIM_BORDEREAU_C",
            "ESTIMATE_E",
            "GENERAL_LEDGER_G",
            "INTERNAL_I",
            "PAYMENT_P",
            "GL_TRANS_WCLMB_Q",
            "PAYMENT_WCLMBO_R",
            "SETTLE_S",
            "FX_X"
          ]
        },
        "reset": { "type": "boolean" },
        "dueDate": { "type": "string", "format": "date" },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "paymentCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "accountingGroup": {
          "type": "string",
          "enum": [
            "DIRECT_1",
            "RECEIVED_2",
            "CEDED_3",
            "CLAIM_ACCOUNTS_4",
            "AGENTS_7",
            "INTERIMS_9",
            "UNSPECIFIED_99"
          ]
        },
        "paymentReceiver": { "$ref": "#/definitions/SimplePerson" },
        "legalReceiver": { "$ref": "#/definitions/SimplePerson" },
        "bankAccountNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "personalLedgerText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "personalLedgerAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "feeAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "balance": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "generalLedgerAccount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999,
          "exclusiveMaximum": false
        },
        "generalCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "generalAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "taxModel": {
          "type": "string",
          "enum": [
            "NONE_0",
            "NORW_MVA_1",
            "SWEDISH_TAX_2",
            "FINNISH_TAX_3",
            "GB_TAX_4",
            "US_TAX_5",
            "BELGIUM_TAX_6"
          ]
        },
        "messageToElectronicRemittance": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "externalDocumentId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "transferAccounting": { "type": "boolean" },
        "toBeSignedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate1": { "type": "string", "format": "date" },
        "toBeSignedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate2": { "type": "string", "format": "date" },
        "claimSettlements": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimSettlement" }
        },
        "electronicRemittance": {
          "$ref": "#/definitions/ElectronicRemittance"
        },
        "electronicRemitted": { "type": "boolean" },
        "paymentType": {
          "type": "string",
          "enum": [
            "PERSONAL_LEDGER_WITH_REG",
            "PERSONAL_LEDGER",
            "GENERAL_LEDGER",
            "PERSONAL_LEDGER_BROKER_WITH_REG"
          ]
        },
        "ingoingInvoiceId": { "type": "integer", "format": "int32" },
        "bordereauText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "payment": { "type": "boolean" },
        "authorizationRule": { "$ref": "#/definitions/AuthorizationRule" },
        "canChangeAuthorizationRule": { "type": "boolean" },
        "canModify": { "type": "boolean" },
        "canRelease": { "type": "boolean" },
        "status": {
          "type": "string",
          "enum": [
            "TAKEN_10",
            "NOT_USED_11",
            "DRAFT_12",
            "HOLD_13",
            "RELEASE_14",
            "WAIT_FOR_SIGN_15",
            "DISM_SIGNATURE_16",
            "CTRL_17",
            "WAITUNTIL_19",
            "ORDERED_SPREAD_20",
            "SPREAD_PROCESS_21",
            "SPREAD_UNCOMP_29",
            "PERSLEDGER_REA_30",
            "PL_PROCECESS_31",
            "PL_UNCOMPLETE_39",
            "BORDREADY_40",
            "BORD_PROCESS_41",
            "BORD_UNCOMPLETE_49",
            "GL_PRODREADY_50",
            "GL_PROCESS_51",
            "GL_RUN_1_52",
            "GL_DIFFLIST_53",
            "GL_UNCOMPLETE_54",
            "READY_FOR_EXPOR_55",
            "EXPORT_IN_PROGR_56",
            "EXP_NO_ACCLINE_58",
            "EXP_UNCOMPLETE_59",
            "ALL_DONE_60",
            "ALL_DONE_MANUAL_61",
            "ONHOLD_9"
          ]
        }
      }
    },
    "ClaimSettlement": {
      "type": "object",
      "required": ["claimCategory", "currency", "reserve", "toBeSettled"],
      "properties": {
        "claimCategory": { "type": "string", "minLength": 0, "maxLength": 3 },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "toBeSettled": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "toBeSettled100pct": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reserve": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reserve100pct": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "settled": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "paymentReceiver": { "$ref": "#/definitions/SimplePerson" },
        "legalReceiver": { "$ref": "#/definitions/SimplePerson" }
      }
    },
    "ElectronicRemittance": {
      "type": "object",
      "required": [
        "agreedExchangeRate",
        "agreedWith",
        "bankAddress1",
        "bankAddress2",
        "bankAddress3",
        "bankCountry",
        "bankName",
        "chequeCode",
        "currency",
        "description",
        "dueDate",
        "expensesAbroad",
        "expensesDomestic",
        "ourBankAccountCurrency",
        "ourBankAccountNumber",
        "receiverBankAccountNumber",
        "remittanceCode",
        "status",
        "viaBankSwiftCode"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "status": {
          "type": "string",
          "enum": [
            "NEW_1",
            "WAIT_FOR_SIGN_2",
            "READY_3",
            "SENT_BANK_4",
            "ACCEPTED_5",
            "SETTLED_6",
            "HOLD_7",
            "ERROR_8",
            "DELETED_9"
          ]
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "ourBankAccountCurrency": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "ourBankAccountNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "dueDate": { "type": "string", "format": "date" },
        "paymentReceiver": { "$ref": "#/definitions/SimplePerson" },
        "receiverAttention": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "receiverAddress1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "receiverAddress2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "receiverAddress3": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "receiverCountry": { "type": "string", "minLength": 0, "maxLength": 3 },
        "receiverBankAccountNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "customerIdentificationNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "referenceOnInvoice": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "referenceOnInvoiceLocal1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "referenceOnInvoiceLocal2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "referenceOnInvoiceLocal3": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "bankSwiftCode": { "type": "string", "minLength": 0, "maxLength": 11 },
        "bankCountry": { "type": "string", "minLength": 0, "maxLength": 3 },
        "bankName": { "type": "string", "minLength": 0, "maxLength": 35 },
        "bankAddress1": { "type": "string", "minLength": 0, "maxLength": 35 },
        "bankAddress2": { "type": "string", "minLength": 0, "maxLength": 35 },
        "bankAddress3": { "type": "string", "minLength": 0, "maxLength": 35 },
        "viaBankSwiftCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 11
        },
        "clearingSystemId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "expensesDomestic": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "expensesAbroad": { "type": "string", "minLength": 0, "maxLength": 3 },
        "agreedExchangeRate": {
          "type": "integer",
          "format": "int32",
          "maximum": 99999999,
          "exclusiveMaximum": false
        },
        "agreedWith": { "type": "string", "minLength": 0, "maxLength": 6 },
        "chequeCode": {
          "type": "string",
          "enum": [
            "TO_PAYER_0",
            "TO_RECEIVER_1",
            "NO_CHEQUE_N",
            "UTBETALINGSANV_U"
          ]
        },
        "urgent": { "type": "boolean" },
        "remittanceCode": {
          "type": "string",
          "enum": [
            "INSURANCE_24",
            "OTHER_SERVICES_25",
            "INS_NEW_29",
            "UNSPECIFIED_99"
          ]
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 55 },
        "toBeSignedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate1": { "type": "string", "format": "date" },
        "toBeSignedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate2": { "type": "string", "format": "date" },
        "busnDivision": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "amount": { "type": "number", "format": "double" },
        "localAmount": { "type": "number", "format": "double" },
        "claimId": { "type": "string" },
        "operations": {
          "$ref": "#/definitions/ElectronicRemittanceOperations"
        },
        "details": {
          "type": "array",
          "items": { "$ref": "#/definitions/ElectronicRemittanceDetails" }
        },
        "authorizationRule": { "$ref": "#/definitions/AuthorizationRule" },
        "canChangeAuthorizationRule": { "type": "boolean" }
      }
    },
    "ElectronicRemittanceDetails": {
      "type": "object",
      "required": ["dueDate"],
      "properties": {
        "claimPaymentId": { "type": "string" },
        "accountingGroup": {
          "type": "string",
          "enum": [
            "AS_SPEC_IO_0",
            "DIRECT_1",
            "RECEIVED_2",
            "CEDED_3",
            "CLAIM_PAYMENTS_4",
            "AGENT_7",
            "TREATIES_8",
            "INTERIMS_9"
          ]
        },
        "billing": { "$ref": "#/definitions/SimplePerson" },
        "documentType": {
          "type": "string",
          "enum": [
            "BALANCE_0",
            "CASH_CL_BALANCE_1",
            "BALANCE_CORRECT_10",
            "PREMIUM_DEPOT_11",
            "CLAIM_DEPOT_12",
            "XL_PREMIUM_13",
            "XL_CLAIM_14",
            "PROFIT_COMM_15",
            "INTEREST_16",
            "REMIT_17",
            "RELPREM_DEPOT_18",
            "REL_CLM_DEPOT_19",
            "PREMIUM_2",
            "INTRPREMDEPOT_20",
            "INTRCLMDEPOT_21",
            "COLLECT_FEE_22",
            "ADM_FEE_23",
            "COMMISSION_24",
            "TAX_25",
            "NATPREM_26",
            "DUTY_PAYMENT_27",
            "INST_ADDENDUM_28",
            "ACCREBATE_29",
            "RETURN_PREMIUM_3",
            "NSCOMM_30",
            "LAST_INSTALMENT_31",
            "RELEASE_CALL_32",
            "OTHER_EXPENSES_33",
            "CLAIM_4",
            "CASH_CLAIM_5",
            "REFUND_6",
            "REMITTANCE_7",
            "BET_KORR_77",
            "VARIOUS_8",
            "AS_LOST_9"
          ]
        },
        "documentNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 99999999,
          "exclusiveMaximum": false
        },
        "referenceNumber": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999,
          "exclusiveMaximum": false
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "actualAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "dueDate": { "type": "string", "format": "date" }
      }
    },
    "ElectronicRemittanceOperations": {
      "type": "object",
      "properties": {
        "canCounterSign": { "type": "boolean" },
        "canDelete": { "type": "boolean" },
        "canHold": { "type": "boolean" },
        "canRelease": { "type": "boolean" }
      }
    },
    "ClaimPaymentsNotRemitted": {
      "type": "object",
      "required": ["currency", "paymentReceiver"],
      "properties": {
        "paymentReceiver": { "$ref": "#/definitions/SimplePerson" },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "sumPaid": { "type": "number", "format": "double" },
        "sumNotPaid": { "type": "number", "format": "double" },
        "claimPaymentsNotRemitted": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPayment" }
        }
      }
    },
    "CreateIngoingInvoicesPaymentsParams": {
      "type": "object",
      "required": ["claimPaymentsToPay"],
      "properties": {
        "claimPaymentsToPay": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPayment" }
        },
        "ingoingInvoicesToPay": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimIngoingInvoice" }
        },
        "interestToDate": { "type": "string", "format": "date" }
      }
    },
    "ClaimAccountingPerCategory": {
      "type": "object",
      "properties": {
        "claimCategory": { "type": "string", "minLength": 0, "maxLength": 3 },
        "reserve": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "settled": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "total": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        }
      }
    },
    "ClaimAccountingPerCategoryResult": {
      "type": "object",
      "properties": {
        "claimAccountingPerCategory": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimAccountingPerCategory" }
        },
        "currency": { "type": "string" },
        "sumReserve": { "type": "number", "format": "double" },
        "sumSettled": { "type": "number", "format": "double" },
        "sumTotal": { "type": "number", "format": "double" }
      }
    },
    "ClaimPaymentInsurerCollection": {
      "type": "object",
      "required": ["insurer"],
      "properties": {
        "insurer": { "$ref": "#/definitions/SimplePerson" },
        "insurerCollectionLines": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPaymentInsurerCollectionLine" }
        }
      }
    },
    "ClaimPaymentInsurerCollectionLine": {
      "type": "object",
      "required": [
        "canBeSettled",
        "claimCategory",
        "collected",
        "currency",
        "remaining",
        "total"
      ],
      "properties": {
        "currency": { "type": "string" },
        "total": { "type": "number", "format": "double" },
        "collected": { "type": "number", "format": "double" },
        "remaining": { "type": "number", "format": "double" },
        "canBeSettled": { "type": "number", "format": "double" },
        "toBeCollected": { "type": "number", "format": "double" },
        "toBeSettled": { "type": "number", "format": "double" },
        "claimCategory": { "type": "string", "minLength": 0, "maxLength": 3 }
      }
    },
    "ClaimPaymentInsurerCollectionParams": {
      "type": "object",
      "required": ["referenceBase"],
      "properties": {
        "referenceBase": { "type": "integer", "format": "int32" },
        "insurerCollection": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPaymentInsurerCollection" }
        }
      }
    },
    "ElectronicRemittanceOnPaymentsInitParams": {
      "type": "object",
      "required": ["claimPaymentsToRemit"],
      "properties": {
        "claimPaymentsToRemit": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPayment" }
        }
      }
    },
    "ClaimPaymentInsurerCollectionStatus": {
      "type": "object",
      "properties": {
        "unprocessedPayments": { "type": "boolean" },
        "referenceBase": { "type": "integer", "format": "int32" },
        "beneficiaryStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurerCollectionBeneficiaryStatus"
          }
        },
        "insurerCollection": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPaymentInsurerCollection" }
        }
      }
    },
    "InsurerCollectionBeneficiaryStatus": {
      "type": "object",
      "required": [
        "beneficiary",
        "currency",
        "remaining",
        "settled",
        "toBeSettled",
        "total"
      ],
      "properties": {
        "beneficiary": { "$ref": "#/definitions/SimplePerson" },
        "currency": { "type": "string" },
        "toBeSettled": { "type": "number", "format": "double" },
        "settled": { "type": "number", "format": "double" },
        "remaining": { "type": "number", "format": "double" },
        "total": { "type": "number", "format": "double" }
      }
    },
    "ClaimInternalRole": {
      "type": "object",
      "required": ["roleTypeId", "signature"],
      "properties": {
        "signature": { "type": "string", "minLength": 0, "maxLength": 3 },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 25 },
        "roleTypeId": { "type": "string", "minLength": 0, "maxLength": 6 },
        "areaCode": { "type": "string", "minLength": 0, "maxLength": 3 }
      }
    },
    "ClaimAccountingPerDocNo": {
      "type": "object",
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "validFrom": { "type": "string", "format": "date" },
        "electronicRemittanceDueDate": { "type": "string", "format": "date" },
        "claimCategory": { "type": "string" },
        "inOut": {
          "type": "string",
          "enum": ["INGOING_I", "OUTGOING_O", "PAYMENTS_P", "RETAINED_R"]
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "balance": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reserve": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reserve100pct": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "settled": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "settled100pct": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "personalLedgerBalance": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "generalLedgerBalance": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "generalLedgerAccountNumber": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999,
          "exclusiveMaximum": false
        },
        "internalAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "generalCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "generalAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "bordereauReference": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "status": {
          "type": "string",
          "enum": [
            "TAKEN_10",
            "NOT_USED_11",
            "DRAFT_12",
            "HOLD_13",
            "RELEASE_14",
            "WAIT_FOR_SIGN_15",
            "DISM_SIGNATURE_16",
            "CTRL_17",
            "WAITUNTIL_19",
            "ORDERED_SPREAD_20",
            "SPREAD_PROCESS_21",
            "SPREAD_UNCOMP_29",
            "PERSLEDGER_REA_30",
            "PL_PROCECESS_31",
            "PL_UNCOMPLETE_39",
            "BORDREADY_40",
            "BORD_PROCESS_41",
            "BORD_UNCOMPLETE_49",
            "GL_PRODREADY_50",
            "GL_PROCESS_51",
            "GL_RUN_1_52",
            "GL_DIFFLIST_53",
            "GL_UNCOMPLETE_54",
            "READY_FOR_EXPOR_55",
            "EXPORT_IN_PROGR_56",
            "EXP_NO_ACCLINE_58",
            "EXP_UNCOMPLETE_59",
            "ALL_DONE_60",
            "ALL_DONE_MANUAL_61",
            "ONHOLD_9"
          ]
        },
        "function": {
          "type": "string",
          "enum": [
            "CLAIM_BORDEREAU_C",
            "ESTIMATE_E",
            "GENERAL_LEDGER_G",
            "INTERNAL_I",
            "PAYMENT_P",
            "GL_TRANS_WCLMB_Q",
            "PAYMENT_WCLMBO_R",
            "SETTLE_S",
            "FX_X"
          ]
        },
        "referenceBase": {
          "type": "integer",
          "format": "int32",
          "maximum": 99999999,
          "exclusiveMaximum": false
        },
        "externalReference": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "bordereauText": { "type": "string" },
        "exchangeDate": { "type": "string", "format": "date" },
        "billingNo": { "$ref": "#/definitions/SimplePerson" },
        "cedentSecurity": { "$ref": "#/definitions/SimplePerson" },
        "originalInsured": { "$ref": "#/definitions/SimplePerson" },
        "source": { "$ref": "#/definitions/SimplePerson" }
      }
    },
    "ClaimAccountingPerDocNoResult": {
      "type": "object",
      "properties": {
        "claimAccountingPerDocNo": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimAccountingPerDocNo" }
        },
        "claimAccountingPerDocNoSums": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimAccountingPerDocNoSums" }
        }
      }
    },
    "ClaimAccountingPerDocNoSums": {
      "type": "object",
      "properties": {
        "currency": { "type": "string" },
        "sumBalance": { "type": "number", "format": "double" },
        "sumReserve": { "type": "number", "format": "double" },
        "sumReserve100pct": { "type": "number", "format": "double" },
        "sumSettled": { "type": "number", "format": "double" },
        "sumSettled100pct": { "type": "number", "format": "double" },
        "sumPersonalLedgerBalance": { "type": "number", "format": "double" },
        "sumGeneralLedgerBalance": { "type": "number", "format": "double" },
        "sumInternalAmount": { "type": "number", "format": "double" }
      }
    },
    "ClaimReceivedBordereau": {
      "type": "object",
      "properties": {
        "claimSettlements": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimSettlement" }
        },
        "bordereauText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "bordereauReference": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "exchangeDate": { "type": "string", "format": "date" }
      }
    },
    "ClaimCoShare": {
      "type": "object",
      "required": [
        "currency",
        "documentDate",
        "dueDate",
        "payments",
        "validFrom"
      ],
      "properties": {
        "documentDate": { "type": "string", "format": "date" },
        "dueDate": { "type": "string", "format": "date" },
        "validFrom": { "type": "string", "format": "date" },
        "collectAmount": { "type": "number", "format": "double" },
        "currency": { "type": "string" },
        "payments": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimCoSharePayment" }
        }
      }
    },
    "ClaimCoSharePayment": {
      "type": "object",
      "required": [
        "accountingGroup",
        "balance",
        "currency",
        "documentDate",
        "dueDate",
        "function",
        "legalReceiver",
        "paymentReceiver",
        "share",
        "validFrom"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "id": { "type": "string" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "validFrom": { "type": "string", "format": "date" },
        "documentDate": { "type": "string", "format": "date" },
        "exchangeDate": { "type": "string", "format": "date" },
        "function": {
          "type": "string",
          "enum": [
            "CLAIM_BORDEREAU_C",
            "ESTIMATE_E",
            "GENERAL_LEDGER_G",
            "INTERNAL_I",
            "PAYMENT_P",
            "GL_TRANS_WCLMB_Q",
            "PAYMENT_WCLMBO_R",
            "SETTLE_S",
            "FX_X"
          ]
        },
        "reset": { "type": "boolean" },
        "dueDate": { "type": "string", "format": "date" },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "paymentCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "accountingGroup": {
          "type": "string",
          "enum": [
            "DIRECT_1",
            "RECEIVED_2",
            "CEDED_3",
            "CLAIM_ACCOUNTS_4",
            "AGENTS_7",
            "INTERIMS_9",
            "UNSPECIFIED_99"
          ]
        },
        "paymentReceiver": { "$ref": "#/definitions/SimplePerson" },
        "legalReceiver": { "$ref": "#/definitions/SimplePerson" },
        "bankAccountNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "personalLedgerText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "personalLedgerAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "feeAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "balance": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "generalLedgerAccount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999,
          "exclusiveMaximum": false
        },
        "generalCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "generalAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "taxModel": {
          "type": "string",
          "enum": [
            "NONE_0",
            "NORW_MVA_1",
            "SWEDISH_TAX_2",
            "FINNISH_TAX_3",
            "GB_TAX_4",
            "US_TAX_5",
            "BELGIUM_TAX_6"
          ]
        },
        "messageToElectronicRemittance": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "externalDocumentId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "transferAccounting": { "type": "boolean" },
        "toBeSignedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate1": { "type": "string", "format": "date" },
        "toBeSignedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate2": { "type": "string", "format": "date" },
        "claimSettlements": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimSettlement" }
        },
        "electronicRemittance": {
          "$ref": "#/definitions/ElectronicRemittance"
        },
        "electronicRemitted": { "type": "boolean" },
        "paymentType": {
          "type": "string",
          "enum": [
            "PERSONAL_LEDGER_WITH_REG",
            "PERSONAL_LEDGER",
            "GENERAL_LEDGER",
            "PERSONAL_LEDGER_BROKER_WITH_REG"
          ]
        },
        "ingoingInvoiceId": { "type": "integer", "format": "int32" },
        "bordereauText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "payment": { "type": "boolean" },
        "authorizationRule": { "$ref": "#/definitions/AuthorizationRule" },
        "canChangeAuthorizationRule": { "type": "boolean" },
        "canModify": { "type": "boolean" },
        "canRelease": { "type": "boolean" },
        "status": {
          "type": "string",
          "enum": [
            "TAKEN_10",
            "NOT_USED_11",
            "DRAFT_12",
            "HOLD_13",
            "RELEASE_14",
            "WAIT_FOR_SIGN_15",
            "DISM_SIGNATURE_16",
            "CTRL_17",
            "WAITUNTIL_19",
            "ORDERED_SPREAD_20",
            "SPREAD_PROCESS_21",
            "SPREAD_UNCOMP_29",
            "PERSLEDGER_REA_30",
            "PL_PROCECESS_31",
            "PL_UNCOMPLETE_39",
            "BORDREADY_40",
            "BORD_PROCESS_41",
            "BORD_UNCOMPLETE_49",
            "GL_PRODREADY_50",
            "GL_PROCESS_51",
            "GL_RUN_1_52",
            "GL_DIFFLIST_53",
            "GL_UNCOMPLETE_54",
            "READY_FOR_EXPOR_55",
            "EXPORT_IN_PROGR_56",
            "EXP_NO_ACCLINE_58",
            "EXP_UNCOMPLETE_59",
            "ALL_DONE_60",
            "ALL_DONE_MANUAL_61",
            "ONHOLD_9"
          ]
        },
        "yesno": { "type": "boolean" },
        "share": { "type": "number", "format": "double" }
      }
    },
    "ClaimCasualtySalary": {
      "type": "object",
      "required": ["manual", "total"],
      "properties": {
        "total": { "type": "number", "format": "double" },
        "calculated": { "type": "number", "format": "double" },
        "manual": { "type": "boolean" },
        "settled": { "type": "number", "format": "double" },
        "outstanding": { "type": "number", "format": "double" }
      }
    },
    "ClaimInternalExpenses": {
      "type": "object",
      "required": ["calculated"],
      "properties": {
        "total": { "type": "number", "format": "double" },
        "calculated": { "type": "number", "format": "double" },
        "settled": { "type": "number", "format": "double" },
        "outstanding": { "type": "number", "format": "double" },
        "description": { "type": "string", "minLength": 0, "maxLength": 50 }
      }
    },
    "ClaimSummary": {
      "type": "object",
      "properties": {
        "sumCoveredAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumDeductibleAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumInterest": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "totalCoveredAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "totalSumCoveredAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "totalSumCoveredAmountOurShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "totalSumCoveredAmountNotOurShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "restCoveredAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "restCoveredAmountNotOurShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "unpaidPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "paidOwner": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "paidOthers": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "totalPaid": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumActualPaidIngoingInvoices": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumActualPaidWithoutIngoingInvoices": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "sumIngoingInvoicesNotToPay": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "claimCasualtySalary": { "$ref": "#/definitions/ClaimCasualtySalary" },
        "claimInternalExpenses": {
          "$ref": "#/definitions/ClaimInternalExpenses"
        }
      }
    },
    "ClaimUsedDeductible": {
      "type": "object",
      "required": [
        "basicAmount",
        "claimCategory",
        "currency",
        "days",
        "deductedAmount",
        "deductibleCode",
        "percentage"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 23 },
        "deductibleCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "basicAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "percentage": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "deductedAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "text": { "type": "string", "minLength": 0, "maxLength": 35 },
        "days": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "minAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "maxAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "coverageDeductibleDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "fraction": { "type": "string", "minLength": 0, "maxLength": 6 },
        "deductibleAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "claimCategory": { "type": "string", "minLength": 0, "maxLength": 3 }
      }
    },
    "ClaimSettleBalance": {
      "type": "object",
      "properties": {
        "claimSettlements": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimSettlement" }
        },
        "bordereauText": { "type": "string", "minLength": 0, "maxLength": 1000 }
      }
    },
    "CoShare": {
      "type": "object",
      "properties": {
        "yesno": { "type": "boolean" },
        "insurer": { "$ref": "#/definitions/SimplePerson" },
        "share": { "type": "number", "format": "double" },
        "part": { "type": "integer", "format": "int64" }
      }
    },
    "ClaimGuarantee": {
      "type": "object",
      "required": [
        "currency",
        "formOfGuarantee",
        "receiver",
        "startDate",
        "status",
        "type"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 20 },
        "type": {
          "type": "string",
          "enum": [
            "CEDING_C",
            "RECEIVED_R",
            "CONTRGARANTEE_X",
            "ON_BEHALF_OF_Y",
            "EXCLUDE_Z"
          ]
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "amount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "provider": { "$ref": "#/definitions/SimplePerson" },
        "issuer": { "$ref": "#/definitions/SimplePerson" },
        "formOfGuarantee": {
          "type": "string",
          "enum": [
            "BANK_GUARANTEE_BGU",
            "CASH_DEPOSIT_CDE",
            "CORP_GUARANTEE_CGU",
            "INSURERS_LOU_ILU",
            "LETTOFUNDERTAK_LOU",
            "SURETY_BOND_SBO",
            "OTHER_ZZZ"
          ]
        },
        "receiver": { "$ref": "#/definitions/SimplePerson" },
        "jurisdiction": { "type": "string", "minLength": 0, "maxLength": 3 },
        "outsideCover": { "type": "boolean" },
        "icIncluded": { "type": "boolean" },
        "contraGuaranteeOf": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "receivedContraGuarantee": { "type": "boolean" },
        "registeredDate": { "type": "string", "format": "date" },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
        },
        "cancellationDate": { "type": "string", "format": "date" },
        "externalDocumentId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "internalNote": { "type": "string", "minLength": 0, "maxLength": 2000 },
        "enableContraGuaranteeFunction": { "type": "boolean" }
      }
    },
    "ClaimStatusHistory": {
      "type": "object",
      "properties": {
        "changeTime": { "type": "string", "format": "date-time" },
        "signature": { "type": "string" },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE_1",
            "CLM_CLOSED_2",
            "CLM_REOPEN_3",
            "CLM_RCLOSED_4",
            "DELETED_9"
          ]
        },
        "code": { "type": "string" }
      }
    },
    "ClaimReserveHistory": {
      "type": "object",
      "properties": {
        "documentDate": { "type": "string", "format": "date" },
        "currency": { "type": "string" },
        "claimCategory": { "type": "string" },
        "currentReserve": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "currentReserve100pct": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reservePerChange": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reservePerChange100pct": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "bordereauText": { "type": "string" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "function": {
          "type": "string",
          "enum": [
            "CLAIM_BORDEREAU_C",
            "ESTIMATE_E",
            "GENERAL_LEDGER_G",
            "INTERNAL_I",
            "PAYMENT_P",
            "GL_TRANS_WCLMB_Q",
            "PAYMENT_WCLMBO_R",
            "SETTLE_S",
            "FX_X"
          ]
        },
        "createdBy": { "type": "string" },
        "created": { "type": "string", "format": "date" },
        "exchangeDate": { "type": "string", "format": "date" }
      }
    },
    "ClaimPlacement": {
      "type": "object",
      "required": ["claimId", "placementLineId"],
      "properties": {
        "claimId": { "type": "string", "minLength": 0, "maxLength": 18 },
        "placementLineId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "share": {
          "type": "number",
          "format": "double",
          "maximum": 9999.9999999999,
          "exclusiveMaximum": false
        },
        "outgoingBusinessType": {
          "type": "string",
          "enum": ["CO_2", "RE_3", "RE_FOR_YOUR_ACC_4", "RE_OF_5"]
        },
        "commissionCode": {
          "type": "string",
          "enum": [
            "AGENT_OVERRIDER_A",
            "OUTGPREM_OVERR_C",
            "GROSS_G",
            "NET_L",
            "NO_COMMISSION_N",
            "OVERRIDER_COMM_O",
            "AFTER_PROFITCOM_P",
            "QSTCOV_DETERM_Q",
            "LOW_GROSS_OVERR_R",
            "TOTAL_COMM_T",
            "TOTAL_WRETURN_X",
            "NO_PREMIUM_Y"
          ]
        },
        "commission": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "insurer": { "$ref": "#/definitions/SimplePerson" },
        "billingNo": { "$ref": "#/definitions/SimplePerson" },
        "ratingLeader": { "$ref": "#/definitions/SimplePerson" },
        "underwriterReference": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "underwriterContact": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "SearchResultClaim": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Claim" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "ClaimRole": {
      "type": "object",
      "required": ["roleTypeId"],
      "properties": {
        "person": { "$ref": "#/definitions/SimplePerson" },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 25 },
        "roleTypeId": { "type": "string", "minLength": 0, "maxLength": 6 },
        "areaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "contact": { "$ref": "#/definitions/SimplePerson" }
      }
    },
    "ClaimReserve": {
      "type": "object",
      "required": ["claimCategory", "currency", "reserve"],
      "properties": {
        "claimCategory": { "type": "string", "minLength": 0, "maxLength": 3 },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "reserve": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reserve100pct": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        }
      }
    },
    "ClaimPaymentSearchResult": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPayment" }
        },
        "totalCount": { "type": "integer", "format": "int32" },
        "claimPaymentSums": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPaymentSums" }
        }
      }
    },
    "ClaimPaymentSums": {
      "type": "object",
      "properties": {
        "currency": { "type": "string" },
        "sumPersonalLedgerAmount": { "type": "number", "format": "double" },
        "sumBalance": { "type": "number", "format": "double" },
        "sumGeneralAmount": { "type": "number", "format": "double" }
      }
    },
    "ConfirmReservesParams": {
      "type": "object",
      "properties": {
        "createZeroAdvice": { "type": "boolean" },
        "bordereauText": { "type": "string", "minLength": 0, "maxLength": 1000 }
      }
    },
    "PaymentInitParams": {
      "type": "object",
      "required": ["paymentType"],
      "properties": {
        "paymentReceiver": { "$ref": "#/definitions/SimplePerson" },
        "includeElectronicRemittance": { "type": "boolean" },
        "paymentType": {
          "type": "string",
          "enum": [
            "PERSONAL_LEDGER_WITH_REG",
            "PERSONAL_LEDGER",
            "GENERAL_LEDGER",
            "PERSONAL_LEDGER_BROKER_WITH_REG"
          ]
        }
      }
    },
    "ChangeReservesParams": {
      "type": "object",
      "properties": {
        "claimReserves": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimReserve" }
        },
        "bordereauText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "exchangeDate": { "type": "string", "format": "date" }
      }
    },
    "ElectronicRemittanceOnPaymentsCreateParams": {
      "type": "object",
      "required": ["claimPaymentsToRemit", "electronicRemittance"],
      "properties": {
        "electronicRemittance": {
          "$ref": "#/definitions/ElectronicRemittance"
        },
        "claimPaymentsToRemit": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPayment" }
        }
      }
    },
    "ClaimTransaction": {
      "type": "object",
      "required": ["documentDate", "function", "status", "validFrom"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "id": { "type": "string" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "validFrom": { "type": "string", "format": "date" },
        "documentDate": { "type": "string", "format": "date" },
        "exchangeDate": { "type": "string", "format": "date" },
        "function": {
          "type": "string",
          "enum": [
            "CLAIM_BORDEREAU_C",
            "ESTIMATE_E",
            "GENERAL_LEDGER_G",
            "INTERNAL_I",
            "PAYMENT_P",
            "GL_TRANS_WCLMB_Q",
            "PAYMENT_WCLMBO_R",
            "SETTLE_S",
            "FX_X"
          ]
        },
        "currency": { "type": "string" },
        "amount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "reserve100": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "status": {
          "type": "string",
          "enum": [
            "TAKEN_10",
            "NOT_USED_11",
            "DRAFT_12",
            "HOLD_13",
            "RELEASE_14",
            "WAIT_FOR_SIGN_15",
            "DISM_SIGNATURE_16",
            "CTRL_17",
            "WAITUNTIL_19",
            "ORDERED_SPREAD_20",
            "SPREAD_PROCESS_21",
            "SPREAD_UNCOMP_29",
            "PERSLEDGER_REA_30",
            "PL_PROCECESS_31",
            "PL_UNCOMPLETE_39",
            "BORDREADY_40",
            "BORD_PROCESS_41",
            "BORD_UNCOMPLETE_49",
            "GL_PRODREADY_50",
            "GL_PROCESS_51",
            "GL_RUN_1_52",
            "GL_DIFFLIST_53",
            "GL_UNCOMPLETE_54",
            "READY_FOR_EXPOR_55",
            "EXPORT_IN_PROGR_56",
            "EXP_NO_ACCLINE_58",
            "EXP_UNCOMPLETE_59",
            "ALL_DONE_60",
            "ALL_DONE_MANUAL_61",
            "ONHOLD_9"
          ]
        },
        "externalReference": { "type": "string" },
        "paymentReceiver": { "$ref": "#/definitions/SimplePerson" },
        "bordereauText": { "type": "string" },
        "toBeSignedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate1": { "type": "string", "format": "date" },
        "toBeSignedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate2": { "type": "string", "format": "date" },
        "claimId": { "type": "string" },
        "claimPaymentId": { "type": "string" }
      }
    },
    "Signature": {
      "type": "object",
      "required": ["id"],
      "properties": {
        "id": { "type": "string", "minLength": 0, "maxLength": 3 },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "networkId": { "type": "string", "minLength": 0, "maxLength": 100 },
        "email": { "type": "string", "minLength": 0, "maxLength": 50 },
        "phoneNumber": { "type": "string", "minLength": 0, "maxLength": 15 },
        "claimFunction": { "type": "boolean" },
        "claimSecurityLevel": { "type": "integer", "format": "int32" },
        "team": { "type": "string" },
        "office": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "stopUse": { "type": "boolean" },
        "person": { "$ref": "#/definitions/SimplePerson" }
      }
    },
    "SearchResultClaimTransaction": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimTransaction" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "Constant": {
      "type": "object",
      "properties": {
        "value": { "type": "string" },
        "text": { "type": "string" },
        "translation": { "type": "string" },
        "hidden": { "type": "boolean" },
        "stopUse": { "type": "boolean" }
      }
    },
    "CoverageDeclarationTax": {
      "type": "object",
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 23 },
        "coverageDeclarationId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 18
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "taxCode": { "type": "string", "minLength": 0, "maxLength": 6 },
        "baseAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "manualBaseAmount": { "type": "boolean" },
        "rate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "amount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "manualAmount": { "type": "boolean" }
      }
    },
    "CoverageDeclaration": {
      "type": "object",
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 18 },
        "coverageId": { "type": "string", "minLength": 0, "maxLength": 15 },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "totalAmount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "referenceDate": { "type": "string", "format": "date" },
        "referenceName": { "type": "string", "minLength": 0, "maxLength": 50 },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "settled": { "type": "boolean" },
        "ignoreDeclarationExceedsPremium": { "type": "boolean" },
        "settledPremiumId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 18
        },
        "assuredId": { "$ref": "#/definitions/SimplePerson" },
        "assured": { "type": "string", "minLength": 0, "maxLength": 200 },
        "voyageInfo": { "type": "string", "minLength": 0, "maxLength": 200 },
        "meansOfTransportInfo": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "interestDescription": { "type": "string" },
        "claimSurveyor1": { "$ref": "#/definitions/SimplePerson" },
        "claimSurveyor2": { "$ref": "#/definitions/SimplePerson" },
        "premium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "rate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "invoiceCode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_C",
            "MONTHLY_M",
            "NO_N",
            "TRIMESTER_T",
            "YEARLY_Y"
          ]
        },
        "status": {
          "type": "string",
          "enum": ["CANCELLED_C", "READY_R", "WORK_W"]
        },
        "referenceDeclarationId": { "type": "string" },
        "copyTaxes": { "type": "boolean" },
        "copyClauses": { "type": "boolean" }
      }
    },
    "CoverageDeclarationInitParams": {
      "type": "object",
      "required": ["coverageId"],
      "properties": { "coverageId": { "type": "string" } }
    },
    "CoverageDeclarationClause": {
      "type": "object",
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 20 },
        "coverageDeclarationId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 18
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "type": {
          "type": "string",
          "enum": ["ATTACHMENT_A", "FIXED_TEXT_F", "VARIABLE_TEXT_V"]
        },
        "documentId": {
          "type": "integer",
          "format": "int64",
          "maximum": 999999999999,
          "exclusiveMaximum": false
        },
        "note": { "type": "string" },
        "textPlaceCode": { "type": "string" },
        "fixedTextTemplateId": { "type": "integer", "format": "int64" },
        "specialTextId": { "type": "string" }
      }
    },
    "SearchResultCoverageDeclaration": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/CoverageDeclaration" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "ApplicableCoverageCoshare": {
      "type": "object",
      "properties": {
        "broker": { "$ref": "#/definitions/SimplePerson" },
        "insurer": { "$ref": "#/definitions/SimplePerson" },
        "advice": {
          "type": "string",
          "enum": ["ON_BROKER_B", "NONE_N", "ON_PARTISIP_P"]
        },
        "share": { "type": "number", "format": "double" },
        "ratingCompany": { "$ref": "#/definitions/SimplePerson" },
        "ratingCode": { "type": "string" },
        "ratingCodeName": { "type": "string" },
        "ratingDate": { "type": "string", "format": "date" },
        "ratingLastUpdatedBy": { "type": "string" },
        "ratingLastUpdated": { "type": "string", "format": "date" }
      }
    },
    "Deductible": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "currency": { "type": "string" },
        "fraction": { "type": "string" },
        "amount": { "type": "integer", "format": "int64" },
        "minAmount": { "type": "integer", "format": "int64" },
        "maxAmount": { "type": "integer", "format": "int64" },
        "days": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "limitDays": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "amountCode": { "type": "string", "enum": ["INTEREST_I", "_100__T"] },
        "description": { "type": "string", "minLength": 0, "maxLength": 35 }
      }
    },
    "SearchResultCoverageInformation": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/CoverageInformation" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "CurrencyRate": {
      "type": "object",
      "required": ["currency", "exchangeRate"],
      "properties": {
        "currency": { "type": "string" },
        "exchangeRate": { "type": "number", "format": "double" }
      }
    },
    "ExchangeRates": {
      "type": "object",
      "required": ["baseCurrency", "rateDate"],
      "properties": {
        "rateDate": { "type": "string", "format": "date" },
        "baseCurrency": { "type": "string" },
        "rateType": {
          "type": "string",
          "enum": ["GENERAL_LEDGER_G", "DAILY_M", "REPORT_R", "X_TRA_X"]
        },
        "currencyRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/CurrencyRate" }
        }
      }
    },
    "ExchangeRateResult": {
      "type": "object",
      "required": ["fromCurrency", "rateDate", "toCurrency"],
      "properties": {
        "fromCurrency": { "type": "string" },
        "toCurrency": { "type": "string" },
        "rateDate": { "type": "string", "format": "date" },
        "rateType": {
          "type": "string",
          "enum": ["GENERAL_LEDGER_G", "DAILY_M", "REPORT_R", "X_TRA_X"]
        },
        "exchangeRate": { "type": "number", "format": "double" }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "currency": { "type": "string" },
        "country": { "type": "string" }
      }
    },
    "DocumentArchiveRule": {
      "type": "object",
      "properties": {
        "documentType": {
          "type": "string",
          "enum": [
            "CTRL_PAYMENTS___",
            "ACCOUNT_DOC_AD",
            "ACCOUNT_EXPORT_AE",
            "AVTALEGIRO_AG",
            "ACCOUNT_LIST_AL",
            "ATTACHMENT_AT",
            "AD_BORD_BA",
            "CLOSE_BORD_BC",
            "CORR_BORD_BK",
            "CLAIM_BORD_BL",
            "CLAIM_ADVICE_BM",
            "PROV_BORD_BP",
            "CANCEL_BS",
            "ADD_BORD_BV",
            "CANCEL_CA",
            "COVER_CREW_NOTE_CC",
            "CREW_DISCLETTE_CD",
            "COVNOTE_EXTRACT_CE",
            "CREWLIST_GEN_CG",
            "CLAIM_INVOICE_CI",
            "CLMCTRL_CK",
            "COVER_NOTE_CN",
            "CHANGE_OBJ_CO",
            "CREW_SETTLEMENT_CS",
            "DEBIT_AGENTNOTE_DA",
            "COV_DECLARATION_DE",
            "DEDUCT_INVOICE_DI",
            "INVOICE_DN",
            "IMP_ELBORD_EB",
            "E_INVOICE_EI",
            "ELREMIT_EL",
            "FREIGHT_O_CERTI_FC",
            "SINGLE_GIRO_GI",
            "GIRO_NOTE_GN",
            "INTRST_CALC_IC",
            "CREDIT_ADVICE_IG",
            "INFO_CLAIM_IL",
            "INS_INFO_IN",
            "INFO_PREMIUM_IP",
            "AGREEM_LETTER_LA",
            "BENEFIC_LETTER_LB",
            "CLAIM_LETTER_LC",
            "CLM_ING_INV_LTR_LD",
            "LETTER_LE",
            "INSURANCELETTER_LI",
            "CREW_LETTER_LM",
            "CLAIM_PAYMLETT_LP",
            "LEGAL_RECOVERY_LR",
            "CERTIFICATE_LS",
            "LETTER_EXPIRE_LX",
            "LETTER_MORTGAAG_LY",
            "LETTER_SECURITY_LZ",
            "COASTAL_OFFER_MC",
            "MAIL_CONFIRMAT_ML",
            "MARINE_OFFER_MM",
            "MAIL_EML_FILE_MP",
            "NEW_PERSON_NP",
            "OCR_IMPORT_OC",
            "DEBIT_ADVICE_OG",
            "PERIODICAL_PAY_P_",
            "PAYMENT_ADVICE_PA",
            "PRES_TO_CLIENT_PC",
            "PERSON_DOCUMENT_PE",
            "PL_REMINDER_PL",
            "PAYMENT_PM",
            "PERSON_OFFER_PO",
            "PRINT_DRAFT_PP",
            "STATEMENT_PS",
            "TECHN_STMT_PT",
            "PREM_WAIVER_PW",
            "REQ_FOR_QUOTE_QU",
            "_1REMINDER_R1",
            "_2REMINDER_R2",
            "_3REMINDER_R3",
            "_4REMINDER_R4",
            "_7REMINDER_R7",
            "_8REMINDER_R8",
            "_9REMINDER_R9",
            "CREDIT_NOTE_RC",
            "REMARK_RE",
            "MAX_NOTE_RM",
            "REMINDER_NOTE_RN",
            "ONLINE_NOTE_RO",
            "STATMENT_PREMIU_RP",
            "STATMENT_CLAIM_RQ",
            "PERSAC_LETTER_RS",
            "EXPIRE_REMINDER_RX",
            "SLIP_SL",
            "SYSTEM_MESSAGE_SM",
            "SLOW_PAYER_SP",
            "SYSTEM_SY",
            "TRIP_IMPORT_TI",
            "TAX_TFA_TT",
            "TAX_DOC_TX",
            "EXCEL_EXPORT_XL",
            "PLACEHOLDER_ZZ"
          ]
        },
        "defaultCategory": { "type": "string" }
      }
    },
    "DocumentArchiveCategory": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "translation": { "type": "string" }
      }
    },
    "DocumentArchive": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "documentNumber": { "type": "integer", "format": "int32" },
        "name": { "type": "string", "minLength": 0, "maxLength": 200 },
        "description": { "type": "string", "minLength": 0, "maxLength": 400 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 200 },
        "displayName": { "type": "string", "minLength": 0, "maxLength": 200 },
        "mimeType": { "type": "string", "minLength": 0, "maxLength": 20 },
        "mimeSubType": { "type": "string", "minLength": 0, "maxLength": 20 },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
        },
        "year": { "type": "integer", "format": "int32" },
        "viewable": { "type": "boolean" },
        "canView": { "type": "boolean" },
        "formType": {
          "type": "string",
          "enum": [
            "CTRL_PAYMENTS___",
            "ACCOUNT_DOC_AD",
            "ACCOUNT_EXPORT_AE",
            "AVTALEGIRO_AG",
            "ACCOUNT_LIST_AL",
            "ATTACHMENT_AT",
            "AD_BORD_BA",
            "CLOSE_BORD_BC",
            "CORR_BORD_BK",
            "CLAIM_BORD_BL",
            "CLAIM_ADVICE_BM",
            "PROV_BORD_BP",
            "CANCEL_BS",
            "ADD_BORD_BV",
            "CANCEL_CA",
            "COVER_CREW_NOTE_CC",
            "CREW_DISCLETTE_CD",
            "COVNOTE_EXTRACT_CE",
            "CREWLIST_GEN_CG",
            "CLAIM_INVOICE_CI",
            "CLMCTRL_CK",
            "COVER_NOTE_CN",
            "CHANGE_OBJ_CO",
            "CREW_SETTLEMENT_CS",
            "DEBIT_AGENTNOTE_DA",
            "COV_DECLARATION_DE",
            "DEDUCT_INVOICE_DI",
            "INVOICE_DN",
            "IMP_ELBORD_EB",
            "E_INVOICE_EI",
            "ELREMIT_EL",
            "FREIGHT_O_CERTI_FC",
            "SINGLE_GIRO_GI",
            "GIRO_NOTE_GN",
            "INTRST_CALC_IC",
            "CREDIT_ADVICE_IG",
            "INFO_CLAIM_IL",
            "INS_INFO_IN",
            "INFO_PREMIUM_IP",
            "AGREEM_LETTER_LA",
            "BENEFIC_LETTER_LB",
            "CLAIM_LETTER_LC",
            "CLM_ING_INV_LTR_LD",
            "LETTER_LE",
            "INSURANCELETTER_LI",
            "CREW_LETTER_LM",
            "CLAIM_PAYMLETT_LP",
            "LEGAL_RECOVERY_LR",
            "CERTIFICATE_LS",
            "LETTER_EXPIRE_LX",
            "LETTER_MORTGAAG_LY",
            "LETTER_SECURITY_LZ",
            "COASTAL_OFFER_MC",
            "MAIL_CONFIRMAT_ML",
            "MARINE_OFFER_MM",
            "MAIL_EML_FILE_MP",
            "NEW_PERSON_NP",
            "OCR_IMPORT_OC",
            "DEBIT_ADVICE_OG",
            "PERIODICAL_PAY_P_",
            "PAYMENT_ADVICE_PA",
            "PRES_TO_CLIENT_PC",
            "PERSON_DOCUMENT_PE",
            "PL_REMINDER_PL",
            "PAYMENT_PM",
            "PERSON_OFFER_PO",
            "PRINT_DRAFT_PP",
            "STATEMENT_PS",
            "TECHN_STMT_PT",
            "PREM_WAIVER_PW",
            "REQ_FOR_QUOTE_QU",
            "_1REMINDER_R1",
            "_2REMINDER_R2",
            "_3REMINDER_R3",
            "_4REMINDER_R4",
            "_7REMINDER_R7",
            "_8REMINDER_R8",
            "_9REMINDER_R9",
            "CREDIT_NOTE_RC",
            "REMARK_RE",
            "MAX_NOTE_RM",
            "REMINDER_NOTE_RN",
            "ONLINE_NOTE_RO",
            "STATMENT_PREMIU_RP",
            "STATMENT_CLAIM_RQ",
            "PERSAC_LETTER_RS",
            "EXPIRE_REMINDER_RX",
            "SLIP_SL",
            "SYSTEM_MESSAGE_SM",
            "SLOW_PAYER_SP",
            "SYSTEM_SY",
            "TRIP_IMPORT_TI",
            "TAX_TFA_TT",
            "TAX_DOC_TX",
            "EXCEL_EXPORT_XL",
            "PLACEHOLDER_ZZ"
          ]
        },
        "agreementNumber": { "type": "integer", "format": "int32" },
        "agreementName": { "type": "string" },
        "insuredObjectNumber": { "type": "integer", "format": "int32" },
        "insuredObjectName": { "type": "string" },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "category": { "type": "string" },
        "personId": { "type": "integer", "format": "int64" },
        "personName": { "type": "string" },
        "employee": { "$ref": "#/definitions/SimplePerson" },
        "approvalStatus": {
          "type": "string",
          "enum": ["APPROVED_A", "DENIED_D", "NEVER_N", "TO_BE_APPROVED_T"]
        },
        "documentSignatureStatus": {
          "type": "string",
          "enum": ["SIG_NOT_REQ_N", "REJECTED_R", "SIGNED_S", "TO_BE_SIGNED_T"]
        },
        "approved": { "type": "string", "format": "date" },
        "approvedBy": { "type": "string" },
        "electronic": { "type": "boolean" },
        "externalId": { "type": "string", "minLength": 0, "maxLength": 50 },
        "interests": { "type": "array", "items": { "type": "string" } },
        "toBeSignedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate1": { "type": "string", "format": "date" },
        "toBeSignedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedBy2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "signedDate2": { "type": "string", "format": "date" },
        "folderId": { "type": "integer", "format": "int64" }
      }
    },
    "Folder": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "name": { "type": "string", "minLength": 0, "maxLength": 200 },
        "parent": { "type": "integer", "format": "int64" },
        "entityType": {
          "type": "string",
          "enum": [
            "CLAIM",
            "INVOICE",
            "COVER_NOTE",
            "AGREEMENT",
            "POLICY",
            "PREMIUM"
          ]
        },
        "entityKey": { "type": "string", "minLength": 0, "maxLength": 40 },
        "colorCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1,
          "enum": [
            "BLACK_0",
            "GRAY_1",
            "LIGHT_GRAY_2",
            "DARK_GREY_3",
            "BLUE_B",
            "CYAN_C",
            "GREEN_G",
            "MAGENTA_M",
            "ORANGE_O",
            "PINK_P",
            "RED_R",
            "YELLOW_Y"
          ]
        }
      }
    },
    "SearchResultDocumentArchive": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentArchive" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "DocumentArchiveEmailHistoryParams": {
      "type": "object",
      "properties": {
        "documentIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int64" }
        },
        "allRecipients": { "type": "array", "items": { "type": "string" } }
      }
    },
    "EmailHistory": {
      "type": "object",
      "properties": {
        "recipient": { "type": "string" },
        "sent": { "type": "string", "format": "date-time" },
        "sentBy": { "type": "string" }
      }
    },
    "DocumentTemplate": {
      "type": "object",
      "required": [
        "fromDate",
        "headerId",
        "id",
        "language",
        "name",
        "templateFormat"
      ],
      "properties": {
        "id": { "type": "string", "minLength": 0, "maxLength": 20 },
        "headerId": { "type": "integer", "format": "int64" },
        "fromDate": { "type": "string", "format": "date" },
        "name": { "type": "string", "minLength": 0, "maxLength": 80 },
        "language": { "type": "string", "minLength": 0, "maxLength": 2 },
        "description": { "type": "string", "minLength": 0, "maxLength": 200 },
        "templateFormat": {
          "type": "string",
          "enum": ["HTML_1", "TEXT_2", "FREEMARKER_3"]
        }
      }
    },
    "ProducedDocument": {
      "type": "object",
      "required": ["entityKey", "template"],
      "properties": {
        "entityKey": { "type": "string" },
        "template": { "$ref": "#/definitions/DocumentTemplate" },
        "electronic": { "type": "boolean" }
      }
    },
    "DocumentEngineInitParam": {
      "type": "object",
      "required": ["entityKey", "templateId"],
      "properties": {
        "entityKey": { "type": "string" },
        "templateId": { "type": "string" }
      }
    },
    "DocumentEngineClaimPaymentInitParam": {
      "type": "object",
      "required": ["entityKey", "templateId"],
      "properties": {
        "entityKey": { "type": "string" },
        "templateId": { "type": "string" },
        "customerIdentificationNumber": { "type": "string" },
        "claimPayments": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPayment" }
        }
      }
    },
    "DocumentEngineIngoingInvoiceInitParam": {
      "type": "object",
      "required": ["entityKey", "templateId"],
      "properties": {
        "entityKey": { "type": "string" },
        "templateId": { "type": "string" },
        "ingoingInvoiceIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "claimPayments": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClaimPayment" }
        }
      }
    },
    "DocumentNotificationGroup": {
      "type": "object",
      "required": ["description"],
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "description": { "type": "string", "minLength": 0, "maxLength": 40 },
        "userNotificationTypeId": { "type": "integer", "format": "int32" },
        "formTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CTRL_PAYMENTS___",
              "ACCOUNT_DOC_AD",
              "ACCOUNT_EXPORT_AE",
              "AVTALEGIRO_AG",
              "ACCOUNT_LIST_AL",
              "ATTACHMENT_AT",
              "AD_BORD_BA",
              "CLOSE_BORD_BC",
              "CORR_BORD_BK",
              "CLAIM_BORD_BL",
              "CLAIM_ADVICE_BM",
              "PROV_BORD_BP",
              "CANCEL_BS",
              "ADD_BORD_BV",
              "CANCEL_CA",
              "COVER_CREW_NOTE_CC",
              "CREW_DISCLETTE_CD",
              "COVNOTE_EXTRACT_CE",
              "CREWLIST_GEN_CG",
              "CLAIM_INVOICE_CI",
              "CLMCTRL_CK",
              "COVER_NOTE_CN",
              "CHANGE_OBJ_CO",
              "CREW_SETTLEMENT_CS",
              "DEBIT_AGENTNOTE_DA",
              "COV_DECLARATION_DE",
              "DEDUCT_INVOICE_DI",
              "INVOICE_DN",
              "IMP_ELBORD_EB",
              "E_INVOICE_EI",
              "ELREMIT_EL",
              "FREIGHT_O_CERTI_FC",
              "SINGLE_GIRO_GI",
              "GIRO_NOTE_GN",
              "INTRST_CALC_IC",
              "CREDIT_ADVICE_IG",
              "INFO_CLAIM_IL",
              "INS_INFO_IN",
              "INFO_PREMIUM_IP",
              "AGREEM_LETTER_LA",
              "BENEFIC_LETTER_LB",
              "CLAIM_LETTER_LC",
              "CLM_ING_INV_LTR_LD",
              "LETTER_LE",
              "INSURANCELETTER_LI",
              "CREW_LETTER_LM",
              "CLAIM_PAYMLETT_LP",
              "LEGAL_RECOVERY_LR",
              "CERTIFICATE_LS",
              "LETTER_EXPIRE_LX",
              "LETTER_MORTGAAG_LY",
              "LETTER_SECURITY_LZ",
              "COASTAL_OFFER_MC",
              "MAIL_CONFIRMAT_ML",
              "MARINE_OFFER_MM",
              "MAIL_EML_FILE_MP",
              "NEW_PERSON_NP",
              "OCR_IMPORT_OC",
              "DEBIT_ADVICE_OG",
              "PERIODICAL_PAY_P_",
              "PAYMENT_ADVICE_PA",
              "PRES_TO_CLIENT_PC",
              "PERSON_DOCUMENT_PE",
              "PL_REMINDER_PL",
              "PAYMENT_PM",
              "PERSON_OFFER_PO",
              "PRINT_DRAFT_PP",
              "STATEMENT_PS",
              "TECHN_STMT_PT",
              "PREM_WAIVER_PW",
              "REQ_FOR_QUOTE_QU",
              "_1REMINDER_R1",
              "_2REMINDER_R2",
              "_3REMINDER_R3",
              "_4REMINDER_R4",
              "_7REMINDER_R7",
              "_8REMINDER_R8",
              "_9REMINDER_R9",
              "CREDIT_NOTE_RC",
              "REMARK_RE",
              "MAX_NOTE_RM",
              "REMINDER_NOTE_RN",
              "ONLINE_NOTE_RO",
              "STATMENT_PREMIU_RP",
              "STATMENT_CLAIM_RQ",
              "PERSAC_LETTER_RS",
              "EXPIRE_REMINDER_RX",
              "SLIP_SL",
              "SYSTEM_MESSAGE_SM",
              "SLOW_PAYER_SP",
              "SYSTEM_SY",
              "TRIP_IMPORT_TI",
              "TAX_TFA_TT",
              "TAX_DOC_TX",
              "EXCEL_EXPORT_XL",
              "PLACEHOLDER_ZZ"
            ]
          }
        }
      }
    },
    "TextPlaceCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "validOnCondSet": { "type": "boolean" },
        "multipleAllowed": { "type": "boolean" },
        "note": { "type": "string" }
      }
    },
    "DocumentTemplateWithText": {
      "type": "object",
      "required": [
        "fromDate",
        "headerId",
        "id",
        "language",
        "name",
        "templateFormat"
      ],
      "properties": {
        "id": { "type": "string", "minLength": 0, "maxLength": 20 },
        "headerId": { "type": "integer", "format": "int64" },
        "fromDate": { "type": "string", "format": "date" },
        "name": { "type": "string", "minLength": 0, "maxLength": 80 },
        "language": { "type": "string", "minLength": 0, "maxLength": 2 },
        "description": { "type": "string", "minLength": 0, "maxLength": 200 },
        "templateFormat": {
          "type": "string",
          "enum": ["HTML_1", "TEXT_2", "FREEMARKER_3"]
        },
        "text": { "type": "string" }
      }
    },
    "FixedTextHeader": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "SearchResultElectronicRemittance": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ElectronicRemittance" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "ParisEmail": {
      "type": "object",
      "properties": {
        "from": { "type": "string" },
        "to": { "type": "string" },
        "cc": { "type": "string" },
        "bcc": { "type": "string" },
        "subject": { "type": "string" },
        "body": { "type": "string" },
        "documentIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int64" }
        }
      }
    },
    "EmailInitParams": {
      "type": "object",
      "properties": {
        "documentIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int64" }
        },
        "templateId": { "type": "string" }
      }
    },
    "FleetMarine": {
      "type": "object",
      "required": ["status"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "clientAdvocate": { "type": "string", "minLength": 0, "maxLength": 3 },
        "contactPerson": { "$ref": "#/definitions/SimplePerson" },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "DECLINED_D", "EXPIRED_E", "PROSPECT_P"]
        },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "statusLastUpdated": { "type": "string", "format": "date" },
        "statusLastUpdatedBy": { "type": "string" }
      }
    },
    "SearchResultFleetMarine": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/FleetMarine" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "InsuredObject": {
      "type": "object",
      "required": ["endDate", "name", "startDate", "type"],
      "properties": {
        "objectNumber": { "type": "integer", "format": "int32" },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "imoNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999999,
          "exclusiveMaximum": false
        },
        "type": {
          "type": "string",
          "enum": [
            "VESSEL_1",
            "RIG_OBJECT_10",
            "FLOATING_INSTAL_12",
            "LIABILITY_13",
            "AQUAOBJECT_14",
            "FISH_15",
            "AQUA_CARGO_16",
            "COASTAL_2",
            "CARGO_OBJECT_3",
            "ENERGY_PHYSOBJ_4",
            "ENERGY_PACKOBJ_5",
            "PROPERTY_6",
            "VEHICLE_FLEET_60",
            "VEHICLE_61",
            "MOTORCYKLE_62",
            "MACHINE_63",
            "TRAILER_64",
            "PERSON_GROUP_65",
            "PERSON_66",
            "AVIATION_OBJECT_7",
            "BUILDING_70",
            "CABIN_71",
            "ARBEIDSMASKIN_73",
            "INVENTORY_74",
            "LEISURE_BOAT_75",
            "VALUABLES_76",
            "ANIMAL_77",
            "PLACE_FLEET_78",
            "PLACE_8",
            "CUMULE_9"
          ]
        },
        "mostRecentOriginalInsured": { "$ref": "#/definitions/SimplePerson" },
        "externalReference": { "type": "string" },
        "version": { "type": "integer", "format": "int32" },
        "versionId": { "type": "string" },
        "vesselType": { "type": "string", "minLength": 0, "maxLength": 3 },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "exName": { "type": "string", "minLength": 0, "maxLength": 40 },
        "identification": { "type": "string", "minLength": 0, "maxLength": 9 },
        "manager": { "$ref": "#/definitions/SimplePerson" },
        "owner": { "$ref": "#/definitions/SimplePerson" },
        "originalBuiltYear": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "originalBuiltMonth": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "grossTonnage": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "deadweightTonnage": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "rebuiltYear": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "rebuiltMonth": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "material": { "type": "string", "minLength": 0, "maxLength": 1 },
        "callSignal": { "type": "string", "minLength": 0, "maxLength": 10 },
        "length": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "breadth": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "depth": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "unit": {
          "type": "string",
          "enum": ["FEET_F", "GRT_G", "METER_M", "LENBR_M_T", "UNSPECIFIED_Z"]
        },
        "classification": { "type": "string", "minLength": 0, "maxLength": 3 },
        "tradeAreaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "flagAreaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WAITING_W"]
        },
        "formulaTonnage": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "cubicMetres": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "classificationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "engineType": { "type": "string", "minLength": 0, "maxLength": 2 },
        "manufacturer": { "type": "string", "minLength": 0, "maxLength": 3 },
        "portOfRegister": { "type": "string", "minLength": 0, "maxLength": 30 },
        "managerAreaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "officersAreaCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "crewAreaCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "fleetMarine": { "type": "integer", "format": "int32" },
        "vesselCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "shipyard": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "usageCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "imoVessel": { "type": "boolean" },
        "engineDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        },
        "engineHorsePower": {
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        },
        "engineKwh": {
          "type": "integer",
          "format": "int32",
          "maximum": 99999999,
          "exclusiveMaximum": false
        },
        "engineConstructionYear": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "enginePropulsion": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "engineSpeedLimit": {
          "type": "number",
          "format": "double",
          "maximum": 999.9,
          "exclusiveMaximum": false
        },
        "hiNumber": { "type": "string", "minLength": 0, "maxLength": 20 },
        "textKey": { "type": "string", "minLength": 0, "maxLength": 8 },
        "internalReference": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999999,
          "exclusiveMaximum": false
        },
        "sourceReference": { "type": "string", "minLength": 0, "maxLength": 7 },
        "majorCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "address1": { "type": "string", "minLength": 0, "maxLength": 40 },
        "address2": { "type": "string", "minLength": 0, "maxLength": 40 },
        "city": { "type": "string", "minLength": 0, "maxLength": 40 },
        "externalNote": { "type": "string", "minLength": 0, "maxLength": 200 },
        "internalNote": { "type": "string", "minLength": 0, "maxLength": 2000 },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "minorCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "hullType": { "type": "string", "minLength": 0, "maxLength": 3 },
        "shipyardCountry": { "type": "string", "minLength": 0, "maxLength": 3 },
        "classification2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "classificationCode2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "tradeLocationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 6
        },
        "location": { "type": "string", "minLength": 0, "maxLength": 10 },
        "externalRegOXId": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999999,
          "exclusiveMaximum": false
        },
        "coordinateX": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "coordinateY": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "chassisNo": { "type": "string", "minLength": 0, "maxLength": 40 },
        "numberOfOfficers": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "numberOfCrew": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "numberOfPassengers": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "numberOfOther": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999,
          "exclusiveMaximum": false
        },
        "vesselTypeDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4
        },
        "classificationSociety": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "classificationSocietyDateOfCertification": {
          "type": "string",
          "format": "date"
        },
        "businessArea": {
          "type": "integer",
          "format": "int64",
          "maximum": 99999999999,
          "exclusiveMaximum": false
        },
        "conditionSurveyDate": { "type": "string", "format": "date" },
        "conditionSurveyText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 70
        },
        "portOfRegistryCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 6
        },
        "meansOfTransportation": {
          "type": "string",
          "minLength": 0,
          "maxLength": 70
        },
        "iceClass": { "type": "string", "minLength": 0, "maxLength": 6 },
        "trackIt": { "type": "string", "minLength": 0, "maxLength": 1 },
        "mmsiNumber": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999,
          "exclusiveMaximum": false
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "insuranceSums": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "premiumsRates": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "territory": { "type": "string", "minLength": 0, "maxLength": 4000 }
      }
    },
    "FleetMarineRole": {
      "type": "object",
      "required": ["roleTypeId"],
      "properties": {
        "person": { "$ref": "#/definitions/SimplePerson" },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 25 },
        "roleTypeId": { "type": "string", "minLength": 0, "maxLength": 6 }
      }
    },
    "Field": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40,
          "pattern": "^[A-Za-z0-9-_]+$"
        },
        "label": { "type": "string", "minLength": 0, "maxLength": 300 },
        "type": {
          "type": "string",
          "enum": [
            "BOOLEAN_BO",
            "DATE_DA",
            "DECIMAL_DE",
            "FILE_FI",
            "INTEGER_IN",
            "OPTION_OP",
            "TEXT_TE"
          ]
        },
        "required": { "type": "boolean" },
        "defaultValue": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "securityLevel": { "type": "integer", "format": "int32" },
        "archiveCategory": { "type": "string" },
        "options": {
          "type": "array",
          "items": { "$ref": "#/definitions/FieldOption" }
        }
      }
    },
    "FieldGroup": {
      "type": "object",
      "properties": {
        "label": { "type": "string", "minLength": 0, "maxLength": 300 },
        "minOccurs": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "repeatable": { "type": "boolean" },
        "fields": {
          "type": "array",
          "items": { "$ref": "#/definitions/Field" }
        }
      }
    },
    "FieldOption": {
      "type": "object",
      "properties": {
        "value": { "type": "string", "minLength": 0, "maxLength": 20 },
        "label": { "type": "string", "minLength": 0, "maxLength": 20 }
      }
    },
    "Form": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40,
          "pattern": "^[A-Za-z0-9-_]+$"
        },
        "label": { "type": "string", "minLength": 0, "maxLength": 300 },
        "type": {
          "type": "string",
          "enum": [
            "CLAIM_CL",
            "COVERAGE_CO",
            "MEMBER_ME",
            "OBJECT_OB",
            "ONBOARDING_ON",
            "OTHER_OT",
            "PERSON_PE"
          ]
        },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "fieldGroups": {
          "type": "array",
          "items": { "$ref": "#/definitions/FieldGroup" }
        }
      }
    },
    "FormSubmission": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "formName": { "type": "string" },
        "formLabel": { "type": "string" },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "codeValue": { "type": "string", "minLength": 0, "maxLength": 30 },
        "internalNote": { "type": "string" },
        "status": {
          "type": "string",
          "enum": ["DRAFT_D", "PROCESSED_P", "SUBMITTED_S"]
        },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "createdByUser": { "$ref": "#/definitions/SimpleUser" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "lastUpdatedByUser": { "$ref": "#/definitions/SimpleUser" }
      }
    },
    "CommandInfo": {
      "type": "object",
      "properties": {
        "commandClass": { "type": "string" },
        "commandName": { "type": "string" }
      }
    },
    "ContentDisposition": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "parameters": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "filename": { "type": "string" }
      }
    },
    "DataFlavor": {
      "type": "object",
      "properties": {
        "mimeType": { "type": "string" },
        "humanPresentableName": { "type": "string" },
        "subType": { "type": "string" },
        "primaryType": { "type": "string" },
        "mimeTypeSerializedObject": { "type": "boolean" },
        "defaultRepresentationClassAsString": { "type": "string" },
        "representationClassInputStream": { "type": "boolean" },
        "representationClassReader": { "type": "boolean" },
        "representationClassCharBuffer": { "type": "boolean" },
        "representationClassByteBuffer": { "type": "boolean" },
        "representationClassSerializable": { "type": "boolean" },
        "representationClassRemote": { "type": "boolean" },
        "flavorSerializedObjectType": { "type": "boolean" },
        "flavorRemoteObjectType": { "type": "boolean" },
        "flavorJavaFileListType": { "type": "boolean" },
        "flavorTextType": { "type": "boolean" }
      }
    },
    "DataHandler": {
      "type": "object",
      "properties": {
        "dataSource": { "$ref": "#/definitions/DataSource" },
        "name": { "type": "string" },
        "content": { "type": "object" },
        "inputStream": { "$ref": "#/definitions/InputStream" },
        "contentType": { "type": "string" },
        "outputStream": { "$ref": "#/definitions/OutputStream" },
        "preferredCommands": {
          "type": "array",
          "items": { "$ref": "#/definitions/CommandInfo" }
        },
        "transferDataFlavors": {
          "type": "array",
          "items": { "$ref": "#/definitions/DataFlavor" }
        },
        "allCommands": {
          "type": "array",
          "items": { "$ref": "#/definitions/CommandInfo" }
        }
      }
    },
    "DataSource": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "inputStream": { "$ref": "#/definitions/InputStream" },
        "contentType": { "type": "string" },
        "outputStream": { "$ref": "#/definitions/OutputStream" }
      }
    },
    "InputStream": { "type": "object" },
    "MediaType": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "subtype": { "type": "string" },
        "parameters": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "wildcardType": { "type": "boolean" },
        "wildcardSubtype": { "type": "boolean" }
      }
    },
    "MultipartBody": {
      "type": "object",
      "properties": {
        "type": { "$ref": "#/definitions/MediaType" },
        "allAttachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "childAttachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "rootAttachment": { "$ref": "#/definitions/Attachment" }
      }
    },
    "OutputStream": { "type": "object" },
    "SearchResultFormSubmission": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/FormSubmission" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "FieldSubmission": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "value": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "attachment": { "$ref": "#/definitions/Attachment" }
      }
    },
    "SearchResultTaxRegion": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaxRegion" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "TaxRegion": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "WorkPlaceType": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "PostalCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "isoCountry": { "type": "string", "minLength": 0, "maxLength": 3 },
        "taxNo": { "type": "string", "minLength": 0, "maxLength": 4 }
      }
    },
    "SearchResultPostalCode": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/PostalCode" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "SearchResultUNLocation": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/UNLocation" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "AreaCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "iso2Country": { "type": "string" },
        "sanctions": { "type": "boolean" },
        "sanctionType": {
          "type": "string",
          "enum": ["NONE_N", "STOP_TREATMENT_S", "WARNING_W"]
        },
        "sanctionDescription": { "type": "string" }
      }
    },
    "GlobalSearchResult": {
      "type": "object",
      "properties": {
        "persons": { "$ref": "#/definitions/SearchResultSimplePerson" },
        "insuredObjects": {
          "$ref": "#/definitions/SearchResultSimpleInsuredObject"
        }
      }
    },
    "SearchResultSimpleInsuredObject": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/SimpleInsuredObject" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "SearchResultSimplePerson": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/SimplePerson" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "TaxCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "taxType": { "type": "string", "enum": ["PERCENTAGE__", "AMOUNT_A"] }
      }
    },
    "PremiumCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "translation": { "type": "string" }
      }
    },
    "RateMarket": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Rebate": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "percentage": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "level": {
          "type": "integer",
          "format": "int32",
          "maximum": 9,
          "exclusiveMaximum": false
        }
      }
    },
    "DeductibleCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "translation": { "type": "string" },
        "mandatoryAmount": { "type": "boolean" },
        "defaultAmount": { "type": "integer", "format": "int64" },
        "mandatoryDays": { "type": "boolean" },
        "defaultDays": { "type": "number", "format": "double" },
        "mandatoryMinimum": { "type": "boolean" },
        "defaultMinimum": { "type": "integer", "format": "int64" },
        "mandatoryMaximum": { "type": "boolean" },
        "defaultMaximum": { "type": "integer", "format": "int64" },
        "mandatoryPercentage": { "type": "boolean" },
        "defaultPercentage": { "type": "number", "format": "double" },
        "defaultCurrency": { "type": "string" }
      }
    },
    "NonmarineObjectType": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "translation": { "type": "string" }
      }
    },
    "HullType": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Manufacturer": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "MajorCode": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BusinessArea": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int64" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "TrackItCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "NonmarineModel": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "TransportType": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "NonmarineMake": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "VesselType": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" },
        "vessel": { "type": "boolean" }
      }
    },
    "UsageCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "CargoType": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "IceCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "VesselCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "EngineType": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "MinorCode": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Shipyard": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "MaterialType": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Classification": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "NonmarineSubModel": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "EnginePropulsion": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "ObjectDetailCode": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "InsuredObjectInitParams": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "VESSEL_1",
            "RIG_OBJECT_10",
            "FLOATING_INSTAL_12",
            "LIABILITY_13",
            "AQUAOBJECT_14",
            "FISH_15",
            "AQUA_CARGO_16",
            "COASTAL_2",
            "CARGO_OBJECT_3",
            "ENERGY_PHYSOBJ_4",
            "ENERGY_PACKOBJ_5",
            "PROPERTY_6",
            "VEHICLE_FLEET_60",
            "VEHICLE_61",
            "MOTORCYKLE_62",
            "MACHINE_63",
            "TRAILER_64",
            "PERSON_GROUP_65",
            "PERSON_66",
            "AVIATION_OBJECT_7",
            "BUILDING_70",
            "CABIN_71",
            "ARBEIDSMASKIN_73",
            "INVENTORY_74",
            "LEISURE_BOAT_75",
            "VALUABLES_76",
            "ANIMAL_77",
            "PLACE_FLEET_78",
            "PLACE_8",
            "CUMULE_9"
          ]
        }
      }
    },
    "SearchResultInsuredObject": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/InsuredObject" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "InsuredObjectDetails": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 11 },
        "code": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 35 },
        "startDate": { "type": "string", "format": "date" },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "totalAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WORK_W"]
        }
      }
    },
    "InsuredObjectStatistic": {
      "type": "object",
      "properties": {
        "objectNumber": { "type": "integer", "format": "int32" },
        "establishedInsurances": { "type": "integer", "format": "int32" },
        "offerInsurances": { "type": "integer", "format": "int32" },
        "claims": { "type": "integer", "format": "int32" },
        "objectDetails": { "type": "integer", "format": "int32" },
        "yearStatistics": {
          "type": "array",
          "items": { "$ref": "#/definitions/YearStatistic" }
        }
      }
    },
    "YearStatistic": {
      "type": "object",
      "properties": {
        "year": { "type": "integer", "format": "int32" },
        "ourShareCalculatedGrossPremium": {
          "type": "number",
          "format": "double"
        },
        "ourShareCalculatedLowGrossPremium": {
          "type": "number",
          "format": "double"
        },
        "ourShareCalculatedNetPremium": {
          "type": "number",
          "format": "double"
        },
        "ourShareClosedGrossPremium": { "type": "number", "format": "double" },
        "ourShareClosedLowGrossPremium": {
          "type": "number",
          "format": "double"
        },
        "ourShareClosedNetPremium": { "type": "number", "format": "double" },
        "retainedCalculatedGrossPremium": {
          "type": "number",
          "format": "double"
        },
        "retainedCalculatedLowGrossPremium": {
          "type": "number",
          "format": "double"
        },
        "retainedCalculatedNetPremium": {
          "type": "number",
          "format": "double"
        },
        "retainedClosedGrossPremium": { "type": "number", "format": "double" },
        "retainedClosedLowGrossPremium": {
          "type": "number",
          "format": "double"
        },
        "retainedClosedNetPremium": { "type": "number", "format": "double" },
        "premiumClosedNetReceivedShare": {
          "type": "number",
          "format": "double"
        },
        "ourShareClaimReserve": { "type": "number", "format": "double" },
        "ourShareClaimSettled": { "type": "number", "format": "double" },
        "retainedClaimReserve": { "type": "number", "format": "double" },
        "retainedClaimSettled": { "type": "number", "format": "double" }
      }
    },
    "InsuredObjectRole": {
      "type": "object",
      "required": ["roleTypeId"],
      "properties": {
        "person": { "$ref": "#/definitions/SimplePerson" },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 25 },
        "roleTypeId": { "type": "string", "minLength": 0, "maxLength": 6 }
      }
    },
    "InsuredObjectFleet": {
      "type": "object",
      "required": ["insuredObject"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 14 },
        "insuredObject": { "$ref": "#/definitions/InsuredObject" },
        "buildingValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "equipmentValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "stockValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "businessInterruptionValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "totalInsuredValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "lastSubmitted": { "type": "string", "format": "date" }
      }
    },
    "SearchResultInsuredObjectFleet": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/InsuredObjectFleet" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "InsuredObjectInitVersionParams": {
      "type": "object",
      "required": ["startDate"],
      "properties": { "startDate": { "type": "string", "format": "date" } }
    },
    "Mortgagee": {
      "type": "object",
      "required": ["amount", "mortgagee", "priorityNumber"],
      "properties": {
        "id": { "type": "string" },
        "mortgagee": { "$ref": "#/definitions/SimplePerson" },
        "priorityNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "priorityText": { "type": "string", "minLength": 0, "maxLength": 12 },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "amount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "status": { "type": "string", "enum": ["ACTIVE_A", "CANCELLED_C"] },
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" }
      }
    },
    "ImoNumberValidation": {
      "type": "object",
      "properties": {
        "valid": { "type": "boolean" },
        "existing": { "type": "boolean" }
      }
    },
    "Message": {
      "type": "object",
      "required": ["note"],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "messageType": {
          "type": "string",
          "enum": [
            "AGREEMENT_A",
            "OBJECT_B",
            "CLOSING_C",
            "COVERAGE_D",
            "SECTION_E",
            "DOCUMENT_F",
            "GENERAL_G",
            "BUDGET_H",
            "OPPONENTS_I",
            "INSURANCE_J",
            "EL_PAYMENT_L",
            "OFFER_MARINE_M",
            "OFFER_O",
            "PERSON_P",
            "PERSON_RESP_Q",
            "PREMIUM_R",
            "CLAIM_S",
            "ACCIDENT_T",
            "EMPLOYEE_W",
            "COMMUNICATION_X",
            "FORM_SUBMISSION_Y"
          ]
        },
        "codeValue": { "type": "string", "minLength": 0, "maxLength": 30 },
        "note": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "created": { "type": "string", "format": "date-time" },
        "parentId": { "type": "integer", "format": "int64" },
        "subject": { "type": "string", "minLength": 0, "maxLength": 35 },
        "status": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "HISTORY_H", "TREATED_T"]
        },
        "createdBy": { "type": "string" },
        "createdByUser": { "$ref": "#/definitions/SimpleUser" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "responses": {
          "type": "array",
          "items": { "$ref": "#/definitions/Message" }
        },
        "hasAttachments": { "type": "boolean" },
        "attachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "read": { "type": "boolean" }
      }
    },
    "SearchResultMessage": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Message" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "Note": {
      "type": "object",
      "required": ["messageType", "note"],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "messageType": {
          "type": "string",
          "enum": [
            "AGREEMENT_A",
            "OBJECT_B",
            "CLOSING_C",
            "COVERAGE_D",
            "SECTION_E",
            "DOCUMENT_F",
            "GENERAL_G",
            "BUDGET_H",
            "OPPONENTS_I",
            "INSURANCE_J",
            "EL_PAYMENT_L",
            "OFFER_MARINE_M",
            "OFFER_O",
            "PERSON_P",
            "PERSON_RESP_Q",
            "PREMIUM_R",
            "CLAIM_S",
            "ACCIDENT_T",
            "EMPLOYEE_W",
            "COMMUNICATION_X",
            "FORM_SUBMISSION_Y"
          ]
        },
        "codeValue": { "type": "string", "minLength": 0, "maxLength": 30 },
        "note": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "created": { "type": "string", "format": "date-time" },
        "type": {
          "type": "string",
          "enum": [
            "EXT_CHANGE_REQ_ECR",
            "ESTIMATE_EST",
            "FAX_FAX",
            "MAIL_MIL",
            "MEETING_MTN",
            "PHONE_PHN",
            "VISIT_VIS",
            "WEB_WEB",
            "UNSPEC_ZZZ"
          ]
        },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "attachmentsCount": { "type": "integer", "format": "int32" },
        "history": { "$ref": "#/definitions/History" }
      }
    },
    "SearchResultNote": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Note" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "Notification": {
      "type": "object",
      "required": ["note"],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "messageType": {
          "type": "string",
          "enum": [
            "AGREEMENT_A",
            "OBJECT_B",
            "CLOSING_C",
            "COVERAGE_D",
            "SECTION_E",
            "DOCUMENT_F",
            "GENERAL_G",
            "BUDGET_H",
            "OPPONENTS_I",
            "INSURANCE_J",
            "EL_PAYMENT_L",
            "OFFER_MARINE_M",
            "OFFER_O",
            "PERSON_P",
            "PERSON_RESP_Q",
            "PREMIUM_R",
            "CLAIM_S",
            "ACCIDENT_T",
            "EMPLOYEE_W",
            "COMMUNICATION_X",
            "FORM_SUBMISSION_Y"
          ]
        },
        "codeValue": { "type": "string", "minLength": 0, "maxLength": 30 },
        "note": { "type": "string", "minLength": 0, "maxLength": 4000 },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "created": { "type": "string", "format": "date-time" },
        "fromSignature": { "type": "string" },
        "toSignature": { "type": "string" },
        "read": { "type": "boolean" },
        "relatesToNoteId": { "type": "integer", "format": "int64" },
        "relatesToActivityId": { "type": "integer", "format": "int64" }
      }
    },
    "SearchResultNotification": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Notification" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "ExportToParisParams": {
      "type": "object",
      "properties": {
        "postOperation": {
          "type": "string",
          "enum": ["None", "InvoiceDraft", "EstablishAndDocuments"]
        },
        "lostCode": { "type": "string", "minLength": 0, "maxLength": 2 },
        "lostText": { "type": "string", "minLength": 0, "maxLength": 35 }
      }
    },
    "SearchResultOfferMarineAgreement": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineAgreement" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "OfferMarineAgreementInitParam": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MARINE_1",
            "AQUACULTURE_10",
            "PI_11",
            "ENERGY_2",
            "OIL_COMPANY_21",
            "CARGO_3",
            "PROPERTY_4",
            "AVIATION_5",
            "PRIVATE_50",
            "WAR_6",
            "NON_MARINE_7",
            "COASTAL_MARINE_8",
            "BUILDERS_RISK_9"
          ]
        }
      }
    },
    "CopyOfferParams": {
      "type": "object",
      "required": ["toYear"],
      "properties": {
        "agreementNumber": { "type": "integer", "format": "int32" },
        "toYear": { "type": "integer", "format": "int32" }
      }
    },
    "OfferMarineInsurerPresentation": {
      "type": "object",
      "required": ["billing"],
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "status": {
          "type": "string",
          "enum": [
            "COMPLETED_C",
            "ERROR_E",
            "ORDERED_O",
            "PROCESSING_P",
            "CANCELLED_X"
          ]
        },
        "statusMessage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "attachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "billing": { "$ref": "#/definitions/SimplePerson" },
        "statisticsRateMarkets": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineStatisticsRateMarket" }
        },
        "statisticsPlacements": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineStatisticsPlacement" }
        }
      }
    },
    "OfferMarineStatisticsPlacement": {
      "type": "object",
      "properties": {
        "year": { "type": "integer", "format": "int32" },
        "insurer": { "$ref": "#/definitions/SimplePerson" }
      }
    },
    "OfferMarineStatisticsRateMarket": {
      "type": "object",
      "properties": {
        "year": { "type": "integer", "format": "int32" },
        "rateMarket": { "type": "string" }
      }
    },
    "OfferMarineClientPresentation": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "status": {
          "type": "string",
          "enum": [
            "COMPLETED_C",
            "ERROR_E",
            "ORDERED_O",
            "PROCESSING_P",
            "CANCELLED_X"
          ]
        },
        "statusMessage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "attachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        }
      }
    },
    "CreateOfferMarineClientPresentationParams": {
      "type": "object",
      "properties": {
        "note": { "type": "string", "minLength": 0, "maxLength": 200 }
      }
    },
    "CreateOfferMarineInsurerPresentationParams": {
      "type": "object",
      "required": ["to"],
      "properties": {
        "to": {
          "type": "array",
          "items": { "$ref": "#/definitions/SimplePerson" }
        },
        "statisticsPlacements": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineStatisticsPlacement" }
        },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 }
      }
    },
    "OfferMarineObjectConnectParams": {
      "type": "object",
      "required": ["agreementId"],
      "properties": {
        "agreementId": { "type": "string" },
        "offerMarineAgreementId": { "type": "string" },
        "objectNumbers": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        }
      }
    },
    "OfferMarineObject": {
      "type": "object",
      "required": ["agreementId"],
      "properties": {
        "agreementId": { "type": "string" },
        "id": { "type": "string" },
        "object": { "$ref": "#/definitions/InsuredObject" }
      }
    },
    "OfferMarineSection": {
      "type": "object",
      "required": [
        "endDate",
        "interest",
        "offerMarineAgreementId",
        "ourShare",
        "payer",
        "premiumDays",
        "startDate",
        "timeZone"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "offerMarineAgreementId": { "type": "string" },
        "id": { "type": "string" },
        "number": { "type": "integer", "format": "int32" },
        "interest": { "type": "string" },
        "conditionCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "payer": { "$ref": "#/definitions/SimplePerson" },
        "claimLeader": { "$ref": "#/definitions/SimplePerson" },
        "businessType": { "type": "string", "enum": ["DIR_1", "CO_2", "RE_3"] },
        "ourShare": {
          "type": "number",
          "format": "double",
          "maximum": 999.999999,
          "exclusiveMaximum": false
        },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "timeZone": { "type": "string" },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "endHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "premiumDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.9999999,
          "exclusiveMaximum": false
        },
        "numberOfInstallments": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "installmentCalculationType": {
          "type": "string",
          "enum": ["NORMAL_0", "_9125D_1", "EXACT_DAYS_2"]
        },
        "installmentPeriodType": {
          "type": "string",
          "enum": ["PER_YEAR_0", "PER_AGRPERIOD_1", "PER_PREM_PERIOD_2"]
        },
        "sourceDiscount": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "agentProvision": {
          "type": "number",
          "format": "double",
          "maximum": 99.9999999,
          "exclusiveMaximum": false
        },
        "sumFirmOrder": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "operations": { "$ref": "#/definitions/OfferMarineSectionOperations" },
        "ready": { "type": "boolean" },
        "accepted": { "type": "boolean" },
        "objectTypeCode": { "type": "string", "minLength": 0, "maxLength": 4 }
      }
    },
    "OfferMarineSectionOperations": {
      "type": "object",
      "properties": {
        "canModify": { "type": "boolean" },
        "canDelete": { "type": "boolean" },
        "canCreateInsurances": { "type": "boolean" },
        "canDeleteInsurances": { "type": "boolean" }
      }
    },
    "OfferMarineSectionInitParams": {
      "type": "object",
      "required": ["offerMarineAgreementId"],
      "properties": { "offerMarineAgreementId": { "type": "string" } }
    },
    "OfferMarineDeductibleSet": {
      "type": "object",
      "required": ["currency", "offerMarineSectionId"],
      "properties": {
        "offerMarineSectionId": { "type": "string" },
        "id": { "type": "string" },
        "number": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 15 },
        "note": { "type": "string", "minLength": 0, "maxLength": 250 },
        "currency": { "type": "string" },
        "basicDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "addMachDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "collisionDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "iceDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "dailyDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductionDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "addMachDeductionDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "daysPerClaim": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "daysInAll": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "deductibleCode1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "deductibleCode2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "deductibleCode1Amount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductibleCode2Amount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "stopUse": { "type": "boolean" },
        "values": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineDeductibleSetValues" }
        },
        "lines": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineDeductibleSetLines" }
        }
      }
    },
    "OfferMarineDeductibleSetLines": {
      "type": "object",
      "required": ["deductibleCode", "deductibleCurrency"],
      "properties": {
        "id": { "type": "string", "minLength": 0, "maxLength": 26 },
        "deductibleSetId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 23
        },
        "deductibleCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "deductibleBreak": { "type": "string", "minLength": 0, "maxLength": 6 },
        "deductibleCurrency": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "deductibleAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductibleMinAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductibleMaxAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "days": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "textKey": { "type": "string", "minLength": 0, "maxLength": 8 },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "percentage": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "percentageType": {
          "type": "string",
          "enum": ["PERCENTAGE__", "FRACTION_F", "PRO_MILLE_M", "UNKNOWN_Z"]
        }
      }
    },
    "OfferMarineDeductibleSetValueLines": {
      "type": "object",
      "required": ["deductibleCode", "deductibleCurrency"],
      "properties": {
        "id": { "type": "string", "minLength": 0, "maxLength": 45 },
        "deductibleSetValuesId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 42
        },
        "deductibleCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "deductibleBreak": { "type": "string", "minLength": 0, "maxLength": 6 },
        "deductibleCurrency": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "deductibleAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductibleMinAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductibleMaxAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "days": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "textKey": { "type": "string", "minLength": 0, "maxLength": 8 },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "percentage": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "percentageType": {
          "type": "string",
          "enum": ["PERCENTAGE__", "FRACTION_F", "PRO_MILLE_M", "UNKNOWN_Z"]
        }
      }
    },
    "OfferMarineDeductibleSetValues": {
      "type": "object",
      "required": ["offerMarineObject"],
      "properties": {
        "offerMarineObject": {
          "$ref": "#/definitions/SimpleOfferMarineObject"
        },
        "basicDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "addMachDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "collisionDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "iceDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "dailyDeductionAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductionDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "addMachDeductionDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "daysPerClaim": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "daysInAll": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "deductibleCode1": { "type": "string", "minLength": 0, "maxLength": 3 },
        "deductibleCode2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "deductibleCode1Amount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "deductibleCode2Amount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "valueLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferMarineDeductibleSetValueLines"
          }
        }
      }
    },
    "SimpleOfferMarineObject": {
      "type": "object",
      "required": ["agreementId"],
      "properties": {
        "agreementId": { "type": "string" },
        "id": { "type": "string" },
        "object": { "$ref": "#/definitions/SimpleInsuredObject" }
      }
    },
    "CopyDeductibleSetParams": {
      "type": "object",
      "properties": { "offerMarineSectionId": { "type": "string" } }
    },
    "OfferMarineConditionSet": {
      "type": "object",
      "required": ["offerMarineSectionId"],
      "properties": {
        "offerMarineSectionId": { "type": "string" },
        "id": { "type": "string" },
        "number": { "type": "string", "minLength": 0, "maxLength": 2 },
        "description": { "type": "string", "minLength": 0, "maxLength": 15 },
        "ffoType": {
          "type": "string",
          "enum": [
            "UNSPECIFIED_0",
            "_1_4_1",
            "_2_4_2",
            "_3_4_3",
            "_4_4_4",
            "NO_5"
          ]
        },
        "rdcType": {
          "type": "string",
          "enum": [
            "UNSPECIFIED_0",
            "_1_4_1",
            "_2_4_2",
            "_3_4_3",
            "_4_4_4",
            "NO_5"
          ]
        },
        "cro": { "type": "boolean" },
        "reinst": { "type": "boolean" },
        "gaAbsCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "gaAbsAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "warrantyDays": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "specialWarrantyDays": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "values": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineConditionSetValues" }
        },
        "stopUse": { "type": "boolean" }
      }
    },
    "OfferMarineConditionSetValues": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ATTACHMENT_A", "FIXED_TEXT_F", "VARIABLE_TEXT_V"]
        },
        "documentId": {
          "type": "integer",
          "format": "int64",
          "maximum": 999999999999,
          "exclusiveMaximum": false
        },
        "note": { "type": "string" },
        "textPlaceCode": { "type": "string" },
        "fixedTextTemplateId": { "type": "integer", "format": "int64" },
        "specialTextId": { "type": "string" }
      }
    },
    "CopySectionParams": {
      "type": "object",
      "required": ["offerMarineSection"],
      "properties": {
        "offerMarineSection": { "$ref": "#/definitions/OfferMarineSection" },
        "copyInsurancesWithValues": { "type": "boolean" },
        "copySubmissionAndFollowersWithValues": { "type": "boolean" }
      }
    },
    "OfferMarineInsurance": {
      "type": "object",
      "required": [
        "additionalCommision",
        "endHour",
        "grossPremium",
        "offerMarineObject",
        "offerMarineSectionId",
        "premiumDays",
        "rate",
        "startHour",
        "tloRate"
      ],
      "properties": {
        "offerMarineSectionId": { "type": "string" },
        "id": { "type": "string" },
        "offerMarineObject": {
          "$ref": "#/definitions/SimpleOfferMarineObject"
        },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "claimLeader": { "$ref": "#/definitions/SimplePerson" },
        "payer": { "$ref": "#/definitions/SimplePerson" },
        "totalAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "timeZone": { "type": "string", "minLength": 0, "maxLength": 3 },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "endHour": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "premiumDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.9999999,
          "exclusiveMaximum": false
        },
        "rate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "grossPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "tloRate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "additionalCommision": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "toBeAnnounced": { "type": "boolean" },
        "canModify": { "type": "boolean" },
        "premiumCalculationBasis": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        }
      }
    },
    "OfferMarineSectionTaxes": {
      "type": "object",
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string", "minLength": 0, "maxLength": 23 },
        "offerSectionId": { "type": "string", "minLength": 0, "maxLength": 20 },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "taxCode": { "type": "string", "minLength": 0, "maxLength": 6 },
        "baseAmount": {
          "type": "number",
          "format": "double",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "manualBaseAmount": { "type": "boolean" },
        "rate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "amount": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "manualAmount": { "type": "boolean" }
      }
    },
    "TaxInitParam": {
      "type": "object",
      "properties": {
        "taxCode": { "type": "string", "minLength": 0, "maxLength": 6 }
      }
    },
    "OfferMarineRebateSet": {
      "type": "object",
      "required": ["offerMarineSectionId"],
      "properties": {
        "offerMarineSectionId": { "type": "string" },
        "id": { "type": "string" },
        "number": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 15 },
        "values": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfferMarineRebateSetValues" }
        },
        "stopUse": { "type": "boolean" }
      }
    },
    "OfferMarineRebateSetValues": {
      "type": "object",
      "properties": {
        "ecdId": { "type": "string", "minLength": 0, "maxLength": 5 },
        "percentage": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "level": {
          "type": "integer",
          "format": "int32",
          "maximum": 9,
          "exclusiveMaximum": false
        },
        "text": { "type": "string", "minLength": 0, "maxLength": 35 },
        "deductOurComm": { "type": "boolean" }
      }
    },
    "OfferMarineInstallment": {
      "type": "object",
      "required": ["dueDate", "endDate", "share", "startDate"],
      "properties": {
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "dueDate": { "type": "string", "format": "date" },
        "share": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        }
      }
    },
    "CopyRebateSetParams": {
      "type": "object",
      "properties": { "offerMarineSectionId": { "type": "string" } }
    },
    "OfferMarineInsurancesInitParams": {
      "type": "object",
      "required": ["offerMarineSectionId"],
      "properties": {
        "offerMarineSectionId": { "type": "string" },
        "offerMarineObjectIds": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "OfferMarineClaimStatistics": {
      "type": "object",
      "required": ["interest", "offerMarineAgreementId", "year"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "offerMarineAgreementId": { "type": "string" },
        "year": { "type": "integer", "format": "int32" },
        "rateMarket": { "type": "string" },
        "interest": { "type": "string" },
        "currency": { "type": "string" },
        "manual": { "type": "boolean" },
        "claimDate": { "type": "string", "format": "date" },
        "claimCategory": { "type": "string" },
        "object": { "$ref": "#/definitions/SimpleInsuredObject" },
        "description": { "type": "string", "minLength": 0, "maxLength": 70 },
        "settled": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "outstanding": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "billingno": { "$ref": "#/definitions/SimplePerson" },
        "security": { "$ref": "#/definitions/SimplePerson" }
      }
    },
    "OfferMarineFleetStatistics": {
      "type": "object",
      "required": ["currency", "interest", "offerMarineAgreementId", "year"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "offerMarineAgreementId": { "type": "string" },
        "year": { "type": "integer", "format": "int32" },
        "rateMarket": { "type": "string" },
        "interest": { "type": "string" },
        "currency": { "type": "string" },
        "manual": { "type": "boolean" },
        "shipYears": {
          "type": "number",
          "format": "double",
          "maximum": 9999.99,
          "exclusiveMaximum": false
        },
        "netPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "claimsSettled": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "claimsOutstanding": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "lossRatio": { "type": "number", "format": "double" },
        "billingno": { "$ref": "#/definitions/SimplePerson" },
        "security": { "$ref": "#/definitions/SimplePerson" }
      }
    },
    "OfferMarineSubmission": {
      "type": "object",
      "required": ["billing", "premiumBase", "rateType"],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "submissionNumber": { "type": "integer", "format": "int32" },
        "followerSubmissionNumber": { "type": "integer", "format": "int32" },
        "billing": { "$ref": "#/definitions/SimplePerson" },
        "security": { "$ref": "#/definitions/SimplePerson" },
        "ratingLeader": { "$ref": "#/definitions/SimplePerson" },
        "rateMarket": { "type": "string", "minLength": 0, "maxLength": 3 },
        "primaryOrFollower": {
          "type": "string",
          "enum": ["FOLLOWER_F", "PRIMARY_P", "FOLLOWER_EXTERN_X", "UNSPEC_Z"]
        },
        "quotedShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "quotedShareSignature": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "quotedShareDate": { "type": "string", "format": "date" },
        "suggestedShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "suggestedShareSignature": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "suggestedShareDate": { "type": "string", "format": "date" },
        "firmOrder": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "firmOrderSignature": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "firmOrderDate": { "type": "string", "format": "date" },
        "finalAcceptanceSignature": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "finalAcceptanceDate": { "type": "string", "format": "date" },
        "acceptedRate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "acceptedTloRate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "acceptedUsdPerDwt": {
          "type": "number",
          "format": "double",
          "maximum": 999.99999,
          "exclusiveMaximum": false
        },
        "acceptedGrossPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "acceptedCommision": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "acceptedCommisionCode": {
          "type": "string",
          "enum": [
            "AGENT_OVERRIDER_A",
            "OUTGPREM_OVERR_C",
            "GROSS_G",
            "NET_L",
            "NO_COMMISSION_N",
            "OVERRIDER_COMM_O",
            "AFTER_PROFITCOM_P",
            "QSTCOV_DETERM_Q",
            "LOW_GROSS_OVERR_R",
            "TOTAL_COMM_T",
            "TOTAL_WRETURN_X",
            "NO_PREMIUM_Y"
          ]
        },
        "returnCommision": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "conditionSet": { "$ref": "#/definitions/OfferMarineConditionSet" },
        "rebateSet": { "$ref": "#/definitions/OfferMarineRebateSet" },
        "deductibleSet": { "$ref": "#/definitions/OfferMarineDeductibleSet" },
        "follower": { "type": "boolean" },
        "status": {
          "type": "string",
          "enum": [
            "NO_ORDER",
            "REFUSED",
            "FINAL_ACCEPTANCE",
            "FIRM_ORDER",
            "QUOTED",
            "OPEN"
          ]
        },
        "statusText": { "type": "string" },
        "section": { "$ref": "#/definitions/OfferMarineSection" },
        "parentSubmission": { "$ref": "#/definitions/OfferMarineSubmission" },
        "operations": {
          "$ref": "#/definitions/OfferMarineSubmissionOperations"
        },
        "rateType": {
          "type": "string",
          "enum": ["PER_ANNUM_PA", "PER_TIME_PT"]
        },
        "premiumBase": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        }
      }
    },
    "OfferMarineSubmissionOperations": {
      "type": "object",
      "properties": {
        "canModify": { "type": "boolean" },
        "canDelete": { "type": "boolean" },
        "canFinalAccept": { "type": "boolean" },
        "canUnFinalAccept": { "type": "boolean" },
        "canNoOrder": { "type": "boolean" },
        "canRefuse": { "type": "boolean" },
        "canOpen": { "type": "boolean" }
      }
    },
    "OfferMarineSubmissionInitParams": {
      "type": "object",
      "properties": { "offerMarineSectionId": { "type": "string" } }
    },
    "OfferMarinePlacement": {
      "type": "object",
      "required": ["insurer"],
      "properties": {
        "offerMarineSubmissionId": { "type": "string" },
        "id": { "type": "string" },
        "insurer": { "$ref": "#/definitions/SimplePerson" },
        "share": {
          "type": "number",
          "format": "double",
          "maximum": 9999.9999999999,
          "exclusiveMaximum": false
        },
        "reference": { "type": "string", "minLength": 0, "maxLength": 35 }
      }
    },
    "CopySubmissionParams": {
      "type": "object",
      "required": ["offerMarineSectionId"],
      "properties": { "offerMarineSectionId": { "type": "string" } }
    },
    "PersonSubType": {
      "type": "object",
      "properties": {
        "code": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "PersonRating": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "PersonOrganization": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "Person": {
      "type": "object",
      "required": [
        "creditDays",
        "daysBetweenPremiumNote",
        "dueDay",
        "language",
        "shortName",
        "specification",
        "subType",
        "type",
        "version"
      ],
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "shortName": { "type": "string", "minLength": 0, "maxLength": 15 },
        "type": {
          "type": "string",
          "enum": [
            "INSURANCE_COMP_1",
            "LAWYER_10",
            "AVR_ADJUSTER_11",
            "RATING_COMP_12",
            "MARITIME_AUTHOR_13",
            "INSURANCE_BROKE_2",
            "OPPOSITE_PARTY_21",
            "CLAIM_RECEIVER_22",
            "ONE_TIME_VENDOR_23",
            "COVER_3",
            "QUOTA_SHTREATY_4",
            "CUSTOMER_DIR_5",
            "EMPLOYEE_51",
            "CREW_52",
            "ASSOCIATION_55",
            "SALES_AGENT_6",
            "AGENTOFFICE_61",
            "AGENTEMPLOYEE_62",
            "SURVEYOR_7",
            "MORTGBANK_8",
            "ORGANOFFICE_81",
            "ORGEMPLOYEE_82",
            "CORRESPONDENT_83",
            "REGION_85",
            "MORTGOFFICE_86",
            "INTERIM_1_88",
            "MORTGAGEE_CON_9",
            "OWN_RETENTION_91",
            "CUTOFF_92",
            "OWN_COMM_BR_93",
            "TECHNICAL_ADDR_94",
            "INTERIM_ACCOUNT_95",
            "INGOING_VAT_96",
            "OUTGOING_VAT_97",
            "INTERIM_2_98",
            "OTHER_99"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "NORMAL_0",
            "EXPIRED_1",
            "DEAD_10",
            "CHANGED_COMPANY_2",
            "DISMISSED_CLAIM_3",
            "DISMISSED_PAYMT_4",
            "BANKRUPT_5",
            "SLOW_PAYER_6",
            "CUTOFF_7",
            "PREENTERED_89",
            "APPROVED_90",
            "LEGAL_RECOVERY_99"
          ]
        },
        "stopUse": { "type": "boolean" },
        "invisible": { "type": "boolean" },
        "canModify": { "type": "boolean" },
        "ssn": { "type": "string", "minLength": 0, "maxLength": 11 },
        "orgNo": { "type": "string", "minLength": 0, "maxLength": 20 },
        "sex": {
          "type": "string",
          "enum": ["FEMALE_F", "MALE_M", "UNSPECIFIED_Z"]
        },
        "specification": {
          "type": "string",
          "enum": [
            "NONE_0",
            "SINGLE_PERSON_1",
            "GROUP_OF_PERSON_2",
            "COMPANY_3",
            "INTERNAL_COMP_9"
          ]
        },
        "giroType": {
          "type": "string",
          "enum": ["NOTE_0", "BANK_1", "POST_2"]
        },
        "giroNumber": { "type": "string", "minLength": 0, "maxLength": 35 },
        "electronic": { "type": "boolean" },
        "phone": { "type": "string", "minLength": 0, "maxLength": 15 },
        "mobile": { "type": "string", "minLength": 0, "maxLength": 15 },
        "email": { "type": "string", "minLength": 0, "maxLength": 200 },
        "coAddress": { "type": "string", "minLength": 0, "maxLength": 40 },
        "streetAddress": { "type": "string", "minLength": 0, "maxLength": 40 },
        "address3": { "type": "string", "minLength": 0, "maxLength": 40 },
        "address4": { "type": "string", "minLength": 0, "maxLength": 40 },
        "postal": { "type": "string", "minLength": 0, "maxLength": 40 },
        "country": { "type": "string", "minLength": 0, "maxLength": 40 },
        "language": { "type": "string", "minLength": 0, "maxLength": 2 },
        "contactPersonName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "contactPersonPhone": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "contactPersonMobile": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "contactPersonEmail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "fax": { "type": "string", "minLength": 0, "maxLength": 15 },
        "ccEmail": { "type": "string", "minLength": 0, "maxLength": 400 },
        "alternatePayer": { "$ref": "#/definitions/SimplePerson" },
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "createdByUser": { "$ref": "#/definitions/SimpleUser" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "lastUpdatedByUser": { "$ref": "#/definitions/SimpleUser" },
        "owner": { "type": "string", "minLength": 0, "maxLength": 3 },
        "concern": { "$ref": "#/definitions/SimplePerson" },
        "subType": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "leiCode": { "type": "string", "minLength": 0, "maxLength": 20 },
        "busnDivision": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnSection": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnClass": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "office": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "agent": { "$ref": "#/definitions/SimplePerson" },
        "defaultMortgage": { "$ref": "#/definitions/SimplePerson" },
        "accountingRebate": { "type": "boolean" },
        "version": { "$ref": "#/definitions/PersonVersion" },
        "noteBreakUp": {
          "type": "string",
          "enum": ["ASSEMBLED_0", "SPLIT_NEWOLD_1"]
        },
        "creditDays": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "interestCalculation": { "type": "boolean" },
        "daysBetweenPremiumNote": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "dueDay": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "omitReminder": { "type": "boolean" },
        "omitPremiumNote": { "type": "boolean" },
        "collectFee": { "type": "boolean" },
        "instalmentMethod": {
          "type": "string",
          "enum": ["NORMAL_0", "_9125D_1", "EXACT_DAYS_2"]
        },
        "noteType": {
          "type": "string",
          "enum": [
            "MARINE_1_1_0",
            "CARGO_1",
            "AVIATION_2",
            "MARINE_2_1_3",
            "CLUB_4",
            "MARINE_4_1_5",
            "HI_6",
            "FEE_NON_MARINE_7",
            "AGENTNOTA_ATL_T_8"
          ]
        },
        "giroLastUpdated": { "type": "string", "format": "date" },
        "giroLastUpdatedBy": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "noteSort": {
          "type": "string",
          "enum": ["ONLY_CUSTOMER_0", "PER_OBJECT_1", "OTHER_2"]
        },
        "stopDunning": {
          "type": "string",
          "enum": ["NOT_SET_0", "RESPIT_TO_DATE_1", "STOP_ACC_DUNCO_2"]
        },
        "expiresDate": { "type": "string", "format": "date" },
        "giroAgreement": {
          "type": "string",
          "enum": ["ACTIVE_A", "BLOCKED_B", "CANCELLED_C", "NONE_Z"]
        },
        "customerIdentificationNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 25
        },
        "notifyCustomer": { "type": "boolean" },
        "claimInterest": { "type": "boolean" },
        "hasHistoricSettlement": { "type": "boolean" },
        "crmId": { "type": "string", "minLength": 0, "maxLength": 11 },
        "mailDistribution": { "type": "boolean" },
        "externalTransfer": { "type": "boolean" },
        "externalId": { "type": "string", "minLength": 0, "maxLength": 30 },
        "identity": { "type": "string", "minLength": 0, "maxLength": 6 },
        "smallCraft": { "type": "boolean" },
        "vatNo": { "type": "string", "minLength": 0, "maxLength": 20 },
        "vatIndicator": {
          "type": "string",
          "enum": ["NO_N", "YES_Y", "UNKNOWN_Z"]
        },
        "externalId2": { "type": "string", "minLength": 0, "maxLength": 30 },
        "defaultCurrency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "externalRegistrationDate": { "type": "string", "format": "date" },
        "dsfAddressCode": {
          "type": "string",
          "enum": [
            "VANLIG_BOSATT_0",
            "UTENRIKS_1",
            "MILIT_R_2",
            "SVALBARD_3",
            "KLIENTADRESSE_4",
            "UTEN_FAST_BO_5",
            "SPERRET_STRENG_6",
            "SPERRET_FORTRO_7",
            "PENDLER_8"
          ]
        },
        "einvoiceB2C": {
          "type": "string",
          "enum": ["ACTIVE_A", "BLOCKED_B", "CANCELLED_C", "NONE_Z"]
        },
        "einvoiceB2B": {
          "type": "string",
          "enum": ["ACTIVE_A", "BLOCKED_B", "CANCELLED_C", "NONE_Z"]
        },
        "einvoiceB2BType": { "type": "string" },
        "einvoiceB2CReference": { "type": "string" }
      }
    },
    "PersonVersion": {
      "type": "object",
      "required": [
        "countryCode",
        "id",
        "mediumDescription",
        "sanctionType",
        "status",
        "validFromDate",
        "version",
        "versionStatus"
      ],
      "properties": {
        "id": { "type": "string", "minLength": 0, "maxLength": 14 },
        "version": {
          "type": "integer",
          "format": "int32",
          "maximum": 999,
          "exclusiveMaximum": false
        },
        "versionStatus": {
          "type": "string",
          "enum": ["ACTIVE_A", "CANCELLED_C", "REPLACED_R", "WAITING_W"]
        },
        "validFromDate": { "type": "string", "format": "date" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string", "minLength": 0, "maxLength": 3 },
        "mediumDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "status": {
          "type": "string",
          "enum": [
            "NORMAL_0",
            "EXPIRED_1",
            "DEAD_10",
            "CHANGED_COMPANY_2",
            "DISMISSED_CLAIM_3",
            "DISMISSED_PAYMT_4",
            "BANKRUPT_5",
            "SLOW_PAYER_6",
            "CUTOFF_7",
            "PREENTERED_89",
            "APPROVED_90",
            "LEGAL_RECOVERY_99"
          ]
        },
        "bankruptDate": { "type": "string", "format": "date" },
        "countryCode": { "type": "string", "minLength": 0, "maxLength": 3 },
        "taxNo": { "type": "string", "minLength": 0, "maxLength": 4 },
        "districtCode": { "type": "string", "minLength": 0, "maxLength": 6 },
        "fortSectorCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999,
          "exclusiveMaximum": false
        },
        "fortTradeCode": { "type": "string", "minLength": 0, "maxLength": 5 },
        "vatRefund": { "type": "boolean" },
        "busnDivision": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnSection": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnClass": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "office": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "accountGroup": {
          "type": "string",
          "enum": [
            "AS_SPEC_IO_0",
            "DIRECT_1",
            "RECEIVED_2",
            "CEDED_3",
            "CLAIM_PAYMENTS_4",
            "AGENT_7",
            "TREATIES_8",
            "INTERIMS_9"
          ]
        },
        "accountNumber": { "$ref": "#/definitions/SimplePerson" },
        "bankSwiftCode": { "type": "string", "minLength": 0, "maxLength": 12 },
        "ratingCompany": { "$ref": "#/definitions/SimplePerson" },
        "ratingCode": { "type": "string", "minLength": 0, "maxLength": 4 },
        "ratingDate": { "type": "string", "format": "date" },
        "ratingReason": { "type": "string", "minLength": 0, "maxLength": 35 },
        "organizationId": { "type": "string", "minLength": 0, "maxLength": 11 },
        "ratingLastUpdatedBy": {
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "ratingLastUpdated": { "type": "string", "format": "date" },
        "sanctions": { "type": "boolean" },
        "sanctionDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "sanctionType": {
          "type": "string",
          "enum": ["NONE_N", "STOP_TREATMENT_S", "WARNING_W"]
        },
        "blockPayment": { "type": "boolean" },
        "markedArea": { "type": "string", "minLength": 0, "maxLength": 5 },
        "kycMeasure": {
          "type": "string",
          "enum": [
            "NONE_0",
            "SIMPLIFIED_1",
            "NORMAL_2",
            "ENHANCED_3",
            "HISTORY_4"
          ]
        },
        "kycDate": { "type": "string", "format": "date" },
        "kycComment": { "type": "string" },
        "kycPoliticallyExposedPerson": {
          "type": "string",
          "enum": ["KYC_NONE_B", "KYC_EVALUATION_E", "KYC_NO_N", "KYC_YES_Y"]
        }
      }
    },
    "PersonInitParams": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "INSURANCE_COMP_1",
            "LAWYER_10",
            "AVR_ADJUSTER_11",
            "RATING_COMP_12",
            "MARITIME_AUTHOR_13",
            "INSURANCE_BROKE_2",
            "OPPOSITE_PARTY_21",
            "CLAIM_RECEIVER_22",
            "ONE_TIME_VENDOR_23",
            "COVER_3",
            "QUOTA_SHTREATY_4",
            "CUSTOMER_DIR_5",
            "EMPLOYEE_51",
            "CREW_52",
            "ASSOCIATION_55",
            "SALES_AGENT_6",
            "AGENTOFFICE_61",
            "AGENTEMPLOYEE_62",
            "SURVEYOR_7",
            "MORTGBANK_8",
            "ORGANOFFICE_81",
            "ORGEMPLOYEE_82",
            "CORRESPONDENT_83",
            "REGION_85",
            "MORTGOFFICE_86",
            "INTERIM_1_88",
            "MORTGAGEE_CON_9",
            "OWN_RETENTION_91",
            "CUTOFF_92",
            "OWN_COMM_BR_93",
            "TECHNICAL_ADDR_94",
            "INTERIM_ACCOUNT_95",
            "INGOING_VAT_96",
            "OUTGOING_VAT_97",
            "INTERIM_2_98",
            "OTHER_99"
          ]
        }
      }
    },
    "PersonAddress": {
      "type": "object",
      "required": ["busnClass", "busnDivision", "busnSection", "function"],
      "properties": {
        "personId": { "type": "integer", "format": "int64" },
        "busnDivision": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnSection": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnClass": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "function": {
          "type": "string",
          "enum": [
            "MAINGENERAL_0",
            "PROVAD_ADRESS_1",
            "CLOSING_ADR_2",
            "CLAIM_ADR_3",
            "STATEMENT_ADRES_4",
            "STATMENT_IF_41",
            "STATEMENT_VESTA_42",
            "STATEMENT_STB_43",
            "STATEMENT_SAMPO_44",
            "STATMENT_PREMIU_48",
            "STATMENT_CLAIM_49",
            "POLICY_ADDRESS_5",
            "POLICY_TRIP_51",
            "PREMIUM_NOTE_6",
            "PREMNOTE_IF_61",
            "PREM_NOTE_VESTA_62",
            "PREMNOTESTOREBR_63",
            "PREMNOTESAMPO_64",
            "PREMNOTEGARDAB_67",
            "PREM_NOTE_TRIP_68",
            "REMINDER_69",
            "IMPORT_OCR_7",
            "TRIP_EMAIL_71",
            "ATG_8",
            "COMPANY_MAIL_80",
            "INTERNVAT_ADDR_85",
            "REGISTEROWNER_86",
            "PERFORMCARRIER_87",
            "DMLC_OWNER_88",
            "COFR_APPLICANT_89",
            "VISITING_ADRES_90"
          ]
        },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "firstName": { "type": "string", "minLength": 0, "maxLength": 40 },
        "lastName": { "type": "string", "minLength": 0, "maxLength": 40 },
        "reverseName": { "type": "string", "minLength": 0, "maxLength": 40 },
        "phone": { "type": "string", "minLength": 0, "maxLength": 15 },
        "mobile": { "type": "string", "minLength": 0, "maxLength": 15 },
        "email": { "type": "string", "minLength": 0, "maxLength": 200 },
        "coAddress": { "type": "string", "minLength": 0, "maxLength": 40 },
        "streetAddress": { "type": "string", "minLength": 0, "maxLength": 40 },
        "postal": { "type": "string", "minLength": 0, "maxLength": 40 },
        "country": { "type": "string", "minLength": 0, "maxLength": 40 },
        "internalNote": { "type": "string", "minLength": 0, "maxLength": 2000 },
        "webAddress": { "type": "string", "minLength": 0, "maxLength": 70 },
        "contactPersonName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "contactPersonPhone": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "contactPersonMobile": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "contactPersonEmail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "address3": { "type": "string", "minLength": 0, "maxLength": 40 },
        "address4": { "type": "string", "minLength": 0, "maxLength": 40 },
        "fax": { "type": "string", "minLength": 0, "maxLength": 15 },
        "ccEmail": { "type": "string", "minLength": 0, "maxLength": 400 },
        "externalId": { "type": "string", "minLength": 0, "maxLength": 30 },
        "externalRegistrationDate": { "type": "string", "format": "date" },
        "dsfAddressCode": {
          "type": "string",
          "enum": [
            "VANLIG_BOSATT_0",
            "UTENRIKS_1",
            "MILIT_R_2",
            "SVALBARD_3",
            "KLIENTADRESSE_4",
            "UTEN_FAST_BO_5",
            "SPERRET_STRENG_6",
            "SPERRET_FORTRO_7",
            "PENDLER_8"
          ]
        },
        "history": { "$ref": "#/definitions/History" }
      }
    },
    "PersonResponsible": {
      "type": "object",
      "required": [
        "busnClass",
        "busnDivision",
        "busnFunc",
        "busnSection",
        "office",
        "person"
      ],
      "properties": {
        "id": { "type": "string", "minLength": 0, "maxLength": 28 },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "busnDivision": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnSection": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnClass": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "office": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "busnFunc": {
          "type": "string",
          "enum": [
            "ACCOUNTING_ACC",
            "ACCOUNT_G_ACG",
            "CLAIM_ADJUSTER_CLJ",
            "CLAIM_CLM",
            "CLM_PRPAY_CLP",
            "PREMIUM_INS",
            "COMPANY_OWNER_OWN",
            "PARIS_WEB_P2W",
            "UNDERWRITING_U_W",
            "UW_SPECIALIST_UWS",
            "OTHER_ZZZ"
          ]
        },
        "responsible": { "type": "string", "minLength": 0, "maxLength": 3 },
        "responsible2": { "type": "string", "minLength": 0, "maxLength": 3 },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "email": { "type": "string", "minLength": 0, "maxLength": 200 },
        "phone": { "type": "string", "minLength": 0, "maxLength": 15 },
        "mobile": { "type": "string", "minLength": 0, "maxLength": 15 },
        "claimDepartment": { "type": "string", "minLength": 0, "maxLength": 6 }
      }
    },
    "SearchResultPersonResponsible": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/PersonResponsible" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "SearchResultPerson": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Person" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "PersonRole": {
      "type": "object",
      "required": ["roleTypeId"],
      "properties": {
        "person": { "$ref": "#/definitions/SimplePerson" },
        "note": { "type": "string", "minLength": 0, "maxLength": 200 },
        "reference": { "type": "string", "minLength": 0, "maxLength": 25 },
        "roleTypeId": { "type": "string", "minLength": 0, "maxLength": 6 }
      }
    },
    "EInvoiceResult": {
      "type": "object",
      "properties": {
        "person": { "$ref": "#/definitions/Person" },
        "personsUpdatedWithSameOrgno": {
          "type": "array",
          "items": { "$ref": "#/definitions/SimplePerson" }
        }
      }
    },
    "PersonInternationalIdentifier": {
      "type": "object",
      "required": ["code", "country", "personId", "type"],
      "properties": {
        "personId": { "type": "integer", "format": "int64" },
        "country": { "type": "string", "minLength": 0, "maxLength": 2 },
        "type": { "type": "string", "minLength": 0, "maxLength": 10 },
        "code": { "type": "string", "minLength": 0, "maxLength": 50 }
      }
    },
    "PersonBankAccount": {
      "type": "object",
      "required": ["currency"],
      "properties": {
        "personId": { "type": "integer", "format": "int64" },
        "currency": { "type": "string", "minLength": 0, "maxLength": 3 },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 99,
          "exclusiveMaximum": false
        },
        "bankAccountNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 35
        },
        "bank": { "$ref": "#/definitions/SimplePerson" },
        "bankSwiftCode": { "type": "string", "minLength": 0, "maxLength": 11 },
        "viaBankSwiftCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 11
        },
        "clearingSystemId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "accountHolder": { "type": "string", "minLength": 0, "maxLength": 70 },
        "bankName": { "type": "string", "minLength": 0, "maxLength": 35 },
        "bankAddress1": { "type": "string", "minLength": 0, "maxLength": 35 },
        "bankAddress2": { "type": "string", "minLength": 0, "maxLength": 35 },
        "bankAddress3": { "type": "string", "minLength": 0, "maxLength": 35 },
        "bankCountry": { "type": "string", "minLength": 0, "maxLength": 3 },
        "stopUse": { "type": "boolean" },
        "externalId": { "type": "string", "minLength": 0, "maxLength": 30 },
        "history": { "$ref": "#/definitions/History" }
      }
    },
    "PersonStatistic": {
      "type": "object",
      "properties": {
        "unpaidPremium": { "type": "number", "format": "double" },
        "insuredUnits": { "type": "integer", "format": "int32" },
        "totalInsuranceAmount": { "type": "number", "format": "double" },
        "currency": { "type": "string" },
        "yearStatistics": {
          "type": "array",
          "items": { "$ref": "#/definitions/YearStatistic" }
        }
      }
    },
    "PersonContact": {
      "type": "object",
      "properties": {
        "contact": { "$ref": "#/definitions/SimplePerson" },
        "primary": { "type": "boolean" },
        "type1": { "type": "boolean" },
        "type2": { "type": "boolean" },
        "type3": { "type": "boolean" },
        "type4": { "type": "boolean" },
        "type5": { "type": "boolean" },
        "type6": { "type": "boolean" },
        "type7": { "type": "boolean" },
        "type8": { "type": "boolean" },
        "type9": { "type": "boolean" },
        "type10": { "type": "boolean" },
        "type11": { "type": "boolean" },
        "type12": { "type": "boolean" },
        "type13": { "type": "boolean" },
        "type14": { "type": "boolean" },
        "type15": { "type": "boolean" }
      }
    },
    "Member": {
      "type": "object",
      "required": ["person", "policyFrameId"],
      "properties": {
        "id": { "type": "string" },
        "policyFrameId": { "type": "string" },
        "person": { "$ref": "#/definitions/Person" },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" }
      }
    },
    "SearchResultMember": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/Member" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "InsurancePrice": {
      "type": "object",
      "properties": {
        "price": { "type": "integer", "format": "int32" },
        "deductible": { "type": "integer", "format": "int32" }
      }
    },
    "CarInsurancePrice": {
      "type": "object",
      "properties": {
        "price": { "type": "integer", "format": "int32" },
        "deductible": { "type": "integer", "format": "int32" },
        "typeMatch": { "type": "string" },
        "kmPerYear": { "type": "integer", "format": "int32" }
      }
    },
    "PremiumView": {
      "type": "object",
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "string" },
        "agreementId": { "type": "string" },
        "year": { "type": "integer", "format": "int32" },
        "object": { "$ref": "#/definitions/SimpleInsuredObject" },
        "interest": { "type": "string" },
        "condition": { "type": "integer", "format": "int32" },
        "conditionSet": { "type": "string" },
        "businessSubclass": { "type": "integer", "format": "int32" },
        "startDate": { "type": "string", "format": "date" },
        "endDate": { "type": "string", "format": "date" },
        "coverageStartDate": { "type": "string", "format": "date" },
        "coverageChangeDate": { "type": "string", "format": "date" },
        "coverageEndDate": { "type": "string", "format": "date" },
        "agreementStartDate": { "type": "string", "format": "date" },
        "agreementEndDate": { "type": "string", "format": "date" },
        "rateMarket": { "type": "string" },
        "currency": { "type": "string" },
        "payer": { "$ref": "#/definitions/SimplePerson" },
        "originalInsured": { "$ref": "#/definitions/SimplePerson" },
        "totalAmount": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "ourShare": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "ownersDiscount": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "sourceDiscount": {
          "type": "number",
          "format": "double",
          "maximum": 9999.999999,
          "exclusiveMaximum": false
        },
        "premiumDays": {
          "type": "number",
          "format": "double",
          "maximum": 9999.9999999,
          "exclusiveMaximum": false
        },
        "rate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "netRate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "ingoingPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "outgoingRate": {
          "type": "number",
          "format": "double",
          "maximum": 999.9999999,
          "exclusiveMaximum": false
        },
        "outgoingPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "premium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "netPremium": {
          "type": "number",
          "format": "double",
          "maximum": 9999999999999.99,
          "exclusiveMaximum": false
        },
        "policyCoverId": { "type": "string" },
        "policyFrameId": { "type": "string" },
        "correctionType": {
          "type": "string",
          "enum": ["MAIN_0", "VALUE_1", "VALUPROL_2"]
        },
        "coverageStatus": {
          "type": "string",
          "enum": [
            "ACTIVE_A",
            "CANCELLED_C",
            "LOST_L",
            "PROLONGED_P",
            "REPLACED_R",
            "SOLD_S"
          ]
        },
        "status": {
          "type": "string",
          "enum": ["CANCEL_C", "ESTABLISHED_E", "OFFER_O", "QUOTE_Q", "WORK_W"]
        },
        "addStatus": {
          "type": "string",
          "enum": [
            "PROV_NOT_WRITTE_1",
            "ADD_BORD_NOT_WR_2",
            "WRITTEN_3",
            "WAIT_5",
            "PROV_ORDERED_8",
            "ADDBORD_ORDER_9"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "GENERAL_ADD_A",
            "BONUS_B",
            "CANCEL_C",
            "ADJUSTMENT_D",
            "RELEASE_CALL_E",
            "FEECOM_F",
            "GENERAL_RETURN_G",
            "DISCOUNT_H",
            "LAST_INSTALMENT_I",
            "NEWSALE_COMM_J",
            "LAYUP_L",
            "ORIGINAL_O",
            "PROLONGATION_P",
            "NEWCURR_Q",
            "RETURN_VALUE_R",
            "SALESTOP_S",
            "TRIP_T",
            "RI_OBJECT_DECL_U",
            "RECOVERY_V",
            "TEXT_ADENDUM_X",
            "AD_ING_COM_Y",
            "ADDOUT_COMM_Z"
          ]
        },
        "typeDescription": { "type": "string" },
        "code": { "type": "string" },
        "nonmarineObjectType": { "type": "string" },
        "coverageId": { "type": "string" },
        "warInterest": { "$ref": "#/definitions/WarInterestView" },
        "personalLedgerStatus": {
          "type": "string",
          "enum": ["OPEN_O", "SETTLED_S"]
        },
        "personalLedgerCallDate": { "type": "string", "format": "date" }
      }
    },
    "WarInterestView": {
      "type": "object",
      "properties": {
        "hullAndMachinery": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "hullValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "freightValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "totalValue": {
          "type": "integer",
          "format": "int64",
          "maximum": 9999999999999,
          "exclusiveMaximum": false
        },
        "inboundPort": { "type": "string" },
        "outboundPort": { "type": "string" }
      }
    },
    "SearchResultPremiumView": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/PremiumView" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "ReadAccessLog": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "entityType": {
          "type": "string",
          "enum": [
            "CLAIM",
            "OBJECT",
            "AGREEMENT",
            "NOTE_ACTIVITY",
            "LEGAL_PERSON",
            "DOCUMENT_ARCHIVE",
            "PREMIUM"
          ]
        },
        "entityKey": { "type": "string" },
        "accessDate": { "type": "string", "format": "date-time" },
        "accessedBy": { "type": "string" },
        "accessedByUser": { "$ref": "#/definitions/SimpleUser" },
        "networkId": { "type": "string" },
        "application": { "type": "string" },
        "ipAddress": { "type": "string" },
        "userAgent": { "type": "string" },
        "description": { "type": "string" }
      }
    },
    "SearchResultReadAccessLog": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ReadAccessLog" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "RoleType": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "personAllowed": { "type": "boolean" },
        "personTypesAllowed": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "INSURANCE_COMP_1",
              "LAWYER_10",
              "AVR_ADJUSTER_11",
              "RATING_COMP_12",
              "MARITIME_AUTHOR_13",
              "INSURANCE_BROKE_2",
              "OPPOSITE_PARTY_21",
              "CLAIM_RECEIVER_22",
              "ONE_TIME_VENDOR_23",
              "COVER_3",
              "QUOTA_SHTREATY_4",
              "CUSTOMER_DIR_5",
              "EMPLOYEE_51",
              "CREW_52",
              "ASSOCIATION_55",
              "SALES_AGENT_6",
              "AGENTOFFICE_61",
              "AGENTEMPLOYEE_62",
              "SURVEYOR_7",
              "MORTGBANK_8",
              "ORGANOFFICE_81",
              "ORGEMPLOYEE_82",
              "CORRESPONDENT_83",
              "REGION_85",
              "MORTGOFFICE_86",
              "INTERIM_1_88",
              "MORTGAGEE_CON_9",
              "OWN_RETENTION_91",
              "CUTOFF_92",
              "OWN_COMM_BR_93",
              "TECHNICAL_ADDR_94",
              "INTERIM_ACCOUNT_95",
              "INGOING_VAT_96",
              "OUTGOING_VAT_97",
              "INTERIM_2_98",
              "OTHER_99"
            ]
          }
        },
        "description": { "type": "string" }
      }
    },
    "ElectronicSignature": {
      "type": "object",
      "required": ["base64Img"],
      "properties": {
        "base64Img": { "type": "string", "minLength": 0, "maxLength": 2621440 }
      }
    },
    "SystemLanguage": {
      "type": "object",
      "properties": {
        "code": { "type": "string" },
        "description": { "type": "string" },
        "stopUse": { "type": "boolean" }
      }
    },
    "BuildInfo": {
      "type": "object",
      "properties": {
        "revision": { "type": "string" },
        "version": { "type": "string" },
        "client": { "type": "string" },
        "svnurl": { "type": "string" },
        "built": { "type": "string" },
        "builtFormated": { "type": "string" }
      }
    },
    "LoggerModel": {
      "type": "object",
      "required": ["className", "logLevel"],
      "properties": {
        "className": { "type": "string" },
        "logLevel": {
          "type": "string",
          "enum": ["ERROR", "WARN", "INFO", "DEBUG", "TRACE"]
        },
        "appender": { "type": "string" }
      }
    },
    "MainSettings": {
      "type": "object",
      "properties": { "attachmentAllowed": { "type": "boolean" } }
    },
    "ArchiveSettings": {
      "type": "object",
      "properties": {
        "documentElectronicSignatureEnabled": { "type": "boolean" },
        "documentFoldersEnabled": { "type": "boolean" }
      }
    },
    "CompanySettings": {
      "type": "object",
      "properties": {
        "clientNumber": { "type": "integer", "format": "int32" },
        "subClientNumber": { "type": "integer", "format": "int32" },
        "companyName": { "type": "string" },
        "baseCurrency": { "type": "string" },
        "baseLanguage": { "type": "string" },
        "availableAgreementTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MARINE_1",
              "AQUACULTURE_10",
              "PI_11",
              "ENERGY_2",
              "OIL_COMPANY_21",
              "CARGO_3",
              "PROPERTY_4",
              "AVIATION_5",
              "PRIVATE_50",
              "WAR_6",
              "NON_MARINE_7",
              "COASTAL_MARINE_8",
              "BUILDERS_RISK_9"
            ]
          }
        },
        "availableObjectTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "VESSEL_1",
              "RIG_OBJECT_10",
              "FLOATING_INSTAL_12",
              "LIABILITY_13",
              "AQUAOBJECT_14",
              "FISH_15",
              "AQUA_CARGO_16",
              "COASTAL_2",
              "CARGO_OBJECT_3",
              "ENERGY_PHYSOBJ_4",
              "ENERGY_PACKOBJ_5",
              "PROPERTY_6",
              "VEHICLE_FLEET_60",
              "VEHICLE_61",
              "MOTORCYKLE_62",
              "MACHINE_63",
              "TRAILER_64",
              "PERSON_GROUP_65",
              "PERSON_66",
              "AVIATION_OBJECT_7",
              "BUILDING_70",
              "CABIN_71",
              "ARBEIDSMASKIN_73",
              "INVENTORY_74",
              "LEISURE_BOAT_75",
              "VALUABLES_76",
              "ANIMAL_77",
              "PLACE_FLEET_78",
              "PLACE_8",
              "CUMULE_9"
            ]
          }
        }
      }
    },
    "ClaimSettings": {
      "type": "object",
      "properties": { "placementClaimInfoInUse": { "type": "boolean" } }
    },
    "PersonalLedgerSettings": {
      "type": "object",
      "properties": {
        "useThreeReferenceOnInvoiceOnElectronicRemittance": {
          "type": "boolean"
        }
      }
    },
    "SignatureSettings": {
      "type": "object",
      "properties": {
        "allowClaimDateOutsideCoveragePeriod": { "type": "boolean" }
      }
    },
    "OfferMarineBrokermodelSettings": {
      "type": "object",
      "properties": {
        "useDeclarations": { "type": "boolean" },
        "useDeductibleLists": { "type": "boolean" },
        "useGlobalConditions": { "type": "boolean" }
      }
    },
    "BackgroundSettings": {
      "type": "object",
      "properties": { "simpleAuthorizationRules": { "type": "boolean" } }
    },
    "AccountingSettings": {
      "type": "object",
      "properties": {
        "askForExchangedateForPremiumAndClaimTransactions": {
          "type": "boolean"
        }
      }
    },
    "Tag": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "integer", "format": "int64" },
        "name": { "type": "string", "minLength": 0, "maxLength": 40 },
        "type": { "type": "string", "enum": ["PERSON_PE"] },
        "description": { "type": "string", "minLength": 0, "maxLength": 255 }
      }
    },
    "TagRelation": {
      "type": "object",
      "required": ["key", "tag"],
      "properties": {
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "integer", "format": "int64" },
        "tag": { "$ref": "#/definitions/Tag" },
        "key": { "type": "string" }
      }
    },
    "SearchResultTagRelation": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/TagRelation" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "SearchResultTag": {
      "type": "object",
      "properties": {
        "result": { "type": "array", "items": { "$ref": "#/definitions/Tag" } },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "TimelineEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ACTIVITY",
            "MESSAGE",
            "CALL_NOTE",
            "MEETING_NOTE",
            "MAIL_NOTE",
            "OTHER_NOTE"
          ]
        },
        "title": { "type": "string" },
        "description": { "type": "string" },
        "codeValue": { "type": "string" },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "createdByUser": { "$ref": "#/definitions/SimpleUser" }
      }
    },
    "Translation": {
      "type": "object",
      "required": ["language"],
      "properties": {
        "language": { "$ref": "#/definitions/SystemLanguage" },
        "shortDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 6
        },
        "mediumDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 40 }
      }
    },
    "UsedHours": {
      "type": "object",
      "required": [
        "businessFunction",
        "description",
        "doneDate",
        "factor",
        "hours",
        "signatureId"
      ],
      "properties": {
        "created": { "type": "string", "format": "date" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date" },
        "lastUpdatedBy": { "type": "string" },
        "id": { "type": "integer", "format": "int64" },
        "doneDate": { "type": "string", "format": "date" },
        "hours": {
          "type": "number",
          "format": "double",
          "maximum": 999.99,
          "exclusiveMaximum": false
        },
        "factor": {
          "type": "number",
          "format": "double",
          "maximum": 9.9999,
          "exclusiveMaximum": false
        },
        "description": { "type": "string", "minLength": 0, "maxLength": 70 },
        "signatureId": { "type": "string", "minLength": 0, "maxLength": 3 },
        "businessFunction": {
          "type": "string",
          "enum": [
            "ACCOUNTING_ACC",
            "ACCOUNT_G_ACG",
            "CLAIM_ADJUSTER_CLJ",
            "CLAIM_CLM",
            "CLM_PRPAY_CLP",
            "PREMIUM_INS",
            "COMPANY_OWNER_OWN",
            "PARIS_WEB_P2W",
            "UNDERWRITING_U_W",
            "UW_SPECIALIST_UWS",
            "OTHER_ZZZ"
          ]
        },
        "usedHoursType": {
          "type": "string",
          "enum": ["AGREEMENT", "PERSON", "INSURANCE", "PREMIUM", "CLAIM"]
        },
        "usedHoursKey": { "type": "string" },
        "invoiced": { "type": "boolean" },
        "invoicedDate": { "type": "string", "format": "date" }
      }
    },
    "UsedHoursInitParams": {
      "type": "object",
      "required": ["usedHoursKey", "usedHoursType"],
      "properties": {
        "usedHoursType": {
          "type": "string",
          "enum": ["AGREEMENT", "PERSON", "INSURANCE", "PREMIUM", "CLAIM"]
        },
        "usedHoursKey": { "type": "string" }
      }
    },
    "UsedHoursSearchResult": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/UsedHours" }
        },
        "totalCount": { "type": "integer", "format": "int32" },
        "sumHours": { "type": "number", "format": "double" }
      }
    },
    "AsyncTask": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "message": { "type": "string" },
        "retries": { "type": "integer", "format": "int32" },
        "status": {
          "type": "string",
          "enum": [
            "CANCELLED_C",
            "ERROR_E",
            "IN_PROGRESS_I",
            "ORDERED_O",
            "PROCESSED_P"
          ]
        },
        "created": { "type": "string", "format": "date-time" },
        "nextRun": { "type": "string", "format": "date-time" }
      }
    },
    "SearchResultUserNotification": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserNotification" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "UserNotification": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "status": {
          "type": "string",
          "enum": [
            "COMPLETED_C",
            "ERROR_E",
            "ORDERED_O",
            "PROCESSING_P",
            "CANCELLED_X"
          ]
        },
        "data": { "type": "string" },
        "email": { "type": "string", "minLength": 0, "maxLength": 200 },
        "phone": { "type": "string", "minLength": 0, "maxLength": 15 },
        "userNotificationType": {
          "type": "string",
          "enum": ["MSGANSWER_1", "SCHEMATREATED_2", "DOCUMENT_APPROV_3"]
        },
        "sendType": {
          "type": "string",
          "enum": ["EMAIL_1", "SMS_2", "EMAIL_WITH_ATCH_3"]
        },
        "user": { "$ref": "#/definitions/SimpleUser" },
        "person": { "$ref": "#/definitions/SimplePerson" },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "started": { "type": "string", "format": "date-time" },
        "completed": { "type": "string", "format": "date-time" },
        "message": { "type": "string" },
        "asyncTask": { "$ref": "#/definitions/AsyncTask" }
      }
    },
    "UserNotificationType": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "type": {
          "type": "string",
          "enum": ["MSGANSWER_1", "SCHEMATREATED_2", "DOCUMENT_APPROV_3"]
        },
        "emailWithAttachmentsTemplateId": {
          "type": "integer",
          "format": "int64"
        },
        "defaultNotifySms": { "type": "boolean" },
        "defaultNotifyEmail": { "type": "boolean" },
        "description": { "type": "string", "minLength": 0, "maxLength": 40 },
        "translation": { "type": "string" },
        "emailTemplateId": { "type": "integer", "format": "int64" },
        "smsTemplateId": { "type": "integer", "format": "int64" }
      }
    },
    "SimpleUserPersonAccess": {
      "type": "object",
      "required": ["person"],
      "properties": {
        "person": { "$ref": "#/definitions/SimplePerson" },
        "manageUsers": { "type": "boolean" }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "ssn": { "type": "string", "minLength": 0, "maxLength": 15 },
        "name": { "type": "string", "minLength": 0, "maxLength": 80 },
        "title": { "type": "string", "minLength": 0, "maxLength": 255 },
        "email": { "type": "string", "minLength": 0, "maxLength": 200 },
        "phone": { "type": "string", "minLength": 0, "maxLength": 15 },
        "enabled": { "type": "boolean" },
        "passwordEnabled": { "type": "boolean" },
        "twoFactorAuthEnabled": { "type": "boolean" },
        "lastLogin": { "type": "string", "format": "date-time" },
        "created": { "type": "string", "format": "date-time" },
        "createdBy": { "type": "string" },
        "createdByUser": { "$ref": "#/definitions/SimpleUser" },
        "lastUpdated": { "type": "string", "format": "date-time" },
        "lastUpdatedBy": { "type": "string" },
        "lastUpdatedByUser": { "$ref": "#/definitions/SimpleUser" },
        "accessList": {
          "type": "array",
          "items": { "$ref": "#/definitions/SimpleUserPersonAccess" }
        }
      }
    },
    "UserNotificationSetting": {
      "type": "object",
      "properties": {
        "notificationType": { "$ref": "#/definitions/UserNotificationType" },
        "notifySms": { "type": "boolean" },
        "notifyEmail": { "type": "boolean" }
      }
    },
    "SearchResultUser": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    },
    "UserPersonAccess": {
      "type": "object",
      "required": ["person"],
      "properties": {
        "person": { "$ref": "#/definitions/SimplePerson" },
        "manageUsers": { "type": "boolean" }
      }
    },
    "ChangePassword": {
      "type": "object",
      "properties": {
        "oldPassword": { "type": "string" },
        "newPassword": { "type": "string" }
      }
    },
    "ViewResolver": {
      "type": "object",
      "properties": {
        "agreementType": { "type": "string" },
        "objectType": { "type": "string" },
        "businessType": { "type": "string" },
        "interest": { "type": "string" },
        "conditionCode": { "type": "string" },
        "function": { "type": "string" },
        "subFunction": { "type": "string" },
        "client": { "type": "string" },
        "subClient": { "type": "string" }
      }
    },
    "SearchResultWorkPlace": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/WorkPlace" }
        },
        "totalCount": { "type": "integer", "format": "int32" }
      }
    }
  }
}
